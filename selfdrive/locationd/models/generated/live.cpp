#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7209398253506453359) {
   out_7209398253506453359[0] = 0;
   out_7209398253506453359[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7209398253506453359[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7209398253506453359[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7209398253506453359[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7209398253506453359[5] = -sin(in_vec[1]);
   out_7209398253506453359[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7209398253506453359[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7209398253506453359[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7209398253506453359[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7209398253506453359[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7209398253506453359[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7209398253506453359[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7209398253506453359[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7209398253506453359[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7209398253506453359[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7209398253506453359[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7209398253506453359[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_994833721824308553) {
   out_994833721824308553[0] = delta_x[0] + nom_x[0];
   out_994833721824308553[1] = delta_x[1] + nom_x[1];
   out_994833721824308553[2] = delta_x[2] + nom_x[2];
   out_994833721824308553[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_994833721824308553[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_994833721824308553[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_994833721824308553[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_994833721824308553[7] = delta_x[6] + nom_x[7];
   out_994833721824308553[8] = delta_x[7] + nom_x[8];
   out_994833721824308553[9] = delta_x[8] + nom_x[9];
   out_994833721824308553[10] = delta_x[9] + nom_x[10];
   out_994833721824308553[11] = delta_x[10] + nom_x[11];
   out_994833721824308553[12] = delta_x[11] + nom_x[12];
   out_994833721824308553[13] = delta_x[12] + nom_x[13];
   out_994833721824308553[14] = delta_x[13] + nom_x[14];
   out_994833721824308553[15] = delta_x[14] + nom_x[15];
   out_994833721824308553[16] = delta_x[15] + nom_x[16];
   out_994833721824308553[17] = delta_x[16] + nom_x[17];
   out_994833721824308553[18] = delta_x[17] + nom_x[18];
   out_994833721824308553[19] = delta_x[18] + nom_x[19];
   out_994833721824308553[20] = delta_x[19] + nom_x[20];
   out_994833721824308553[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4632021964642794099) {
   out_4632021964642794099[0] = -nom_x[0] + true_x[0];
   out_4632021964642794099[1] = -nom_x[1] + true_x[1];
   out_4632021964642794099[2] = -nom_x[2] + true_x[2];
   out_4632021964642794099[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4632021964642794099[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4632021964642794099[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4632021964642794099[6] = -nom_x[7] + true_x[7];
   out_4632021964642794099[7] = -nom_x[8] + true_x[8];
   out_4632021964642794099[8] = -nom_x[9] + true_x[9];
   out_4632021964642794099[9] = -nom_x[10] + true_x[10];
   out_4632021964642794099[10] = -nom_x[11] + true_x[11];
   out_4632021964642794099[11] = -nom_x[12] + true_x[12];
   out_4632021964642794099[12] = -nom_x[13] + true_x[13];
   out_4632021964642794099[13] = -nom_x[14] + true_x[14];
   out_4632021964642794099[14] = -nom_x[15] + true_x[15];
   out_4632021964642794099[15] = -nom_x[16] + true_x[16];
   out_4632021964642794099[16] = -nom_x[17] + true_x[17];
   out_4632021964642794099[17] = -nom_x[18] + true_x[18];
   out_4632021964642794099[18] = -nom_x[19] + true_x[19];
   out_4632021964642794099[19] = -nom_x[20] + true_x[20];
   out_4632021964642794099[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7538307877216892783) {
   out_7538307877216892783[0] = 1.0;
   out_7538307877216892783[1] = 0;
   out_7538307877216892783[2] = 0;
   out_7538307877216892783[3] = 0;
   out_7538307877216892783[4] = 0;
   out_7538307877216892783[5] = 0;
   out_7538307877216892783[6] = 0;
   out_7538307877216892783[7] = 0;
   out_7538307877216892783[8] = 0;
   out_7538307877216892783[9] = 0;
   out_7538307877216892783[10] = 0;
   out_7538307877216892783[11] = 0;
   out_7538307877216892783[12] = 0;
   out_7538307877216892783[13] = 0;
   out_7538307877216892783[14] = 0;
   out_7538307877216892783[15] = 0;
   out_7538307877216892783[16] = 0;
   out_7538307877216892783[17] = 0;
   out_7538307877216892783[18] = 0;
   out_7538307877216892783[19] = 0;
   out_7538307877216892783[20] = 0;
   out_7538307877216892783[21] = 0;
   out_7538307877216892783[22] = 1.0;
   out_7538307877216892783[23] = 0;
   out_7538307877216892783[24] = 0;
   out_7538307877216892783[25] = 0;
   out_7538307877216892783[26] = 0;
   out_7538307877216892783[27] = 0;
   out_7538307877216892783[28] = 0;
   out_7538307877216892783[29] = 0;
   out_7538307877216892783[30] = 0;
   out_7538307877216892783[31] = 0;
   out_7538307877216892783[32] = 0;
   out_7538307877216892783[33] = 0;
   out_7538307877216892783[34] = 0;
   out_7538307877216892783[35] = 0;
   out_7538307877216892783[36] = 0;
   out_7538307877216892783[37] = 0;
   out_7538307877216892783[38] = 0;
   out_7538307877216892783[39] = 0;
   out_7538307877216892783[40] = 0;
   out_7538307877216892783[41] = 0;
   out_7538307877216892783[42] = 0;
   out_7538307877216892783[43] = 0;
   out_7538307877216892783[44] = 1.0;
   out_7538307877216892783[45] = 0;
   out_7538307877216892783[46] = 0;
   out_7538307877216892783[47] = 0;
   out_7538307877216892783[48] = 0;
   out_7538307877216892783[49] = 0;
   out_7538307877216892783[50] = 0;
   out_7538307877216892783[51] = 0;
   out_7538307877216892783[52] = 0;
   out_7538307877216892783[53] = 0;
   out_7538307877216892783[54] = 0;
   out_7538307877216892783[55] = 0;
   out_7538307877216892783[56] = 0;
   out_7538307877216892783[57] = 0;
   out_7538307877216892783[58] = 0;
   out_7538307877216892783[59] = 0;
   out_7538307877216892783[60] = 0;
   out_7538307877216892783[61] = 0;
   out_7538307877216892783[62] = 0;
   out_7538307877216892783[63] = 0;
   out_7538307877216892783[64] = 0;
   out_7538307877216892783[65] = 0;
   out_7538307877216892783[66] = -0.5*state[4];
   out_7538307877216892783[67] = -0.5*state[5];
   out_7538307877216892783[68] = -0.5*state[6];
   out_7538307877216892783[69] = 0;
   out_7538307877216892783[70] = 0;
   out_7538307877216892783[71] = 0;
   out_7538307877216892783[72] = 0;
   out_7538307877216892783[73] = 0;
   out_7538307877216892783[74] = 0;
   out_7538307877216892783[75] = 0;
   out_7538307877216892783[76] = 0;
   out_7538307877216892783[77] = 0;
   out_7538307877216892783[78] = 0;
   out_7538307877216892783[79] = 0;
   out_7538307877216892783[80] = 0;
   out_7538307877216892783[81] = 0;
   out_7538307877216892783[82] = 0;
   out_7538307877216892783[83] = 0;
   out_7538307877216892783[84] = 0;
   out_7538307877216892783[85] = 0;
   out_7538307877216892783[86] = 0;
   out_7538307877216892783[87] = 0.5*state[3];
   out_7538307877216892783[88] = 0.5*state[6];
   out_7538307877216892783[89] = -0.5*state[5];
   out_7538307877216892783[90] = 0;
   out_7538307877216892783[91] = 0;
   out_7538307877216892783[92] = 0;
   out_7538307877216892783[93] = 0;
   out_7538307877216892783[94] = 0;
   out_7538307877216892783[95] = 0;
   out_7538307877216892783[96] = 0;
   out_7538307877216892783[97] = 0;
   out_7538307877216892783[98] = 0;
   out_7538307877216892783[99] = 0;
   out_7538307877216892783[100] = 0;
   out_7538307877216892783[101] = 0;
   out_7538307877216892783[102] = 0;
   out_7538307877216892783[103] = 0;
   out_7538307877216892783[104] = 0;
   out_7538307877216892783[105] = 0;
   out_7538307877216892783[106] = 0;
   out_7538307877216892783[107] = 0;
   out_7538307877216892783[108] = -0.5*state[6];
   out_7538307877216892783[109] = 0.5*state[3];
   out_7538307877216892783[110] = 0.5*state[4];
   out_7538307877216892783[111] = 0;
   out_7538307877216892783[112] = 0;
   out_7538307877216892783[113] = 0;
   out_7538307877216892783[114] = 0;
   out_7538307877216892783[115] = 0;
   out_7538307877216892783[116] = 0;
   out_7538307877216892783[117] = 0;
   out_7538307877216892783[118] = 0;
   out_7538307877216892783[119] = 0;
   out_7538307877216892783[120] = 0;
   out_7538307877216892783[121] = 0;
   out_7538307877216892783[122] = 0;
   out_7538307877216892783[123] = 0;
   out_7538307877216892783[124] = 0;
   out_7538307877216892783[125] = 0;
   out_7538307877216892783[126] = 0;
   out_7538307877216892783[127] = 0;
   out_7538307877216892783[128] = 0;
   out_7538307877216892783[129] = 0.5*state[5];
   out_7538307877216892783[130] = -0.5*state[4];
   out_7538307877216892783[131] = 0.5*state[3];
   out_7538307877216892783[132] = 0;
   out_7538307877216892783[133] = 0;
   out_7538307877216892783[134] = 0;
   out_7538307877216892783[135] = 0;
   out_7538307877216892783[136] = 0;
   out_7538307877216892783[137] = 0;
   out_7538307877216892783[138] = 0;
   out_7538307877216892783[139] = 0;
   out_7538307877216892783[140] = 0;
   out_7538307877216892783[141] = 0;
   out_7538307877216892783[142] = 0;
   out_7538307877216892783[143] = 0;
   out_7538307877216892783[144] = 0;
   out_7538307877216892783[145] = 0;
   out_7538307877216892783[146] = 0;
   out_7538307877216892783[147] = 0;
   out_7538307877216892783[148] = 0;
   out_7538307877216892783[149] = 0;
   out_7538307877216892783[150] = 0;
   out_7538307877216892783[151] = 0;
   out_7538307877216892783[152] = 0;
   out_7538307877216892783[153] = 1.0;
   out_7538307877216892783[154] = 0;
   out_7538307877216892783[155] = 0;
   out_7538307877216892783[156] = 0;
   out_7538307877216892783[157] = 0;
   out_7538307877216892783[158] = 0;
   out_7538307877216892783[159] = 0;
   out_7538307877216892783[160] = 0;
   out_7538307877216892783[161] = 0;
   out_7538307877216892783[162] = 0;
   out_7538307877216892783[163] = 0;
   out_7538307877216892783[164] = 0;
   out_7538307877216892783[165] = 0;
   out_7538307877216892783[166] = 0;
   out_7538307877216892783[167] = 0;
   out_7538307877216892783[168] = 0;
   out_7538307877216892783[169] = 0;
   out_7538307877216892783[170] = 0;
   out_7538307877216892783[171] = 0;
   out_7538307877216892783[172] = 0;
   out_7538307877216892783[173] = 0;
   out_7538307877216892783[174] = 0;
   out_7538307877216892783[175] = 1.0;
   out_7538307877216892783[176] = 0;
   out_7538307877216892783[177] = 0;
   out_7538307877216892783[178] = 0;
   out_7538307877216892783[179] = 0;
   out_7538307877216892783[180] = 0;
   out_7538307877216892783[181] = 0;
   out_7538307877216892783[182] = 0;
   out_7538307877216892783[183] = 0;
   out_7538307877216892783[184] = 0;
   out_7538307877216892783[185] = 0;
   out_7538307877216892783[186] = 0;
   out_7538307877216892783[187] = 0;
   out_7538307877216892783[188] = 0;
   out_7538307877216892783[189] = 0;
   out_7538307877216892783[190] = 0;
   out_7538307877216892783[191] = 0;
   out_7538307877216892783[192] = 0;
   out_7538307877216892783[193] = 0;
   out_7538307877216892783[194] = 0;
   out_7538307877216892783[195] = 0;
   out_7538307877216892783[196] = 0;
   out_7538307877216892783[197] = 1.0;
   out_7538307877216892783[198] = 0;
   out_7538307877216892783[199] = 0;
   out_7538307877216892783[200] = 0;
   out_7538307877216892783[201] = 0;
   out_7538307877216892783[202] = 0;
   out_7538307877216892783[203] = 0;
   out_7538307877216892783[204] = 0;
   out_7538307877216892783[205] = 0;
   out_7538307877216892783[206] = 0;
   out_7538307877216892783[207] = 0;
   out_7538307877216892783[208] = 0;
   out_7538307877216892783[209] = 0;
   out_7538307877216892783[210] = 0;
   out_7538307877216892783[211] = 0;
   out_7538307877216892783[212] = 0;
   out_7538307877216892783[213] = 0;
   out_7538307877216892783[214] = 0;
   out_7538307877216892783[215] = 0;
   out_7538307877216892783[216] = 0;
   out_7538307877216892783[217] = 0;
   out_7538307877216892783[218] = 0;
   out_7538307877216892783[219] = 1.0;
   out_7538307877216892783[220] = 0;
   out_7538307877216892783[221] = 0;
   out_7538307877216892783[222] = 0;
   out_7538307877216892783[223] = 0;
   out_7538307877216892783[224] = 0;
   out_7538307877216892783[225] = 0;
   out_7538307877216892783[226] = 0;
   out_7538307877216892783[227] = 0;
   out_7538307877216892783[228] = 0;
   out_7538307877216892783[229] = 0;
   out_7538307877216892783[230] = 0;
   out_7538307877216892783[231] = 0;
   out_7538307877216892783[232] = 0;
   out_7538307877216892783[233] = 0;
   out_7538307877216892783[234] = 0;
   out_7538307877216892783[235] = 0;
   out_7538307877216892783[236] = 0;
   out_7538307877216892783[237] = 0;
   out_7538307877216892783[238] = 0;
   out_7538307877216892783[239] = 0;
   out_7538307877216892783[240] = 0;
   out_7538307877216892783[241] = 1.0;
   out_7538307877216892783[242] = 0;
   out_7538307877216892783[243] = 0;
   out_7538307877216892783[244] = 0;
   out_7538307877216892783[245] = 0;
   out_7538307877216892783[246] = 0;
   out_7538307877216892783[247] = 0;
   out_7538307877216892783[248] = 0;
   out_7538307877216892783[249] = 0;
   out_7538307877216892783[250] = 0;
   out_7538307877216892783[251] = 0;
   out_7538307877216892783[252] = 0;
   out_7538307877216892783[253] = 0;
   out_7538307877216892783[254] = 0;
   out_7538307877216892783[255] = 0;
   out_7538307877216892783[256] = 0;
   out_7538307877216892783[257] = 0;
   out_7538307877216892783[258] = 0;
   out_7538307877216892783[259] = 0;
   out_7538307877216892783[260] = 0;
   out_7538307877216892783[261] = 0;
   out_7538307877216892783[262] = 0;
   out_7538307877216892783[263] = 1.0;
   out_7538307877216892783[264] = 0;
   out_7538307877216892783[265] = 0;
   out_7538307877216892783[266] = 0;
   out_7538307877216892783[267] = 0;
   out_7538307877216892783[268] = 0;
   out_7538307877216892783[269] = 0;
   out_7538307877216892783[270] = 0;
   out_7538307877216892783[271] = 0;
   out_7538307877216892783[272] = 0;
   out_7538307877216892783[273] = 0;
   out_7538307877216892783[274] = 0;
   out_7538307877216892783[275] = 0;
   out_7538307877216892783[276] = 0;
   out_7538307877216892783[277] = 0;
   out_7538307877216892783[278] = 0;
   out_7538307877216892783[279] = 0;
   out_7538307877216892783[280] = 0;
   out_7538307877216892783[281] = 0;
   out_7538307877216892783[282] = 0;
   out_7538307877216892783[283] = 0;
   out_7538307877216892783[284] = 0;
   out_7538307877216892783[285] = 1.0;
   out_7538307877216892783[286] = 0;
   out_7538307877216892783[287] = 0;
   out_7538307877216892783[288] = 0;
   out_7538307877216892783[289] = 0;
   out_7538307877216892783[290] = 0;
   out_7538307877216892783[291] = 0;
   out_7538307877216892783[292] = 0;
   out_7538307877216892783[293] = 0;
   out_7538307877216892783[294] = 0;
   out_7538307877216892783[295] = 0;
   out_7538307877216892783[296] = 0;
   out_7538307877216892783[297] = 0;
   out_7538307877216892783[298] = 0;
   out_7538307877216892783[299] = 0;
   out_7538307877216892783[300] = 0;
   out_7538307877216892783[301] = 0;
   out_7538307877216892783[302] = 0;
   out_7538307877216892783[303] = 0;
   out_7538307877216892783[304] = 0;
   out_7538307877216892783[305] = 0;
   out_7538307877216892783[306] = 0;
   out_7538307877216892783[307] = 1.0;
   out_7538307877216892783[308] = 0;
   out_7538307877216892783[309] = 0;
   out_7538307877216892783[310] = 0;
   out_7538307877216892783[311] = 0;
   out_7538307877216892783[312] = 0;
   out_7538307877216892783[313] = 0;
   out_7538307877216892783[314] = 0;
   out_7538307877216892783[315] = 0;
   out_7538307877216892783[316] = 0;
   out_7538307877216892783[317] = 0;
   out_7538307877216892783[318] = 0;
   out_7538307877216892783[319] = 0;
   out_7538307877216892783[320] = 0;
   out_7538307877216892783[321] = 0;
   out_7538307877216892783[322] = 0;
   out_7538307877216892783[323] = 0;
   out_7538307877216892783[324] = 0;
   out_7538307877216892783[325] = 0;
   out_7538307877216892783[326] = 0;
   out_7538307877216892783[327] = 0;
   out_7538307877216892783[328] = 0;
   out_7538307877216892783[329] = 1.0;
   out_7538307877216892783[330] = 0;
   out_7538307877216892783[331] = 0;
   out_7538307877216892783[332] = 0;
   out_7538307877216892783[333] = 0;
   out_7538307877216892783[334] = 0;
   out_7538307877216892783[335] = 0;
   out_7538307877216892783[336] = 0;
   out_7538307877216892783[337] = 0;
   out_7538307877216892783[338] = 0;
   out_7538307877216892783[339] = 0;
   out_7538307877216892783[340] = 0;
   out_7538307877216892783[341] = 0;
   out_7538307877216892783[342] = 0;
   out_7538307877216892783[343] = 0;
   out_7538307877216892783[344] = 0;
   out_7538307877216892783[345] = 0;
   out_7538307877216892783[346] = 0;
   out_7538307877216892783[347] = 0;
   out_7538307877216892783[348] = 0;
   out_7538307877216892783[349] = 0;
   out_7538307877216892783[350] = 0;
   out_7538307877216892783[351] = 1.0;
   out_7538307877216892783[352] = 0;
   out_7538307877216892783[353] = 0;
   out_7538307877216892783[354] = 0;
   out_7538307877216892783[355] = 0;
   out_7538307877216892783[356] = 0;
   out_7538307877216892783[357] = 0;
   out_7538307877216892783[358] = 0;
   out_7538307877216892783[359] = 0;
   out_7538307877216892783[360] = 0;
   out_7538307877216892783[361] = 0;
   out_7538307877216892783[362] = 0;
   out_7538307877216892783[363] = 0;
   out_7538307877216892783[364] = 0;
   out_7538307877216892783[365] = 0;
   out_7538307877216892783[366] = 0;
   out_7538307877216892783[367] = 0;
   out_7538307877216892783[368] = 0;
   out_7538307877216892783[369] = 0;
   out_7538307877216892783[370] = 0;
   out_7538307877216892783[371] = 0;
   out_7538307877216892783[372] = 0;
   out_7538307877216892783[373] = 1.0;
   out_7538307877216892783[374] = 0;
   out_7538307877216892783[375] = 0;
   out_7538307877216892783[376] = 0;
   out_7538307877216892783[377] = 0;
   out_7538307877216892783[378] = 0;
   out_7538307877216892783[379] = 0;
   out_7538307877216892783[380] = 0;
   out_7538307877216892783[381] = 0;
   out_7538307877216892783[382] = 0;
   out_7538307877216892783[383] = 0;
   out_7538307877216892783[384] = 0;
   out_7538307877216892783[385] = 0;
   out_7538307877216892783[386] = 0;
   out_7538307877216892783[387] = 0;
   out_7538307877216892783[388] = 0;
   out_7538307877216892783[389] = 0;
   out_7538307877216892783[390] = 0;
   out_7538307877216892783[391] = 0;
   out_7538307877216892783[392] = 0;
   out_7538307877216892783[393] = 0;
   out_7538307877216892783[394] = 0;
   out_7538307877216892783[395] = 1.0;
   out_7538307877216892783[396] = 0;
   out_7538307877216892783[397] = 0;
   out_7538307877216892783[398] = 0;
   out_7538307877216892783[399] = 0;
   out_7538307877216892783[400] = 0;
   out_7538307877216892783[401] = 0;
   out_7538307877216892783[402] = 0;
   out_7538307877216892783[403] = 0;
   out_7538307877216892783[404] = 0;
   out_7538307877216892783[405] = 0;
   out_7538307877216892783[406] = 0;
   out_7538307877216892783[407] = 0;
   out_7538307877216892783[408] = 0;
   out_7538307877216892783[409] = 0;
   out_7538307877216892783[410] = 0;
   out_7538307877216892783[411] = 0;
   out_7538307877216892783[412] = 0;
   out_7538307877216892783[413] = 0;
   out_7538307877216892783[414] = 0;
   out_7538307877216892783[415] = 0;
   out_7538307877216892783[416] = 0;
   out_7538307877216892783[417] = 1.0;
   out_7538307877216892783[418] = 0;
   out_7538307877216892783[419] = 0;
   out_7538307877216892783[420] = 0;
   out_7538307877216892783[421] = 0;
   out_7538307877216892783[422] = 0;
   out_7538307877216892783[423] = 0;
   out_7538307877216892783[424] = 0;
   out_7538307877216892783[425] = 0;
   out_7538307877216892783[426] = 0;
   out_7538307877216892783[427] = 0;
   out_7538307877216892783[428] = 0;
   out_7538307877216892783[429] = 0;
   out_7538307877216892783[430] = 0;
   out_7538307877216892783[431] = 0;
   out_7538307877216892783[432] = 0;
   out_7538307877216892783[433] = 0;
   out_7538307877216892783[434] = 0;
   out_7538307877216892783[435] = 0;
   out_7538307877216892783[436] = 0;
   out_7538307877216892783[437] = 0;
   out_7538307877216892783[438] = 0;
   out_7538307877216892783[439] = 1.0;
   out_7538307877216892783[440] = 0;
   out_7538307877216892783[441] = 0;
   out_7538307877216892783[442] = 0;
   out_7538307877216892783[443] = 0;
   out_7538307877216892783[444] = 0;
   out_7538307877216892783[445] = 0;
   out_7538307877216892783[446] = 0;
   out_7538307877216892783[447] = 0;
   out_7538307877216892783[448] = 0;
   out_7538307877216892783[449] = 0;
   out_7538307877216892783[450] = 0;
   out_7538307877216892783[451] = 0;
   out_7538307877216892783[452] = 0;
   out_7538307877216892783[453] = 0;
   out_7538307877216892783[454] = 0;
   out_7538307877216892783[455] = 0;
   out_7538307877216892783[456] = 0;
   out_7538307877216892783[457] = 0;
   out_7538307877216892783[458] = 0;
   out_7538307877216892783[459] = 0;
   out_7538307877216892783[460] = 0;
   out_7538307877216892783[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7035001334654508742) {
   out_7035001334654508742[0] = dt*state[7] + state[0];
   out_7035001334654508742[1] = dt*state[8] + state[1];
   out_7035001334654508742[2] = dt*state[9] + state[2];
   out_7035001334654508742[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7035001334654508742[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7035001334654508742[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7035001334654508742[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7035001334654508742[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7035001334654508742[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7035001334654508742[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7035001334654508742[10] = state[10];
   out_7035001334654508742[11] = state[11];
   out_7035001334654508742[12] = state[12];
   out_7035001334654508742[13] = state[13];
   out_7035001334654508742[14] = state[14];
   out_7035001334654508742[15] = state[15];
   out_7035001334654508742[16] = state[16];
   out_7035001334654508742[17] = state[17];
   out_7035001334654508742[18] = state[18];
   out_7035001334654508742[19] = state[19];
   out_7035001334654508742[20] = state[20];
   out_7035001334654508742[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8435949222489011857) {
   out_8435949222489011857[0] = 1;
   out_8435949222489011857[1] = 0;
   out_8435949222489011857[2] = 0;
   out_8435949222489011857[3] = 0;
   out_8435949222489011857[4] = 0;
   out_8435949222489011857[5] = 0;
   out_8435949222489011857[6] = dt;
   out_8435949222489011857[7] = 0;
   out_8435949222489011857[8] = 0;
   out_8435949222489011857[9] = 0;
   out_8435949222489011857[10] = 0;
   out_8435949222489011857[11] = 0;
   out_8435949222489011857[12] = 0;
   out_8435949222489011857[13] = 0;
   out_8435949222489011857[14] = 0;
   out_8435949222489011857[15] = 0;
   out_8435949222489011857[16] = 0;
   out_8435949222489011857[17] = 0;
   out_8435949222489011857[18] = 0;
   out_8435949222489011857[19] = 0;
   out_8435949222489011857[20] = 0;
   out_8435949222489011857[21] = 0;
   out_8435949222489011857[22] = 1;
   out_8435949222489011857[23] = 0;
   out_8435949222489011857[24] = 0;
   out_8435949222489011857[25] = 0;
   out_8435949222489011857[26] = 0;
   out_8435949222489011857[27] = 0;
   out_8435949222489011857[28] = dt;
   out_8435949222489011857[29] = 0;
   out_8435949222489011857[30] = 0;
   out_8435949222489011857[31] = 0;
   out_8435949222489011857[32] = 0;
   out_8435949222489011857[33] = 0;
   out_8435949222489011857[34] = 0;
   out_8435949222489011857[35] = 0;
   out_8435949222489011857[36] = 0;
   out_8435949222489011857[37] = 0;
   out_8435949222489011857[38] = 0;
   out_8435949222489011857[39] = 0;
   out_8435949222489011857[40] = 0;
   out_8435949222489011857[41] = 0;
   out_8435949222489011857[42] = 0;
   out_8435949222489011857[43] = 0;
   out_8435949222489011857[44] = 1;
   out_8435949222489011857[45] = 0;
   out_8435949222489011857[46] = 0;
   out_8435949222489011857[47] = 0;
   out_8435949222489011857[48] = 0;
   out_8435949222489011857[49] = 0;
   out_8435949222489011857[50] = dt;
   out_8435949222489011857[51] = 0;
   out_8435949222489011857[52] = 0;
   out_8435949222489011857[53] = 0;
   out_8435949222489011857[54] = 0;
   out_8435949222489011857[55] = 0;
   out_8435949222489011857[56] = 0;
   out_8435949222489011857[57] = 0;
   out_8435949222489011857[58] = 0;
   out_8435949222489011857[59] = 0;
   out_8435949222489011857[60] = 0;
   out_8435949222489011857[61] = 0;
   out_8435949222489011857[62] = 0;
   out_8435949222489011857[63] = 0;
   out_8435949222489011857[64] = 0;
   out_8435949222489011857[65] = 0;
   out_8435949222489011857[66] = 1;
   out_8435949222489011857[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8435949222489011857[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8435949222489011857[69] = 0;
   out_8435949222489011857[70] = 0;
   out_8435949222489011857[71] = 0;
   out_8435949222489011857[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8435949222489011857[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8435949222489011857[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8435949222489011857[75] = 0;
   out_8435949222489011857[76] = 0;
   out_8435949222489011857[77] = 0;
   out_8435949222489011857[78] = 0;
   out_8435949222489011857[79] = 0;
   out_8435949222489011857[80] = 0;
   out_8435949222489011857[81] = 0;
   out_8435949222489011857[82] = 0;
   out_8435949222489011857[83] = 0;
   out_8435949222489011857[84] = 0;
   out_8435949222489011857[85] = 0;
   out_8435949222489011857[86] = 0;
   out_8435949222489011857[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8435949222489011857[88] = 1;
   out_8435949222489011857[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8435949222489011857[90] = 0;
   out_8435949222489011857[91] = 0;
   out_8435949222489011857[92] = 0;
   out_8435949222489011857[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8435949222489011857[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8435949222489011857[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8435949222489011857[96] = 0;
   out_8435949222489011857[97] = 0;
   out_8435949222489011857[98] = 0;
   out_8435949222489011857[99] = 0;
   out_8435949222489011857[100] = 0;
   out_8435949222489011857[101] = 0;
   out_8435949222489011857[102] = 0;
   out_8435949222489011857[103] = 0;
   out_8435949222489011857[104] = 0;
   out_8435949222489011857[105] = 0;
   out_8435949222489011857[106] = 0;
   out_8435949222489011857[107] = 0;
   out_8435949222489011857[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8435949222489011857[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8435949222489011857[110] = 1;
   out_8435949222489011857[111] = 0;
   out_8435949222489011857[112] = 0;
   out_8435949222489011857[113] = 0;
   out_8435949222489011857[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8435949222489011857[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8435949222489011857[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8435949222489011857[117] = 0;
   out_8435949222489011857[118] = 0;
   out_8435949222489011857[119] = 0;
   out_8435949222489011857[120] = 0;
   out_8435949222489011857[121] = 0;
   out_8435949222489011857[122] = 0;
   out_8435949222489011857[123] = 0;
   out_8435949222489011857[124] = 0;
   out_8435949222489011857[125] = 0;
   out_8435949222489011857[126] = 0;
   out_8435949222489011857[127] = 0;
   out_8435949222489011857[128] = 0;
   out_8435949222489011857[129] = 0;
   out_8435949222489011857[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8435949222489011857[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8435949222489011857[132] = 1;
   out_8435949222489011857[133] = 0;
   out_8435949222489011857[134] = 0;
   out_8435949222489011857[135] = 0;
   out_8435949222489011857[136] = 0;
   out_8435949222489011857[137] = 0;
   out_8435949222489011857[138] = 0;
   out_8435949222489011857[139] = 0;
   out_8435949222489011857[140] = 0;
   out_8435949222489011857[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8435949222489011857[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8435949222489011857[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8435949222489011857[144] = 0;
   out_8435949222489011857[145] = 0;
   out_8435949222489011857[146] = 0;
   out_8435949222489011857[147] = 0;
   out_8435949222489011857[148] = 0;
   out_8435949222489011857[149] = 0;
   out_8435949222489011857[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8435949222489011857[151] = 0;
   out_8435949222489011857[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8435949222489011857[153] = 0;
   out_8435949222489011857[154] = 1;
   out_8435949222489011857[155] = 0;
   out_8435949222489011857[156] = 0;
   out_8435949222489011857[157] = 0;
   out_8435949222489011857[158] = 0;
   out_8435949222489011857[159] = 0;
   out_8435949222489011857[160] = 0;
   out_8435949222489011857[161] = 0;
   out_8435949222489011857[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8435949222489011857[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8435949222489011857[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8435949222489011857[165] = 0;
   out_8435949222489011857[166] = 0;
   out_8435949222489011857[167] = 0;
   out_8435949222489011857[168] = 0;
   out_8435949222489011857[169] = 0;
   out_8435949222489011857[170] = 0;
   out_8435949222489011857[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8435949222489011857[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8435949222489011857[173] = 0;
   out_8435949222489011857[174] = 0;
   out_8435949222489011857[175] = 0;
   out_8435949222489011857[176] = 1;
   out_8435949222489011857[177] = 0;
   out_8435949222489011857[178] = 0;
   out_8435949222489011857[179] = 0;
   out_8435949222489011857[180] = 0;
   out_8435949222489011857[181] = 0;
   out_8435949222489011857[182] = 0;
   out_8435949222489011857[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8435949222489011857[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8435949222489011857[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8435949222489011857[186] = 0;
   out_8435949222489011857[187] = 0;
   out_8435949222489011857[188] = 0;
   out_8435949222489011857[189] = 0;
   out_8435949222489011857[190] = 0;
   out_8435949222489011857[191] = 0;
   out_8435949222489011857[192] = 0;
   out_8435949222489011857[193] = 0;
   out_8435949222489011857[194] = 0;
   out_8435949222489011857[195] = 0;
   out_8435949222489011857[196] = 0;
   out_8435949222489011857[197] = 0;
   out_8435949222489011857[198] = 1;
   out_8435949222489011857[199] = 0;
   out_8435949222489011857[200] = 0;
   out_8435949222489011857[201] = 0;
   out_8435949222489011857[202] = 0;
   out_8435949222489011857[203] = 0;
   out_8435949222489011857[204] = 0;
   out_8435949222489011857[205] = 0;
   out_8435949222489011857[206] = 0;
   out_8435949222489011857[207] = 0;
   out_8435949222489011857[208] = 0;
   out_8435949222489011857[209] = 0;
   out_8435949222489011857[210] = 0;
   out_8435949222489011857[211] = 0;
   out_8435949222489011857[212] = 0;
   out_8435949222489011857[213] = 0;
   out_8435949222489011857[214] = 0;
   out_8435949222489011857[215] = 0;
   out_8435949222489011857[216] = 0;
   out_8435949222489011857[217] = 0;
   out_8435949222489011857[218] = 0;
   out_8435949222489011857[219] = 0;
   out_8435949222489011857[220] = 1;
   out_8435949222489011857[221] = 0;
   out_8435949222489011857[222] = 0;
   out_8435949222489011857[223] = 0;
   out_8435949222489011857[224] = 0;
   out_8435949222489011857[225] = 0;
   out_8435949222489011857[226] = 0;
   out_8435949222489011857[227] = 0;
   out_8435949222489011857[228] = 0;
   out_8435949222489011857[229] = 0;
   out_8435949222489011857[230] = 0;
   out_8435949222489011857[231] = 0;
   out_8435949222489011857[232] = 0;
   out_8435949222489011857[233] = 0;
   out_8435949222489011857[234] = 0;
   out_8435949222489011857[235] = 0;
   out_8435949222489011857[236] = 0;
   out_8435949222489011857[237] = 0;
   out_8435949222489011857[238] = 0;
   out_8435949222489011857[239] = 0;
   out_8435949222489011857[240] = 0;
   out_8435949222489011857[241] = 0;
   out_8435949222489011857[242] = 1;
   out_8435949222489011857[243] = 0;
   out_8435949222489011857[244] = 0;
   out_8435949222489011857[245] = 0;
   out_8435949222489011857[246] = 0;
   out_8435949222489011857[247] = 0;
   out_8435949222489011857[248] = 0;
   out_8435949222489011857[249] = 0;
   out_8435949222489011857[250] = 0;
   out_8435949222489011857[251] = 0;
   out_8435949222489011857[252] = 0;
   out_8435949222489011857[253] = 0;
   out_8435949222489011857[254] = 0;
   out_8435949222489011857[255] = 0;
   out_8435949222489011857[256] = 0;
   out_8435949222489011857[257] = 0;
   out_8435949222489011857[258] = 0;
   out_8435949222489011857[259] = 0;
   out_8435949222489011857[260] = 0;
   out_8435949222489011857[261] = 0;
   out_8435949222489011857[262] = 0;
   out_8435949222489011857[263] = 0;
   out_8435949222489011857[264] = 1;
   out_8435949222489011857[265] = 0;
   out_8435949222489011857[266] = 0;
   out_8435949222489011857[267] = 0;
   out_8435949222489011857[268] = 0;
   out_8435949222489011857[269] = 0;
   out_8435949222489011857[270] = 0;
   out_8435949222489011857[271] = 0;
   out_8435949222489011857[272] = 0;
   out_8435949222489011857[273] = 0;
   out_8435949222489011857[274] = 0;
   out_8435949222489011857[275] = 0;
   out_8435949222489011857[276] = 0;
   out_8435949222489011857[277] = 0;
   out_8435949222489011857[278] = 0;
   out_8435949222489011857[279] = 0;
   out_8435949222489011857[280] = 0;
   out_8435949222489011857[281] = 0;
   out_8435949222489011857[282] = 0;
   out_8435949222489011857[283] = 0;
   out_8435949222489011857[284] = 0;
   out_8435949222489011857[285] = 0;
   out_8435949222489011857[286] = 1;
   out_8435949222489011857[287] = 0;
   out_8435949222489011857[288] = 0;
   out_8435949222489011857[289] = 0;
   out_8435949222489011857[290] = 0;
   out_8435949222489011857[291] = 0;
   out_8435949222489011857[292] = 0;
   out_8435949222489011857[293] = 0;
   out_8435949222489011857[294] = 0;
   out_8435949222489011857[295] = 0;
   out_8435949222489011857[296] = 0;
   out_8435949222489011857[297] = 0;
   out_8435949222489011857[298] = 0;
   out_8435949222489011857[299] = 0;
   out_8435949222489011857[300] = 0;
   out_8435949222489011857[301] = 0;
   out_8435949222489011857[302] = 0;
   out_8435949222489011857[303] = 0;
   out_8435949222489011857[304] = 0;
   out_8435949222489011857[305] = 0;
   out_8435949222489011857[306] = 0;
   out_8435949222489011857[307] = 0;
   out_8435949222489011857[308] = 1;
   out_8435949222489011857[309] = 0;
   out_8435949222489011857[310] = 0;
   out_8435949222489011857[311] = 0;
   out_8435949222489011857[312] = 0;
   out_8435949222489011857[313] = 0;
   out_8435949222489011857[314] = 0;
   out_8435949222489011857[315] = 0;
   out_8435949222489011857[316] = 0;
   out_8435949222489011857[317] = 0;
   out_8435949222489011857[318] = 0;
   out_8435949222489011857[319] = 0;
   out_8435949222489011857[320] = 0;
   out_8435949222489011857[321] = 0;
   out_8435949222489011857[322] = 0;
   out_8435949222489011857[323] = 0;
   out_8435949222489011857[324] = 0;
   out_8435949222489011857[325] = 0;
   out_8435949222489011857[326] = 0;
   out_8435949222489011857[327] = 0;
   out_8435949222489011857[328] = 0;
   out_8435949222489011857[329] = 0;
   out_8435949222489011857[330] = 1;
   out_8435949222489011857[331] = 0;
   out_8435949222489011857[332] = 0;
   out_8435949222489011857[333] = 0;
   out_8435949222489011857[334] = 0;
   out_8435949222489011857[335] = 0;
   out_8435949222489011857[336] = 0;
   out_8435949222489011857[337] = 0;
   out_8435949222489011857[338] = 0;
   out_8435949222489011857[339] = 0;
   out_8435949222489011857[340] = 0;
   out_8435949222489011857[341] = 0;
   out_8435949222489011857[342] = 0;
   out_8435949222489011857[343] = 0;
   out_8435949222489011857[344] = 0;
   out_8435949222489011857[345] = 0;
   out_8435949222489011857[346] = 0;
   out_8435949222489011857[347] = 0;
   out_8435949222489011857[348] = 0;
   out_8435949222489011857[349] = 0;
   out_8435949222489011857[350] = 0;
   out_8435949222489011857[351] = 0;
   out_8435949222489011857[352] = 1;
   out_8435949222489011857[353] = 0;
   out_8435949222489011857[354] = 0;
   out_8435949222489011857[355] = 0;
   out_8435949222489011857[356] = 0;
   out_8435949222489011857[357] = 0;
   out_8435949222489011857[358] = 0;
   out_8435949222489011857[359] = 0;
   out_8435949222489011857[360] = 0;
   out_8435949222489011857[361] = 0;
   out_8435949222489011857[362] = 0;
   out_8435949222489011857[363] = 0;
   out_8435949222489011857[364] = 0;
   out_8435949222489011857[365] = 0;
   out_8435949222489011857[366] = 0;
   out_8435949222489011857[367] = 0;
   out_8435949222489011857[368] = 0;
   out_8435949222489011857[369] = 0;
   out_8435949222489011857[370] = 0;
   out_8435949222489011857[371] = 0;
   out_8435949222489011857[372] = 0;
   out_8435949222489011857[373] = 0;
   out_8435949222489011857[374] = 1;
   out_8435949222489011857[375] = 0;
   out_8435949222489011857[376] = 0;
   out_8435949222489011857[377] = 0;
   out_8435949222489011857[378] = 0;
   out_8435949222489011857[379] = 0;
   out_8435949222489011857[380] = 0;
   out_8435949222489011857[381] = 0;
   out_8435949222489011857[382] = 0;
   out_8435949222489011857[383] = 0;
   out_8435949222489011857[384] = 0;
   out_8435949222489011857[385] = 0;
   out_8435949222489011857[386] = 0;
   out_8435949222489011857[387] = 0;
   out_8435949222489011857[388] = 0;
   out_8435949222489011857[389] = 0;
   out_8435949222489011857[390] = 0;
   out_8435949222489011857[391] = 0;
   out_8435949222489011857[392] = 0;
   out_8435949222489011857[393] = 0;
   out_8435949222489011857[394] = 0;
   out_8435949222489011857[395] = 0;
   out_8435949222489011857[396] = 1;
   out_8435949222489011857[397] = 0;
   out_8435949222489011857[398] = 0;
   out_8435949222489011857[399] = 0;
   out_8435949222489011857[400] = 0;
   out_8435949222489011857[401] = 0;
   out_8435949222489011857[402] = 0;
   out_8435949222489011857[403] = 0;
   out_8435949222489011857[404] = 0;
   out_8435949222489011857[405] = 0;
   out_8435949222489011857[406] = 0;
   out_8435949222489011857[407] = 0;
   out_8435949222489011857[408] = 0;
   out_8435949222489011857[409] = 0;
   out_8435949222489011857[410] = 0;
   out_8435949222489011857[411] = 0;
   out_8435949222489011857[412] = 0;
   out_8435949222489011857[413] = 0;
   out_8435949222489011857[414] = 0;
   out_8435949222489011857[415] = 0;
   out_8435949222489011857[416] = 0;
   out_8435949222489011857[417] = 0;
   out_8435949222489011857[418] = 1;
   out_8435949222489011857[419] = 0;
   out_8435949222489011857[420] = 0;
   out_8435949222489011857[421] = 0;
   out_8435949222489011857[422] = 0;
   out_8435949222489011857[423] = 0;
   out_8435949222489011857[424] = 0;
   out_8435949222489011857[425] = 0;
   out_8435949222489011857[426] = 0;
   out_8435949222489011857[427] = 0;
   out_8435949222489011857[428] = 0;
   out_8435949222489011857[429] = 0;
   out_8435949222489011857[430] = 0;
   out_8435949222489011857[431] = 0;
   out_8435949222489011857[432] = 0;
   out_8435949222489011857[433] = 0;
   out_8435949222489011857[434] = 0;
   out_8435949222489011857[435] = 0;
   out_8435949222489011857[436] = 0;
   out_8435949222489011857[437] = 0;
   out_8435949222489011857[438] = 0;
   out_8435949222489011857[439] = 0;
   out_8435949222489011857[440] = 1;
}
void h_4(double *state, double *unused, double *out_7668675417006875721) {
   out_7668675417006875721[0] = state[10] + state[13];
   out_7668675417006875721[1] = state[11] + state[14];
   out_7668675417006875721[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4384325897146155976) {
   out_4384325897146155976[0] = 0;
   out_4384325897146155976[1] = 0;
   out_4384325897146155976[2] = 0;
   out_4384325897146155976[3] = 0;
   out_4384325897146155976[4] = 0;
   out_4384325897146155976[5] = 0;
   out_4384325897146155976[6] = 0;
   out_4384325897146155976[7] = 0;
   out_4384325897146155976[8] = 0;
   out_4384325897146155976[9] = 0;
   out_4384325897146155976[10] = 1;
   out_4384325897146155976[11] = 0;
   out_4384325897146155976[12] = 0;
   out_4384325897146155976[13] = 1;
   out_4384325897146155976[14] = 0;
   out_4384325897146155976[15] = 0;
   out_4384325897146155976[16] = 0;
   out_4384325897146155976[17] = 0;
   out_4384325897146155976[18] = 0;
   out_4384325897146155976[19] = 0;
   out_4384325897146155976[20] = 0;
   out_4384325897146155976[21] = 0;
   out_4384325897146155976[22] = 0;
   out_4384325897146155976[23] = 0;
   out_4384325897146155976[24] = 0;
   out_4384325897146155976[25] = 0;
   out_4384325897146155976[26] = 0;
   out_4384325897146155976[27] = 0;
   out_4384325897146155976[28] = 0;
   out_4384325897146155976[29] = 0;
   out_4384325897146155976[30] = 0;
   out_4384325897146155976[31] = 0;
   out_4384325897146155976[32] = 0;
   out_4384325897146155976[33] = 1;
   out_4384325897146155976[34] = 0;
   out_4384325897146155976[35] = 0;
   out_4384325897146155976[36] = 1;
   out_4384325897146155976[37] = 0;
   out_4384325897146155976[38] = 0;
   out_4384325897146155976[39] = 0;
   out_4384325897146155976[40] = 0;
   out_4384325897146155976[41] = 0;
   out_4384325897146155976[42] = 0;
   out_4384325897146155976[43] = 0;
   out_4384325897146155976[44] = 0;
   out_4384325897146155976[45] = 0;
   out_4384325897146155976[46] = 0;
   out_4384325897146155976[47] = 0;
   out_4384325897146155976[48] = 0;
   out_4384325897146155976[49] = 0;
   out_4384325897146155976[50] = 0;
   out_4384325897146155976[51] = 0;
   out_4384325897146155976[52] = 0;
   out_4384325897146155976[53] = 0;
   out_4384325897146155976[54] = 0;
   out_4384325897146155976[55] = 0;
   out_4384325897146155976[56] = 1;
   out_4384325897146155976[57] = 0;
   out_4384325897146155976[58] = 0;
   out_4384325897146155976[59] = 1;
   out_4384325897146155976[60] = 0;
   out_4384325897146155976[61] = 0;
   out_4384325897146155976[62] = 0;
   out_4384325897146155976[63] = 0;
   out_4384325897146155976[64] = 0;
   out_4384325897146155976[65] = 0;
}
void h_9(double *state, double *unused, double *out_5789007276214887841) {
   out_5789007276214887841[0] = state[10];
   out_5789007276214887841[1] = state[11];
   out_5789007276214887841[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4625515543775746621) {
   out_4625515543775746621[0] = 0;
   out_4625515543775746621[1] = 0;
   out_4625515543775746621[2] = 0;
   out_4625515543775746621[3] = 0;
   out_4625515543775746621[4] = 0;
   out_4625515543775746621[5] = 0;
   out_4625515543775746621[6] = 0;
   out_4625515543775746621[7] = 0;
   out_4625515543775746621[8] = 0;
   out_4625515543775746621[9] = 0;
   out_4625515543775746621[10] = 1;
   out_4625515543775746621[11] = 0;
   out_4625515543775746621[12] = 0;
   out_4625515543775746621[13] = 0;
   out_4625515543775746621[14] = 0;
   out_4625515543775746621[15] = 0;
   out_4625515543775746621[16] = 0;
   out_4625515543775746621[17] = 0;
   out_4625515543775746621[18] = 0;
   out_4625515543775746621[19] = 0;
   out_4625515543775746621[20] = 0;
   out_4625515543775746621[21] = 0;
   out_4625515543775746621[22] = 0;
   out_4625515543775746621[23] = 0;
   out_4625515543775746621[24] = 0;
   out_4625515543775746621[25] = 0;
   out_4625515543775746621[26] = 0;
   out_4625515543775746621[27] = 0;
   out_4625515543775746621[28] = 0;
   out_4625515543775746621[29] = 0;
   out_4625515543775746621[30] = 0;
   out_4625515543775746621[31] = 0;
   out_4625515543775746621[32] = 0;
   out_4625515543775746621[33] = 1;
   out_4625515543775746621[34] = 0;
   out_4625515543775746621[35] = 0;
   out_4625515543775746621[36] = 0;
   out_4625515543775746621[37] = 0;
   out_4625515543775746621[38] = 0;
   out_4625515543775746621[39] = 0;
   out_4625515543775746621[40] = 0;
   out_4625515543775746621[41] = 0;
   out_4625515543775746621[42] = 0;
   out_4625515543775746621[43] = 0;
   out_4625515543775746621[44] = 0;
   out_4625515543775746621[45] = 0;
   out_4625515543775746621[46] = 0;
   out_4625515543775746621[47] = 0;
   out_4625515543775746621[48] = 0;
   out_4625515543775746621[49] = 0;
   out_4625515543775746621[50] = 0;
   out_4625515543775746621[51] = 0;
   out_4625515543775746621[52] = 0;
   out_4625515543775746621[53] = 0;
   out_4625515543775746621[54] = 0;
   out_4625515543775746621[55] = 0;
   out_4625515543775746621[56] = 1;
   out_4625515543775746621[57] = 0;
   out_4625515543775746621[58] = 0;
   out_4625515543775746621[59] = 0;
   out_4625515543775746621[60] = 0;
   out_4625515543775746621[61] = 0;
   out_4625515543775746621[62] = 0;
   out_4625515543775746621[63] = 0;
   out_4625515543775746621[64] = 0;
   out_4625515543775746621[65] = 0;
}
void h_10(double *state, double *unused, double *out_1062144383174807384) {
   out_1062144383174807384[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1062144383174807384[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1062144383174807384[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_220754046540745774) {
   out_220754046540745774[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_220754046540745774[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_220754046540745774[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_220754046540745774[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_220754046540745774[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_220754046540745774[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_220754046540745774[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_220754046540745774[7] = 0;
   out_220754046540745774[8] = 0;
   out_220754046540745774[9] = 0;
   out_220754046540745774[10] = 0;
   out_220754046540745774[11] = 0;
   out_220754046540745774[12] = 0;
   out_220754046540745774[13] = 0;
   out_220754046540745774[14] = 0;
   out_220754046540745774[15] = 0;
   out_220754046540745774[16] = 1;
   out_220754046540745774[17] = 0;
   out_220754046540745774[18] = 0;
   out_220754046540745774[19] = 1;
   out_220754046540745774[20] = 0;
   out_220754046540745774[21] = 0;
   out_220754046540745774[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_220754046540745774[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_220754046540745774[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_220754046540745774[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_220754046540745774[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_220754046540745774[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_220754046540745774[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_220754046540745774[29] = 0;
   out_220754046540745774[30] = 0;
   out_220754046540745774[31] = 0;
   out_220754046540745774[32] = 0;
   out_220754046540745774[33] = 0;
   out_220754046540745774[34] = 0;
   out_220754046540745774[35] = 0;
   out_220754046540745774[36] = 0;
   out_220754046540745774[37] = 0;
   out_220754046540745774[38] = 0;
   out_220754046540745774[39] = 1;
   out_220754046540745774[40] = 0;
   out_220754046540745774[41] = 0;
   out_220754046540745774[42] = 1;
   out_220754046540745774[43] = 0;
   out_220754046540745774[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_220754046540745774[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_220754046540745774[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_220754046540745774[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_220754046540745774[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_220754046540745774[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_220754046540745774[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_220754046540745774[51] = 0;
   out_220754046540745774[52] = 0;
   out_220754046540745774[53] = 0;
   out_220754046540745774[54] = 0;
   out_220754046540745774[55] = 0;
   out_220754046540745774[56] = 0;
   out_220754046540745774[57] = 0;
   out_220754046540745774[58] = 0;
   out_220754046540745774[59] = 0;
   out_220754046540745774[60] = 0;
   out_220754046540745774[61] = 0;
   out_220754046540745774[62] = 1;
   out_220754046540745774[63] = 0;
   out_220754046540745774[64] = 0;
   out_220754046540745774[65] = 1;
}
void h_12(double *state, double *unused, double *out_8870844239671695412) {
   out_8870844239671695412[0] = state[0];
   out_8870844239671695412[1] = state[1];
   out_8870844239671695412[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9042961768531433845) {
   out_9042961768531433845[0] = 1;
   out_9042961768531433845[1] = 0;
   out_9042961768531433845[2] = 0;
   out_9042961768531433845[3] = 0;
   out_9042961768531433845[4] = 0;
   out_9042961768531433845[5] = 0;
   out_9042961768531433845[6] = 0;
   out_9042961768531433845[7] = 0;
   out_9042961768531433845[8] = 0;
   out_9042961768531433845[9] = 0;
   out_9042961768531433845[10] = 0;
   out_9042961768531433845[11] = 0;
   out_9042961768531433845[12] = 0;
   out_9042961768531433845[13] = 0;
   out_9042961768531433845[14] = 0;
   out_9042961768531433845[15] = 0;
   out_9042961768531433845[16] = 0;
   out_9042961768531433845[17] = 0;
   out_9042961768531433845[18] = 0;
   out_9042961768531433845[19] = 0;
   out_9042961768531433845[20] = 0;
   out_9042961768531433845[21] = 0;
   out_9042961768531433845[22] = 0;
   out_9042961768531433845[23] = 1;
   out_9042961768531433845[24] = 0;
   out_9042961768531433845[25] = 0;
   out_9042961768531433845[26] = 0;
   out_9042961768531433845[27] = 0;
   out_9042961768531433845[28] = 0;
   out_9042961768531433845[29] = 0;
   out_9042961768531433845[30] = 0;
   out_9042961768531433845[31] = 0;
   out_9042961768531433845[32] = 0;
   out_9042961768531433845[33] = 0;
   out_9042961768531433845[34] = 0;
   out_9042961768531433845[35] = 0;
   out_9042961768531433845[36] = 0;
   out_9042961768531433845[37] = 0;
   out_9042961768531433845[38] = 0;
   out_9042961768531433845[39] = 0;
   out_9042961768531433845[40] = 0;
   out_9042961768531433845[41] = 0;
   out_9042961768531433845[42] = 0;
   out_9042961768531433845[43] = 0;
   out_9042961768531433845[44] = 0;
   out_9042961768531433845[45] = 0;
   out_9042961768531433845[46] = 1;
   out_9042961768531433845[47] = 0;
   out_9042961768531433845[48] = 0;
   out_9042961768531433845[49] = 0;
   out_9042961768531433845[50] = 0;
   out_9042961768531433845[51] = 0;
   out_9042961768531433845[52] = 0;
   out_9042961768531433845[53] = 0;
   out_9042961768531433845[54] = 0;
   out_9042961768531433845[55] = 0;
   out_9042961768531433845[56] = 0;
   out_9042961768531433845[57] = 0;
   out_9042961768531433845[58] = 0;
   out_9042961768531433845[59] = 0;
   out_9042961768531433845[60] = 0;
   out_9042961768531433845[61] = 0;
   out_9042961768531433845[62] = 0;
   out_9042961768531433845[63] = 0;
   out_9042961768531433845[64] = 0;
   out_9042961768531433845[65] = 0;
}
void h_35(double *state, double *unused, double *out_8307517526811411061) {
   out_8307517526811411061[0] = state[7];
   out_8307517526811411061[1] = state[8];
   out_8307517526811411061[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7750987954518763352) {
   out_7750987954518763352[0] = 0;
   out_7750987954518763352[1] = 0;
   out_7750987954518763352[2] = 0;
   out_7750987954518763352[3] = 0;
   out_7750987954518763352[4] = 0;
   out_7750987954518763352[5] = 0;
   out_7750987954518763352[6] = 0;
   out_7750987954518763352[7] = 1;
   out_7750987954518763352[8] = 0;
   out_7750987954518763352[9] = 0;
   out_7750987954518763352[10] = 0;
   out_7750987954518763352[11] = 0;
   out_7750987954518763352[12] = 0;
   out_7750987954518763352[13] = 0;
   out_7750987954518763352[14] = 0;
   out_7750987954518763352[15] = 0;
   out_7750987954518763352[16] = 0;
   out_7750987954518763352[17] = 0;
   out_7750987954518763352[18] = 0;
   out_7750987954518763352[19] = 0;
   out_7750987954518763352[20] = 0;
   out_7750987954518763352[21] = 0;
   out_7750987954518763352[22] = 0;
   out_7750987954518763352[23] = 0;
   out_7750987954518763352[24] = 0;
   out_7750987954518763352[25] = 0;
   out_7750987954518763352[26] = 0;
   out_7750987954518763352[27] = 0;
   out_7750987954518763352[28] = 0;
   out_7750987954518763352[29] = 0;
   out_7750987954518763352[30] = 1;
   out_7750987954518763352[31] = 0;
   out_7750987954518763352[32] = 0;
   out_7750987954518763352[33] = 0;
   out_7750987954518763352[34] = 0;
   out_7750987954518763352[35] = 0;
   out_7750987954518763352[36] = 0;
   out_7750987954518763352[37] = 0;
   out_7750987954518763352[38] = 0;
   out_7750987954518763352[39] = 0;
   out_7750987954518763352[40] = 0;
   out_7750987954518763352[41] = 0;
   out_7750987954518763352[42] = 0;
   out_7750987954518763352[43] = 0;
   out_7750987954518763352[44] = 0;
   out_7750987954518763352[45] = 0;
   out_7750987954518763352[46] = 0;
   out_7750987954518763352[47] = 0;
   out_7750987954518763352[48] = 0;
   out_7750987954518763352[49] = 0;
   out_7750987954518763352[50] = 0;
   out_7750987954518763352[51] = 0;
   out_7750987954518763352[52] = 0;
   out_7750987954518763352[53] = 1;
   out_7750987954518763352[54] = 0;
   out_7750987954518763352[55] = 0;
   out_7750987954518763352[56] = 0;
   out_7750987954518763352[57] = 0;
   out_7750987954518763352[58] = 0;
   out_7750987954518763352[59] = 0;
   out_7750987954518763352[60] = 0;
   out_7750987954518763352[61] = 0;
   out_7750987954518763352[62] = 0;
   out_7750987954518763352[63] = 0;
   out_7750987954518763352[64] = 0;
   out_7750987954518763352[65] = 0;
}
void h_32(double *state, double *unused, double *out_5890826362672519379) {
   out_5890826362672519379[0] = state[3];
   out_5890826362672519379[1] = state[4];
   out_5890826362672519379[2] = state[5];
   out_5890826362672519379[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8754917781857779463) {
   out_8754917781857779463[0] = 0;
   out_8754917781857779463[1] = 0;
   out_8754917781857779463[2] = 0;
   out_8754917781857779463[3] = 1;
   out_8754917781857779463[4] = 0;
   out_8754917781857779463[5] = 0;
   out_8754917781857779463[6] = 0;
   out_8754917781857779463[7] = 0;
   out_8754917781857779463[8] = 0;
   out_8754917781857779463[9] = 0;
   out_8754917781857779463[10] = 0;
   out_8754917781857779463[11] = 0;
   out_8754917781857779463[12] = 0;
   out_8754917781857779463[13] = 0;
   out_8754917781857779463[14] = 0;
   out_8754917781857779463[15] = 0;
   out_8754917781857779463[16] = 0;
   out_8754917781857779463[17] = 0;
   out_8754917781857779463[18] = 0;
   out_8754917781857779463[19] = 0;
   out_8754917781857779463[20] = 0;
   out_8754917781857779463[21] = 0;
   out_8754917781857779463[22] = 0;
   out_8754917781857779463[23] = 0;
   out_8754917781857779463[24] = 0;
   out_8754917781857779463[25] = 0;
   out_8754917781857779463[26] = 1;
   out_8754917781857779463[27] = 0;
   out_8754917781857779463[28] = 0;
   out_8754917781857779463[29] = 0;
   out_8754917781857779463[30] = 0;
   out_8754917781857779463[31] = 0;
   out_8754917781857779463[32] = 0;
   out_8754917781857779463[33] = 0;
   out_8754917781857779463[34] = 0;
   out_8754917781857779463[35] = 0;
   out_8754917781857779463[36] = 0;
   out_8754917781857779463[37] = 0;
   out_8754917781857779463[38] = 0;
   out_8754917781857779463[39] = 0;
   out_8754917781857779463[40] = 0;
   out_8754917781857779463[41] = 0;
   out_8754917781857779463[42] = 0;
   out_8754917781857779463[43] = 0;
   out_8754917781857779463[44] = 0;
   out_8754917781857779463[45] = 0;
   out_8754917781857779463[46] = 0;
   out_8754917781857779463[47] = 0;
   out_8754917781857779463[48] = 0;
   out_8754917781857779463[49] = 1;
   out_8754917781857779463[50] = 0;
   out_8754917781857779463[51] = 0;
   out_8754917781857779463[52] = 0;
   out_8754917781857779463[53] = 0;
   out_8754917781857779463[54] = 0;
   out_8754917781857779463[55] = 0;
   out_8754917781857779463[56] = 0;
   out_8754917781857779463[57] = 0;
   out_8754917781857779463[58] = 0;
   out_8754917781857779463[59] = 0;
   out_8754917781857779463[60] = 0;
   out_8754917781857779463[61] = 0;
   out_8754917781857779463[62] = 0;
   out_8754917781857779463[63] = 0;
   out_8754917781857779463[64] = 0;
   out_8754917781857779463[65] = 0;
   out_8754917781857779463[66] = 0;
   out_8754917781857779463[67] = 0;
   out_8754917781857779463[68] = 0;
   out_8754917781857779463[69] = 0;
   out_8754917781857779463[70] = 0;
   out_8754917781857779463[71] = 0;
   out_8754917781857779463[72] = 1;
   out_8754917781857779463[73] = 0;
   out_8754917781857779463[74] = 0;
   out_8754917781857779463[75] = 0;
   out_8754917781857779463[76] = 0;
   out_8754917781857779463[77] = 0;
   out_8754917781857779463[78] = 0;
   out_8754917781857779463[79] = 0;
   out_8754917781857779463[80] = 0;
   out_8754917781857779463[81] = 0;
   out_8754917781857779463[82] = 0;
   out_8754917781857779463[83] = 0;
   out_8754917781857779463[84] = 0;
   out_8754917781857779463[85] = 0;
   out_8754917781857779463[86] = 0;
   out_8754917781857779463[87] = 0;
}
void h_13(double *state, double *unused, double *out_8615652077084552254) {
   out_8615652077084552254[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8615652077084552254[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8615652077084552254[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7107178695677299642) {
   out_7107178695677299642[0] = 0;
   out_7107178695677299642[1] = 0;
   out_7107178695677299642[2] = 0;
   out_7107178695677299642[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7107178695677299642[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7107178695677299642[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7107178695677299642[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7107178695677299642[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7107178695677299642[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7107178695677299642[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7107178695677299642[10] = 0;
   out_7107178695677299642[11] = 0;
   out_7107178695677299642[12] = 0;
   out_7107178695677299642[13] = 0;
   out_7107178695677299642[14] = 0;
   out_7107178695677299642[15] = 0;
   out_7107178695677299642[16] = 0;
   out_7107178695677299642[17] = 0;
   out_7107178695677299642[18] = 0;
   out_7107178695677299642[19] = 0;
   out_7107178695677299642[20] = 0;
   out_7107178695677299642[21] = 0;
   out_7107178695677299642[22] = 0;
   out_7107178695677299642[23] = 0;
   out_7107178695677299642[24] = 0;
   out_7107178695677299642[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7107178695677299642[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7107178695677299642[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7107178695677299642[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7107178695677299642[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7107178695677299642[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7107178695677299642[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7107178695677299642[32] = 0;
   out_7107178695677299642[33] = 0;
   out_7107178695677299642[34] = 0;
   out_7107178695677299642[35] = 0;
   out_7107178695677299642[36] = 0;
   out_7107178695677299642[37] = 0;
   out_7107178695677299642[38] = 0;
   out_7107178695677299642[39] = 0;
   out_7107178695677299642[40] = 0;
   out_7107178695677299642[41] = 0;
   out_7107178695677299642[42] = 0;
   out_7107178695677299642[43] = 0;
   out_7107178695677299642[44] = 0;
   out_7107178695677299642[45] = 0;
   out_7107178695677299642[46] = 0;
   out_7107178695677299642[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7107178695677299642[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7107178695677299642[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7107178695677299642[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7107178695677299642[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7107178695677299642[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7107178695677299642[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7107178695677299642[54] = 0;
   out_7107178695677299642[55] = 0;
   out_7107178695677299642[56] = 0;
   out_7107178695677299642[57] = 0;
   out_7107178695677299642[58] = 0;
   out_7107178695677299642[59] = 0;
   out_7107178695677299642[60] = 0;
   out_7107178695677299642[61] = 0;
   out_7107178695677299642[62] = 0;
   out_7107178695677299642[63] = 0;
   out_7107178695677299642[64] = 0;
   out_7107178695677299642[65] = 0;
}
void h_14(double *state, double *unused, double *out_5789007276214887841) {
   out_5789007276214887841[0] = state[10];
   out_5789007276214887841[1] = state[11];
   out_5789007276214887841[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4625515543775746621) {
   out_4625515543775746621[0] = 0;
   out_4625515543775746621[1] = 0;
   out_4625515543775746621[2] = 0;
   out_4625515543775746621[3] = 0;
   out_4625515543775746621[4] = 0;
   out_4625515543775746621[5] = 0;
   out_4625515543775746621[6] = 0;
   out_4625515543775746621[7] = 0;
   out_4625515543775746621[8] = 0;
   out_4625515543775746621[9] = 0;
   out_4625515543775746621[10] = 1;
   out_4625515543775746621[11] = 0;
   out_4625515543775746621[12] = 0;
   out_4625515543775746621[13] = 0;
   out_4625515543775746621[14] = 0;
   out_4625515543775746621[15] = 0;
   out_4625515543775746621[16] = 0;
   out_4625515543775746621[17] = 0;
   out_4625515543775746621[18] = 0;
   out_4625515543775746621[19] = 0;
   out_4625515543775746621[20] = 0;
   out_4625515543775746621[21] = 0;
   out_4625515543775746621[22] = 0;
   out_4625515543775746621[23] = 0;
   out_4625515543775746621[24] = 0;
   out_4625515543775746621[25] = 0;
   out_4625515543775746621[26] = 0;
   out_4625515543775746621[27] = 0;
   out_4625515543775746621[28] = 0;
   out_4625515543775746621[29] = 0;
   out_4625515543775746621[30] = 0;
   out_4625515543775746621[31] = 0;
   out_4625515543775746621[32] = 0;
   out_4625515543775746621[33] = 1;
   out_4625515543775746621[34] = 0;
   out_4625515543775746621[35] = 0;
   out_4625515543775746621[36] = 0;
   out_4625515543775746621[37] = 0;
   out_4625515543775746621[38] = 0;
   out_4625515543775746621[39] = 0;
   out_4625515543775746621[40] = 0;
   out_4625515543775746621[41] = 0;
   out_4625515543775746621[42] = 0;
   out_4625515543775746621[43] = 0;
   out_4625515543775746621[44] = 0;
   out_4625515543775746621[45] = 0;
   out_4625515543775746621[46] = 0;
   out_4625515543775746621[47] = 0;
   out_4625515543775746621[48] = 0;
   out_4625515543775746621[49] = 0;
   out_4625515543775746621[50] = 0;
   out_4625515543775746621[51] = 0;
   out_4625515543775746621[52] = 0;
   out_4625515543775746621[53] = 0;
   out_4625515543775746621[54] = 0;
   out_4625515543775746621[55] = 0;
   out_4625515543775746621[56] = 1;
   out_4625515543775746621[57] = 0;
   out_4625515543775746621[58] = 0;
   out_4625515543775746621[59] = 0;
   out_4625515543775746621[60] = 0;
   out_4625515543775746621[61] = 0;
   out_4625515543775746621[62] = 0;
   out_4625515543775746621[63] = 0;
   out_4625515543775746621[64] = 0;
   out_4625515543775746621[65] = 0;
}
void h_33(double *state, double *unused, double *out_6685733422617726486) {
   out_6685733422617726486[0] = state[16];
   out_6685733422617726486[1] = state[17];
   out_6685733422617726486[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7545199114551930660) {
   out_7545199114551930660[0] = 0;
   out_7545199114551930660[1] = 0;
   out_7545199114551930660[2] = 0;
   out_7545199114551930660[3] = 0;
   out_7545199114551930660[4] = 0;
   out_7545199114551930660[5] = 0;
   out_7545199114551930660[6] = 0;
   out_7545199114551930660[7] = 0;
   out_7545199114551930660[8] = 0;
   out_7545199114551930660[9] = 0;
   out_7545199114551930660[10] = 0;
   out_7545199114551930660[11] = 0;
   out_7545199114551930660[12] = 0;
   out_7545199114551930660[13] = 0;
   out_7545199114551930660[14] = 0;
   out_7545199114551930660[15] = 0;
   out_7545199114551930660[16] = 1;
   out_7545199114551930660[17] = 0;
   out_7545199114551930660[18] = 0;
   out_7545199114551930660[19] = 0;
   out_7545199114551930660[20] = 0;
   out_7545199114551930660[21] = 0;
   out_7545199114551930660[22] = 0;
   out_7545199114551930660[23] = 0;
   out_7545199114551930660[24] = 0;
   out_7545199114551930660[25] = 0;
   out_7545199114551930660[26] = 0;
   out_7545199114551930660[27] = 0;
   out_7545199114551930660[28] = 0;
   out_7545199114551930660[29] = 0;
   out_7545199114551930660[30] = 0;
   out_7545199114551930660[31] = 0;
   out_7545199114551930660[32] = 0;
   out_7545199114551930660[33] = 0;
   out_7545199114551930660[34] = 0;
   out_7545199114551930660[35] = 0;
   out_7545199114551930660[36] = 0;
   out_7545199114551930660[37] = 0;
   out_7545199114551930660[38] = 0;
   out_7545199114551930660[39] = 1;
   out_7545199114551930660[40] = 0;
   out_7545199114551930660[41] = 0;
   out_7545199114551930660[42] = 0;
   out_7545199114551930660[43] = 0;
   out_7545199114551930660[44] = 0;
   out_7545199114551930660[45] = 0;
   out_7545199114551930660[46] = 0;
   out_7545199114551930660[47] = 0;
   out_7545199114551930660[48] = 0;
   out_7545199114551930660[49] = 0;
   out_7545199114551930660[50] = 0;
   out_7545199114551930660[51] = 0;
   out_7545199114551930660[52] = 0;
   out_7545199114551930660[53] = 0;
   out_7545199114551930660[54] = 0;
   out_7545199114551930660[55] = 0;
   out_7545199114551930660[56] = 0;
   out_7545199114551930660[57] = 0;
   out_7545199114551930660[58] = 0;
   out_7545199114551930660[59] = 0;
   out_7545199114551930660[60] = 0;
   out_7545199114551930660[61] = 0;
   out_7545199114551930660[62] = 1;
   out_7545199114551930660[63] = 0;
   out_7545199114551930660[64] = 0;
   out_7545199114551930660[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7209398253506453359) {
  H(in_vec, out_7209398253506453359);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_994833721824308553) {
  err_fun(nom_x, delta_x, out_994833721824308553);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4632021964642794099) {
  inv_err_fun(nom_x, true_x, out_4632021964642794099);
}
void live_H_mod_fun(double *state, double *out_7538307877216892783) {
  H_mod_fun(state, out_7538307877216892783);
}
void live_f_fun(double *state, double dt, double *out_7035001334654508742) {
  f_fun(state,  dt, out_7035001334654508742);
}
void live_F_fun(double *state, double dt, double *out_8435949222489011857) {
  F_fun(state,  dt, out_8435949222489011857);
}
void live_h_4(double *state, double *unused, double *out_7668675417006875721) {
  h_4(state, unused, out_7668675417006875721);
}
void live_H_4(double *state, double *unused, double *out_4384325897146155976) {
  H_4(state, unused, out_4384325897146155976);
}
void live_h_9(double *state, double *unused, double *out_5789007276214887841) {
  h_9(state, unused, out_5789007276214887841);
}
void live_H_9(double *state, double *unused, double *out_4625515543775746621) {
  H_9(state, unused, out_4625515543775746621);
}
void live_h_10(double *state, double *unused, double *out_1062144383174807384) {
  h_10(state, unused, out_1062144383174807384);
}
void live_H_10(double *state, double *unused, double *out_220754046540745774) {
  H_10(state, unused, out_220754046540745774);
}
void live_h_12(double *state, double *unused, double *out_8870844239671695412) {
  h_12(state, unused, out_8870844239671695412);
}
void live_H_12(double *state, double *unused, double *out_9042961768531433845) {
  H_12(state, unused, out_9042961768531433845);
}
void live_h_35(double *state, double *unused, double *out_8307517526811411061) {
  h_35(state, unused, out_8307517526811411061);
}
void live_H_35(double *state, double *unused, double *out_7750987954518763352) {
  H_35(state, unused, out_7750987954518763352);
}
void live_h_32(double *state, double *unused, double *out_5890826362672519379) {
  h_32(state, unused, out_5890826362672519379);
}
void live_H_32(double *state, double *unused, double *out_8754917781857779463) {
  H_32(state, unused, out_8754917781857779463);
}
void live_h_13(double *state, double *unused, double *out_8615652077084552254) {
  h_13(state, unused, out_8615652077084552254);
}
void live_H_13(double *state, double *unused, double *out_7107178695677299642) {
  H_13(state, unused, out_7107178695677299642);
}
void live_h_14(double *state, double *unused, double *out_5789007276214887841) {
  h_14(state, unused, out_5789007276214887841);
}
void live_H_14(double *state, double *unused, double *out_4625515543775746621) {
  H_14(state, unused, out_4625515543775746621);
}
void live_h_33(double *state, double *unused, double *out_6685733422617726486) {
  h_33(state, unused, out_6685733422617726486);
}
void live_H_33(double *state, double *unused, double *out_7545199114551930660) {
  H_33(state, unused, out_7545199114551930660);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
