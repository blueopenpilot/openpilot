#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5454284932020681649) {
   out_5454284932020681649[0] = 0;
   out_5454284932020681649[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5454284932020681649[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5454284932020681649[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5454284932020681649[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5454284932020681649[5] = -sin(in_vec[1]);
   out_5454284932020681649[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5454284932020681649[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5454284932020681649[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5454284932020681649[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5454284932020681649[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5454284932020681649[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5454284932020681649[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5454284932020681649[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5454284932020681649[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5454284932020681649[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5454284932020681649[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5454284932020681649[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7704279630345638266) {
   out_7704279630345638266[0] = delta_x[0] + nom_x[0];
   out_7704279630345638266[1] = delta_x[1] + nom_x[1];
   out_7704279630345638266[2] = delta_x[2] + nom_x[2];
   out_7704279630345638266[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7704279630345638266[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7704279630345638266[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7704279630345638266[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7704279630345638266[7] = delta_x[6] + nom_x[7];
   out_7704279630345638266[8] = delta_x[7] + nom_x[8];
   out_7704279630345638266[9] = delta_x[8] + nom_x[9];
   out_7704279630345638266[10] = delta_x[9] + nom_x[10];
   out_7704279630345638266[11] = delta_x[10] + nom_x[11];
   out_7704279630345638266[12] = delta_x[11] + nom_x[12];
   out_7704279630345638266[13] = delta_x[12] + nom_x[13];
   out_7704279630345638266[14] = delta_x[13] + nom_x[14];
   out_7704279630345638266[15] = delta_x[14] + nom_x[15];
   out_7704279630345638266[16] = delta_x[15] + nom_x[16];
   out_7704279630345638266[17] = delta_x[16] + nom_x[17];
   out_7704279630345638266[18] = delta_x[17] + nom_x[18];
   out_7704279630345638266[19] = delta_x[18] + nom_x[19];
   out_7704279630345638266[20] = delta_x[19] + nom_x[20];
   out_7704279630345638266[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2513211039557519125) {
   out_2513211039557519125[0] = -nom_x[0] + true_x[0];
   out_2513211039557519125[1] = -nom_x[1] + true_x[1];
   out_2513211039557519125[2] = -nom_x[2] + true_x[2];
   out_2513211039557519125[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2513211039557519125[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2513211039557519125[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2513211039557519125[6] = -nom_x[7] + true_x[7];
   out_2513211039557519125[7] = -nom_x[8] + true_x[8];
   out_2513211039557519125[8] = -nom_x[9] + true_x[9];
   out_2513211039557519125[9] = -nom_x[10] + true_x[10];
   out_2513211039557519125[10] = -nom_x[11] + true_x[11];
   out_2513211039557519125[11] = -nom_x[12] + true_x[12];
   out_2513211039557519125[12] = -nom_x[13] + true_x[13];
   out_2513211039557519125[13] = -nom_x[14] + true_x[14];
   out_2513211039557519125[14] = -nom_x[15] + true_x[15];
   out_2513211039557519125[15] = -nom_x[16] + true_x[16];
   out_2513211039557519125[16] = -nom_x[17] + true_x[17];
   out_2513211039557519125[17] = -nom_x[18] + true_x[18];
   out_2513211039557519125[18] = -nom_x[19] + true_x[19];
   out_2513211039557519125[19] = -nom_x[20] + true_x[20];
   out_2513211039557519125[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7435501040416024686) {
   out_7435501040416024686[0] = 1.0;
   out_7435501040416024686[1] = 0;
   out_7435501040416024686[2] = 0;
   out_7435501040416024686[3] = 0;
   out_7435501040416024686[4] = 0;
   out_7435501040416024686[5] = 0;
   out_7435501040416024686[6] = 0;
   out_7435501040416024686[7] = 0;
   out_7435501040416024686[8] = 0;
   out_7435501040416024686[9] = 0;
   out_7435501040416024686[10] = 0;
   out_7435501040416024686[11] = 0;
   out_7435501040416024686[12] = 0;
   out_7435501040416024686[13] = 0;
   out_7435501040416024686[14] = 0;
   out_7435501040416024686[15] = 0;
   out_7435501040416024686[16] = 0;
   out_7435501040416024686[17] = 0;
   out_7435501040416024686[18] = 0;
   out_7435501040416024686[19] = 0;
   out_7435501040416024686[20] = 0;
   out_7435501040416024686[21] = 0;
   out_7435501040416024686[22] = 1.0;
   out_7435501040416024686[23] = 0;
   out_7435501040416024686[24] = 0;
   out_7435501040416024686[25] = 0;
   out_7435501040416024686[26] = 0;
   out_7435501040416024686[27] = 0;
   out_7435501040416024686[28] = 0;
   out_7435501040416024686[29] = 0;
   out_7435501040416024686[30] = 0;
   out_7435501040416024686[31] = 0;
   out_7435501040416024686[32] = 0;
   out_7435501040416024686[33] = 0;
   out_7435501040416024686[34] = 0;
   out_7435501040416024686[35] = 0;
   out_7435501040416024686[36] = 0;
   out_7435501040416024686[37] = 0;
   out_7435501040416024686[38] = 0;
   out_7435501040416024686[39] = 0;
   out_7435501040416024686[40] = 0;
   out_7435501040416024686[41] = 0;
   out_7435501040416024686[42] = 0;
   out_7435501040416024686[43] = 0;
   out_7435501040416024686[44] = 1.0;
   out_7435501040416024686[45] = 0;
   out_7435501040416024686[46] = 0;
   out_7435501040416024686[47] = 0;
   out_7435501040416024686[48] = 0;
   out_7435501040416024686[49] = 0;
   out_7435501040416024686[50] = 0;
   out_7435501040416024686[51] = 0;
   out_7435501040416024686[52] = 0;
   out_7435501040416024686[53] = 0;
   out_7435501040416024686[54] = 0;
   out_7435501040416024686[55] = 0;
   out_7435501040416024686[56] = 0;
   out_7435501040416024686[57] = 0;
   out_7435501040416024686[58] = 0;
   out_7435501040416024686[59] = 0;
   out_7435501040416024686[60] = 0;
   out_7435501040416024686[61] = 0;
   out_7435501040416024686[62] = 0;
   out_7435501040416024686[63] = 0;
   out_7435501040416024686[64] = 0;
   out_7435501040416024686[65] = 0;
   out_7435501040416024686[66] = -0.5*state[4];
   out_7435501040416024686[67] = -0.5*state[5];
   out_7435501040416024686[68] = -0.5*state[6];
   out_7435501040416024686[69] = 0;
   out_7435501040416024686[70] = 0;
   out_7435501040416024686[71] = 0;
   out_7435501040416024686[72] = 0;
   out_7435501040416024686[73] = 0;
   out_7435501040416024686[74] = 0;
   out_7435501040416024686[75] = 0;
   out_7435501040416024686[76] = 0;
   out_7435501040416024686[77] = 0;
   out_7435501040416024686[78] = 0;
   out_7435501040416024686[79] = 0;
   out_7435501040416024686[80] = 0;
   out_7435501040416024686[81] = 0;
   out_7435501040416024686[82] = 0;
   out_7435501040416024686[83] = 0;
   out_7435501040416024686[84] = 0;
   out_7435501040416024686[85] = 0;
   out_7435501040416024686[86] = 0;
   out_7435501040416024686[87] = 0.5*state[3];
   out_7435501040416024686[88] = 0.5*state[6];
   out_7435501040416024686[89] = -0.5*state[5];
   out_7435501040416024686[90] = 0;
   out_7435501040416024686[91] = 0;
   out_7435501040416024686[92] = 0;
   out_7435501040416024686[93] = 0;
   out_7435501040416024686[94] = 0;
   out_7435501040416024686[95] = 0;
   out_7435501040416024686[96] = 0;
   out_7435501040416024686[97] = 0;
   out_7435501040416024686[98] = 0;
   out_7435501040416024686[99] = 0;
   out_7435501040416024686[100] = 0;
   out_7435501040416024686[101] = 0;
   out_7435501040416024686[102] = 0;
   out_7435501040416024686[103] = 0;
   out_7435501040416024686[104] = 0;
   out_7435501040416024686[105] = 0;
   out_7435501040416024686[106] = 0;
   out_7435501040416024686[107] = 0;
   out_7435501040416024686[108] = -0.5*state[6];
   out_7435501040416024686[109] = 0.5*state[3];
   out_7435501040416024686[110] = 0.5*state[4];
   out_7435501040416024686[111] = 0;
   out_7435501040416024686[112] = 0;
   out_7435501040416024686[113] = 0;
   out_7435501040416024686[114] = 0;
   out_7435501040416024686[115] = 0;
   out_7435501040416024686[116] = 0;
   out_7435501040416024686[117] = 0;
   out_7435501040416024686[118] = 0;
   out_7435501040416024686[119] = 0;
   out_7435501040416024686[120] = 0;
   out_7435501040416024686[121] = 0;
   out_7435501040416024686[122] = 0;
   out_7435501040416024686[123] = 0;
   out_7435501040416024686[124] = 0;
   out_7435501040416024686[125] = 0;
   out_7435501040416024686[126] = 0;
   out_7435501040416024686[127] = 0;
   out_7435501040416024686[128] = 0;
   out_7435501040416024686[129] = 0.5*state[5];
   out_7435501040416024686[130] = -0.5*state[4];
   out_7435501040416024686[131] = 0.5*state[3];
   out_7435501040416024686[132] = 0;
   out_7435501040416024686[133] = 0;
   out_7435501040416024686[134] = 0;
   out_7435501040416024686[135] = 0;
   out_7435501040416024686[136] = 0;
   out_7435501040416024686[137] = 0;
   out_7435501040416024686[138] = 0;
   out_7435501040416024686[139] = 0;
   out_7435501040416024686[140] = 0;
   out_7435501040416024686[141] = 0;
   out_7435501040416024686[142] = 0;
   out_7435501040416024686[143] = 0;
   out_7435501040416024686[144] = 0;
   out_7435501040416024686[145] = 0;
   out_7435501040416024686[146] = 0;
   out_7435501040416024686[147] = 0;
   out_7435501040416024686[148] = 0;
   out_7435501040416024686[149] = 0;
   out_7435501040416024686[150] = 0;
   out_7435501040416024686[151] = 0;
   out_7435501040416024686[152] = 0;
   out_7435501040416024686[153] = 1.0;
   out_7435501040416024686[154] = 0;
   out_7435501040416024686[155] = 0;
   out_7435501040416024686[156] = 0;
   out_7435501040416024686[157] = 0;
   out_7435501040416024686[158] = 0;
   out_7435501040416024686[159] = 0;
   out_7435501040416024686[160] = 0;
   out_7435501040416024686[161] = 0;
   out_7435501040416024686[162] = 0;
   out_7435501040416024686[163] = 0;
   out_7435501040416024686[164] = 0;
   out_7435501040416024686[165] = 0;
   out_7435501040416024686[166] = 0;
   out_7435501040416024686[167] = 0;
   out_7435501040416024686[168] = 0;
   out_7435501040416024686[169] = 0;
   out_7435501040416024686[170] = 0;
   out_7435501040416024686[171] = 0;
   out_7435501040416024686[172] = 0;
   out_7435501040416024686[173] = 0;
   out_7435501040416024686[174] = 0;
   out_7435501040416024686[175] = 1.0;
   out_7435501040416024686[176] = 0;
   out_7435501040416024686[177] = 0;
   out_7435501040416024686[178] = 0;
   out_7435501040416024686[179] = 0;
   out_7435501040416024686[180] = 0;
   out_7435501040416024686[181] = 0;
   out_7435501040416024686[182] = 0;
   out_7435501040416024686[183] = 0;
   out_7435501040416024686[184] = 0;
   out_7435501040416024686[185] = 0;
   out_7435501040416024686[186] = 0;
   out_7435501040416024686[187] = 0;
   out_7435501040416024686[188] = 0;
   out_7435501040416024686[189] = 0;
   out_7435501040416024686[190] = 0;
   out_7435501040416024686[191] = 0;
   out_7435501040416024686[192] = 0;
   out_7435501040416024686[193] = 0;
   out_7435501040416024686[194] = 0;
   out_7435501040416024686[195] = 0;
   out_7435501040416024686[196] = 0;
   out_7435501040416024686[197] = 1.0;
   out_7435501040416024686[198] = 0;
   out_7435501040416024686[199] = 0;
   out_7435501040416024686[200] = 0;
   out_7435501040416024686[201] = 0;
   out_7435501040416024686[202] = 0;
   out_7435501040416024686[203] = 0;
   out_7435501040416024686[204] = 0;
   out_7435501040416024686[205] = 0;
   out_7435501040416024686[206] = 0;
   out_7435501040416024686[207] = 0;
   out_7435501040416024686[208] = 0;
   out_7435501040416024686[209] = 0;
   out_7435501040416024686[210] = 0;
   out_7435501040416024686[211] = 0;
   out_7435501040416024686[212] = 0;
   out_7435501040416024686[213] = 0;
   out_7435501040416024686[214] = 0;
   out_7435501040416024686[215] = 0;
   out_7435501040416024686[216] = 0;
   out_7435501040416024686[217] = 0;
   out_7435501040416024686[218] = 0;
   out_7435501040416024686[219] = 1.0;
   out_7435501040416024686[220] = 0;
   out_7435501040416024686[221] = 0;
   out_7435501040416024686[222] = 0;
   out_7435501040416024686[223] = 0;
   out_7435501040416024686[224] = 0;
   out_7435501040416024686[225] = 0;
   out_7435501040416024686[226] = 0;
   out_7435501040416024686[227] = 0;
   out_7435501040416024686[228] = 0;
   out_7435501040416024686[229] = 0;
   out_7435501040416024686[230] = 0;
   out_7435501040416024686[231] = 0;
   out_7435501040416024686[232] = 0;
   out_7435501040416024686[233] = 0;
   out_7435501040416024686[234] = 0;
   out_7435501040416024686[235] = 0;
   out_7435501040416024686[236] = 0;
   out_7435501040416024686[237] = 0;
   out_7435501040416024686[238] = 0;
   out_7435501040416024686[239] = 0;
   out_7435501040416024686[240] = 0;
   out_7435501040416024686[241] = 1.0;
   out_7435501040416024686[242] = 0;
   out_7435501040416024686[243] = 0;
   out_7435501040416024686[244] = 0;
   out_7435501040416024686[245] = 0;
   out_7435501040416024686[246] = 0;
   out_7435501040416024686[247] = 0;
   out_7435501040416024686[248] = 0;
   out_7435501040416024686[249] = 0;
   out_7435501040416024686[250] = 0;
   out_7435501040416024686[251] = 0;
   out_7435501040416024686[252] = 0;
   out_7435501040416024686[253] = 0;
   out_7435501040416024686[254] = 0;
   out_7435501040416024686[255] = 0;
   out_7435501040416024686[256] = 0;
   out_7435501040416024686[257] = 0;
   out_7435501040416024686[258] = 0;
   out_7435501040416024686[259] = 0;
   out_7435501040416024686[260] = 0;
   out_7435501040416024686[261] = 0;
   out_7435501040416024686[262] = 0;
   out_7435501040416024686[263] = 1.0;
   out_7435501040416024686[264] = 0;
   out_7435501040416024686[265] = 0;
   out_7435501040416024686[266] = 0;
   out_7435501040416024686[267] = 0;
   out_7435501040416024686[268] = 0;
   out_7435501040416024686[269] = 0;
   out_7435501040416024686[270] = 0;
   out_7435501040416024686[271] = 0;
   out_7435501040416024686[272] = 0;
   out_7435501040416024686[273] = 0;
   out_7435501040416024686[274] = 0;
   out_7435501040416024686[275] = 0;
   out_7435501040416024686[276] = 0;
   out_7435501040416024686[277] = 0;
   out_7435501040416024686[278] = 0;
   out_7435501040416024686[279] = 0;
   out_7435501040416024686[280] = 0;
   out_7435501040416024686[281] = 0;
   out_7435501040416024686[282] = 0;
   out_7435501040416024686[283] = 0;
   out_7435501040416024686[284] = 0;
   out_7435501040416024686[285] = 1.0;
   out_7435501040416024686[286] = 0;
   out_7435501040416024686[287] = 0;
   out_7435501040416024686[288] = 0;
   out_7435501040416024686[289] = 0;
   out_7435501040416024686[290] = 0;
   out_7435501040416024686[291] = 0;
   out_7435501040416024686[292] = 0;
   out_7435501040416024686[293] = 0;
   out_7435501040416024686[294] = 0;
   out_7435501040416024686[295] = 0;
   out_7435501040416024686[296] = 0;
   out_7435501040416024686[297] = 0;
   out_7435501040416024686[298] = 0;
   out_7435501040416024686[299] = 0;
   out_7435501040416024686[300] = 0;
   out_7435501040416024686[301] = 0;
   out_7435501040416024686[302] = 0;
   out_7435501040416024686[303] = 0;
   out_7435501040416024686[304] = 0;
   out_7435501040416024686[305] = 0;
   out_7435501040416024686[306] = 0;
   out_7435501040416024686[307] = 1.0;
   out_7435501040416024686[308] = 0;
   out_7435501040416024686[309] = 0;
   out_7435501040416024686[310] = 0;
   out_7435501040416024686[311] = 0;
   out_7435501040416024686[312] = 0;
   out_7435501040416024686[313] = 0;
   out_7435501040416024686[314] = 0;
   out_7435501040416024686[315] = 0;
   out_7435501040416024686[316] = 0;
   out_7435501040416024686[317] = 0;
   out_7435501040416024686[318] = 0;
   out_7435501040416024686[319] = 0;
   out_7435501040416024686[320] = 0;
   out_7435501040416024686[321] = 0;
   out_7435501040416024686[322] = 0;
   out_7435501040416024686[323] = 0;
   out_7435501040416024686[324] = 0;
   out_7435501040416024686[325] = 0;
   out_7435501040416024686[326] = 0;
   out_7435501040416024686[327] = 0;
   out_7435501040416024686[328] = 0;
   out_7435501040416024686[329] = 1.0;
   out_7435501040416024686[330] = 0;
   out_7435501040416024686[331] = 0;
   out_7435501040416024686[332] = 0;
   out_7435501040416024686[333] = 0;
   out_7435501040416024686[334] = 0;
   out_7435501040416024686[335] = 0;
   out_7435501040416024686[336] = 0;
   out_7435501040416024686[337] = 0;
   out_7435501040416024686[338] = 0;
   out_7435501040416024686[339] = 0;
   out_7435501040416024686[340] = 0;
   out_7435501040416024686[341] = 0;
   out_7435501040416024686[342] = 0;
   out_7435501040416024686[343] = 0;
   out_7435501040416024686[344] = 0;
   out_7435501040416024686[345] = 0;
   out_7435501040416024686[346] = 0;
   out_7435501040416024686[347] = 0;
   out_7435501040416024686[348] = 0;
   out_7435501040416024686[349] = 0;
   out_7435501040416024686[350] = 0;
   out_7435501040416024686[351] = 1.0;
   out_7435501040416024686[352] = 0;
   out_7435501040416024686[353] = 0;
   out_7435501040416024686[354] = 0;
   out_7435501040416024686[355] = 0;
   out_7435501040416024686[356] = 0;
   out_7435501040416024686[357] = 0;
   out_7435501040416024686[358] = 0;
   out_7435501040416024686[359] = 0;
   out_7435501040416024686[360] = 0;
   out_7435501040416024686[361] = 0;
   out_7435501040416024686[362] = 0;
   out_7435501040416024686[363] = 0;
   out_7435501040416024686[364] = 0;
   out_7435501040416024686[365] = 0;
   out_7435501040416024686[366] = 0;
   out_7435501040416024686[367] = 0;
   out_7435501040416024686[368] = 0;
   out_7435501040416024686[369] = 0;
   out_7435501040416024686[370] = 0;
   out_7435501040416024686[371] = 0;
   out_7435501040416024686[372] = 0;
   out_7435501040416024686[373] = 1.0;
   out_7435501040416024686[374] = 0;
   out_7435501040416024686[375] = 0;
   out_7435501040416024686[376] = 0;
   out_7435501040416024686[377] = 0;
   out_7435501040416024686[378] = 0;
   out_7435501040416024686[379] = 0;
   out_7435501040416024686[380] = 0;
   out_7435501040416024686[381] = 0;
   out_7435501040416024686[382] = 0;
   out_7435501040416024686[383] = 0;
   out_7435501040416024686[384] = 0;
   out_7435501040416024686[385] = 0;
   out_7435501040416024686[386] = 0;
   out_7435501040416024686[387] = 0;
   out_7435501040416024686[388] = 0;
   out_7435501040416024686[389] = 0;
   out_7435501040416024686[390] = 0;
   out_7435501040416024686[391] = 0;
   out_7435501040416024686[392] = 0;
   out_7435501040416024686[393] = 0;
   out_7435501040416024686[394] = 0;
   out_7435501040416024686[395] = 1.0;
   out_7435501040416024686[396] = 0;
   out_7435501040416024686[397] = 0;
   out_7435501040416024686[398] = 0;
   out_7435501040416024686[399] = 0;
   out_7435501040416024686[400] = 0;
   out_7435501040416024686[401] = 0;
   out_7435501040416024686[402] = 0;
   out_7435501040416024686[403] = 0;
   out_7435501040416024686[404] = 0;
   out_7435501040416024686[405] = 0;
   out_7435501040416024686[406] = 0;
   out_7435501040416024686[407] = 0;
   out_7435501040416024686[408] = 0;
   out_7435501040416024686[409] = 0;
   out_7435501040416024686[410] = 0;
   out_7435501040416024686[411] = 0;
   out_7435501040416024686[412] = 0;
   out_7435501040416024686[413] = 0;
   out_7435501040416024686[414] = 0;
   out_7435501040416024686[415] = 0;
   out_7435501040416024686[416] = 0;
   out_7435501040416024686[417] = 1.0;
   out_7435501040416024686[418] = 0;
   out_7435501040416024686[419] = 0;
   out_7435501040416024686[420] = 0;
   out_7435501040416024686[421] = 0;
   out_7435501040416024686[422] = 0;
   out_7435501040416024686[423] = 0;
   out_7435501040416024686[424] = 0;
   out_7435501040416024686[425] = 0;
   out_7435501040416024686[426] = 0;
   out_7435501040416024686[427] = 0;
   out_7435501040416024686[428] = 0;
   out_7435501040416024686[429] = 0;
   out_7435501040416024686[430] = 0;
   out_7435501040416024686[431] = 0;
   out_7435501040416024686[432] = 0;
   out_7435501040416024686[433] = 0;
   out_7435501040416024686[434] = 0;
   out_7435501040416024686[435] = 0;
   out_7435501040416024686[436] = 0;
   out_7435501040416024686[437] = 0;
   out_7435501040416024686[438] = 0;
   out_7435501040416024686[439] = 1.0;
   out_7435501040416024686[440] = 0;
   out_7435501040416024686[441] = 0;
   out_7435501040416024686[442] = 0;
   out_7435501040416024686[443] = 0;
   out_7435501040416024686[444] = 0;
   out_7435501040416024686[445] = 0;
   out_7435501040416024686[446] = 0;
   out_7435501040416024686[447] = 0;
   out_7435501040416024686[448] = 0;
   out_7435501040416024686[449] = 0;
   out_7435501040416024686[450] = 0;
   out_7435501040416024686[451] = 0;
   out_7435501040416024686[452] = 0;
   out_7435501040416024686[453] = 0;
   out_7435501040416024686[454] = 0;
   out_7435501040416024686[455] = 0;
   out_7435501040416024686[456] = 0;
   out_7435501040416024686[457] = 0;
   out_7435501040416024686[458] = 0;
   out_7435501040416024686[459] = 0;
   out_7435501040416024686[460] = 0;
   out_7435501040416024686[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4212934802868580656) {
   out_4212934802868580656[0] = dt*state[7] + state[0];
   out_4212934802868580656[1] = dt*state[8] + state[1];
   out_4212934802868580656[2] = dt*state[9] + state[2];
   out_4212934802868580656[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4212934802868580656[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4212934802868580656[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4212934802868580656[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4212934802868580656[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4212934802868580656[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4212934802868580656[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4212934802868580656[10] = state[10];
   out_4212934802868580656[11] = state[11];
   out_4212934802868580656[12] = state[12];
   out_4212934802868580656[13] = state[13];
   out_4212934802868580656[14] = state[14];
   out_4212934802868580656[15] = state[15];
   out_4212934802868580656[16] = state[16];
   out_4212934802868580656[17] = state[17];
   out_4212934802868580656[18] = state[18];
   out_4212934802868580656[19] = state[19];
   out_4212934802868580656[20] = state[20];
   out_4212934802868580656[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3120508586470747969) {
   out_3120508586470747969[0] = 1;
   out_3120508586470747969[1] = 0;
   out_3120508586470747969[2] = 0;
   out_3120508586470747969[3] = 0;
   out_3120508586470747969[4] = 0;
   out_3120508586470747969[5] = 0;
   out_3120508586470747969[6] = dt;
   out_3120508586470747969[7] = 0;
   out_3120508586470747969[8] = 0;
   out_3120508586470747969[9] = 0;
   out_3120508586470747969[10] = 0;
   out_3120508586470747969[11] = 0;
   out_3120508586470747969[12] = 0;
   out_3120508586470747969[13] = 0;
   out_3120508586470747969[14] = 0;
   out_3120508586470747969[15] = 0;
   out_3120508586470747969[16] = 0;
   out_3120508586470747969[17] = 0;
   out_3120508586470747969[18] = 0;
   out_3120508586470747969[19] = 0;
   out_3120508586470747969[20] = 0;
   out_3120508586470747969[21] = 0;
   out_3120508586470747969[22] = 1;
   out_3120508586470747969[23] = 0;
   out_3120508586470747969[24] = 0;
   out_3120508586470747969[25] = 0;
   out_3120508586470747969[26] = 0;
   out_3120508586470747969[27] = 0;
   out_3120508586470747969[28] = dt;
   out_3120508586470747969[29] = 0;
   out_3120508586470747969[30] = 0;
   out_3120508586470747969[31] = 0;
   out_3120508586470747969[32] = 0;
   out_3120508586470747969[33] = 0;
   out_3120508586470747969[34] = 0;
   out_3120508586470747969[35] = 0;
   out_3120508586470747969[36] = 0;
   out_3120508586470747969[37] = 0;
   out_3120508586470747969[38] = 0;
   out_3120508586470747969[39] = 0;
   out_3120508586470747969[40] = 0;
   out_3120508586470747969[41] = 0;
   out_3120508586470747969[42] = 0;
   out_3120508586470747969[43] = 0;
   out_3120508586470747969[44] = 1;
   out_3120508586470747969[45] = 0;
   out_3120508586470747969[46] = 0;
   out_3120508586470747969[47] = 0;
   out_3120508586470747969[48] = 0;
   out_3120508586470747969[49] = 0;
   out_3120508586470747969[50] = dt;
   out_3120508586470747969[51] = 0;
   out_3120508586470747969[52] = 0;
   out_3120508586470747969[53] = 0;
   out_3120508586470747969[54] = 0;
   out_3120508586470747969[55] = 0;
   out_3120508586470747969[56] = 0;
   out_3120508586470747969[57] = 0;
   out_3120508586470747969[58] = 0;
   out_3120508586470747969[59] = 0;
   out_3120508586470747969[60] = 0;
   out_3120508586470747969[61] = 0;
   out_3120508586470747969[62] = 0;
   out_3120508586470747969[63] = 0;
   out_3120508586470747969[64] = 0;
   out_3120508586470747969[65] = 0;
   out_3120508586470747969[66] = 1;
   out_3120508586470747969[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3120508586470747969[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3120508586470747969[69] = 0;
   out_3120508586470747969[70] = 0;
   out_3120508586470747969[71] = 0;
   out_3120508586470747969[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3120508586470747969[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120508586470747969[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120508586470747969[75] = 0;
   out_3120508586470747969[76] = 0;
   out_3120508586470747969[77] = 0;
   out_3120508586470747969[78] = 0;
   out_3120508586470747969[79] = 0;
   out_3120508586470747969[80] = 0;
   out_3120508586470747969[81] = 0;
   out_3120508586470747969[82] = 0;
   out_3120508586470747969[83] = 0;
   out_3120508586470747969[84] = 0;
   out_3120508586470747969[85] = 0;
   out_3120508586470747969[86] = 0;
   out_3120508586470747969[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3120508586470747969[88] = 1;
   out_3120508586470747969[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3120508586470747969[90] = 0;
   out_3120508586470747969[91] = 0;
   out_3120508586470747969[92] = 0;
   out_3120508586470747969[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120508586470747969[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3120508586470747969[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120508586470747969[96] = 0;
   out_3120508586470747969[97] = 0;
   out_3120508586470747969[98] = 0;
   out_3120508586470747969[99] = 0;
   out_3120508586470747969[100] = 0;
   out_3120508586470747969[101] = 0;
   out_3120508586470747969[102] = 0;
   out_3120508586470747969[103] = 0;
   out_3120508586470747969[104] = 0;
   out_3120508586470747969[105] = 0;
   out_3120508586470747969[106] = 0;
   out_3120508586470747969[107] = 0;
   out_3120508586470747969[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3120508586470747969[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3120508586470747969[110] = 1;
   out_3120508586470747969[111] = 0;
   out_3120508586470747969[112] = 0;
   out_3120508586470747969[113] = 0;
   out_3120508586470747969[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120508586470747969[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120508586470747969[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3120508586470747969[117] = 0;
   out_3120508586470747969[118] = 0;
   out_3120508586470747969[119] = 0;
   out_3120508586470747969[120] = 0;
   out_3120508586470747969[121] = 0;
   out_3120508586470747969[122] = 0;
   out_3120508586470747969[123] = 0;
   out_3120508586470747969[124] = 0;
   out_3120508586470747969[125] = 0;
   out_3120508586470747969[126] = 0;
   out_3120508586470747969[127] = 0;
   out_3120508586470747969[128] = 0;
   out_3120508586470747969[129] = 0;
   out_3120508586470747969[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3120508586470747969[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3120508586470747969[132] = 1;
   out_3120508586470747969[133] = 0;
   out_3120508586470747969[134] = 0;
   out_3120508586470747969[135] = 0;
   out_3120508586470747969[136] = 0;
   out_3120508586470747969[137] = 0;
   out_3120508586470747969[138] = 0;
   out_3120508586470747969[139] = 0;
   out_3120508586470747969[140] = 0;
   out_3120508586470747969[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3120508586470747969[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120508586470747969[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120508586470747969[144] = 0;
   out_3120508586470747969[145] = 0;
   out_3120508586470747969[146] = 0;
   out_3120508586470747969[147] = 0;
   out_3120508586470747969[148] = 0;
   out_3120508586470747969[149] = 0;
   out_3120508586470747969[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3120508586470747969[151] = 0;
   out_3120508586470747969[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3120508586470747969[153] = 0;
   out_3120508586470747969[154] = 1;
   out_3120508586470747969[155] = 0;
   out_3120508586470747969[156] = 0;
   out_3120508586470747969[157] = 0;
   out_3120508586470747969[158] = 0;
   out_3120508586470747969[159] = 0;
   out_3120508586470747969[160] = 0;
   out_3120508586470747969[161] = 0;
   out_3120508586470747969[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3120508586470747969[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3120508586470747969[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120508586470747969[165] = 0;
   out_3120508586470747969[166] = 0;
   out_3120508586470747969[167] = 0;
   out_3120508586470747969[168] = 0;
   out_3120508586470747969[169] = 0;
   out_3120508586470747969[170] = 0;
   out_3120508586470747969[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3120508586470747969[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3120508586470747969[173] = 0;
   out_3120508586470747969[174] = 0;
   out_3120508586470747969[175] = 0;
   out_3120508586470747969[176] = 1;
   out_3120508586470747969[177] = 0;
   out_3120508586470747969[178] = 0;
   out_3120508586470747969[179] = 0;
   out_3120508586470747969[180] = 0;
   out_3120508586470747969[181] = 0;
   out_3120508586470747969[182] = 0;
   out_3120508586470747969[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3120508586470747969[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3120508586470747969[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3120508586470747969[186] = 0;
   out_3120508586470747969[187] = 0;
   out_3120508586470747969[188] = 0;
   out_3120508586470747969[189] = 0;
   out_3120508586470747969[190] = 0;
   out_3120508586470747969[191] = 0;
   out_3120508586470747969[192] = 0;
   out_3120508586470747969[193] = 0;
   out_3120508586470747969[194] = 0;
   out_3120508586470747969[195] = 0;
   out_3120508586470747969[196] = 0;
   out_3120508586470747969[197] = 0;
   out_3120508586470747969[198] = 1;
   out_3120508586470747969[199] = 0;
   out_3120508586470747969[200] = 0;
   out_3120508586470747969[201] = 0;
   out_3120508586470747969[202] = 0;
   out_3120508586470747969[203] = 0;
   out_3120508586470747969[204] = 0;
   out_3120508586470747969[205] = 0;
   out_3120508586470747969[206] = 0;
   out_3120508586470747969[207] = 0;
   out_3120508586470747969[208] = 0;
   out_3120508586470747969[209] = 0;
   out_3120508586470747969[210] = 0;
   out_3120508586470747969[211] = 0;
   out_3120508586470747969[212] = 0;
   out_3120508586470747969[213] = 0;
   out_3120508586470747969[214] = 0;
   out_3120508586470747969[215] = 0;
   out_3120508586470747969[216] = 0;
   out_3120508586470747969[217] = 0;
   out_3120508586470747969[218] = 0;
   out_3120508586470747969[219] = 0;
   out_3120508586470747969[220] = 1;
   out_3120508586470747969[221] = 0;
   out_3120508586470747969[222] = 0;
   out_3120508586470747969[223] = 0;
   out_3120508586470747969[224] = 0;
   out_3120508586470747969[225] = 0;
   out_3120508586470747969[226] = 0;
   out_3120508586470747969[227] = 0;
   out_3120508586470747969[228] = 0;
   out_3120508586470747969[229] = 0;
   out_3120508586470747969[230] = 0;
   out_3120508586470747969[231] = 0;
   out_3120508586470747969[232] = 0;
   out_3120508586470747969[233] = 0;
   out_3120508586470747969[234] = 0;
   out_3120508586470747969[235] = 0;
   out_3120508586470747969[236] = 0;
   out_3120508586470747969[237] = 0;
   out_3120508586470747969[238] = 0;
   out_3120508586470747969[239] = 0;
   out_3120508586470747969[240] = 0;
   out_3120508586470747969[241] = 0;
   out_3120508586470747969[242] = 1;
   out_3120508586470747969[243] = 0;
   out_3120508586470747969[244] = 0;
   out_3120508586470747969[245] = 0;
   out_3120508586470747969[246] = 0;
   out_3120508586470747969[247] = 0;
   out_3120508586470747969[248] = 0;
   out_3120508586470747969[249] = 0;
   out_3120508586470747969[250] = 0;
   out_3120508586470747969[251] = 0;
   out_3120508586470747969[252] = 0;
   out_3120508586470747969[253] = 0;
   out_3120508586470747969[254] = 0;
   out_3120508586470747969[255] = 0;
   out_3120508586470747969[256] = 0;
   out_3120508586470747969[257] = 0;
   out_3120508586470747969[258] = 0;
   out_3120508586470747969[259] = 0;
   out_3120508586470747969[260] = 0;
   out_3120508586470747969[261] = 0;
   out_3120508586470747969[262] = 0;
   out_3120508586470747969[263] = 0;
   out_3120508586470747969[264] = 1;
   out_3120508586470747969[265] = 0;
   out_3120508586470747969[266] = 0;
   out_3120508586470747969[267] = 0;
   out_3120508586470747969[268] = 0;
   out_3120508586470747969[269] = 0;
   out_3120508586470747969[270] = 0;
   out_3120508586470747969[271] = 0;
   out_3120508586470747969[272] = 0;
   out_3120508586470747969[273] = 0;
   out_3120508586470747969[274] = 0;
   out_3120508586470747969[275] = 0;
   out_3120508586470747969[276] = 0;
   out_3120508586470747969[277] = 0;
   out_3120508586470747969[278] = 0;
   out_3120508586470747969[279] = 0;
   out_3120508586470747969[280] = 0;
   out_3120508586470747969[281] = 0;
   out_3120508586470747969[282] = 0;
   out_3120508586470747969[283] = 0;
   out_3120508586470747969[284] = 0;
   out_3120508586470747969[285] = 0;
   out_3120508586470747969[286] = 1;
   out_3120508586470747969[287] = 0;
   out_3120508586470747969[288] = 0;
   out_3120508586470747969[289] = 0;
   out_3120508586470747969[290] = 0;
   out_3120508586470747969[291] = 0;
   out_3120508586470747969[292] = 0;
   out_3120508586470747969[293] = 0;
   out_3120508586470747969[294] = 0;
   out_3120508586470747969[295] = 0;
   out_3120508586470747969[296] = 0;
   out_3120508586470747969[297] = 0;
   out_3120508586470747969[298] = 0;
   out_3120508586470747969[299] = 0;
   out_3120508586470747969[300] = 0;
   out_3120508586470747969[301] = 0;
   out_3120508586470747969[302] = 0;
   out_3120508586470747969[303] = 0;
   out_3120508586470747969[304] = 0;
   out_3120508586470747969[305] = 0;
   out_3120508586470747969[306] = 0;
   out_3120508586470747969[307] = 0;
   out_3120508586470747969[308] = 1;
   out_3120508586470747969[309] = 0;
   out_3120508586470747969[310] = 0;
   out_3120508586470747969[311] = 0;
   out_3120508586470747969[312] = 0;
   out_3120508586470747969[313] = 0;
   out_3120508586470747969[314] = 0;
   out_3120508586470747969[315] = 0;
   out_3120508586470747969[316] = 0;
   out_3120508586470747969[317] = 0;
   out_3120508586470747969[318] = 0;
   out_3120508586470747969[319] = 0;
   out_3120508586470747969[320] = 0;
   out_3120508586470747969[321] = 0;
   out_3120508586470747969[322] = 0;
   out_3120508586470747969[323] = 0;
   out_3120508586470747969[324] = 0;
   out_3120508586470747969[325] = 0;
   out_3120508586470747969[326] = 0;
   out_3120508586470747969[327] = 0;
   out_3120508586470747969[328] = 0;
   out_3120508586470747969[329] = 0;
   out_3120508586470747969[330] = 1;
   out_3120508586470747969[331] = 0;
   out_3120508586470747969[332] = 0;
   out_3120508586470747969[333] = 0;
   out_3120508586470747969[334] = 0;
   out_3120508586470747969[335] = 0;
   out_3120508586470747969[336] = 0;
   out_3120508586470747969[337] = 0;
   out_3120508586470747969[338] = 0;
   out_3120508586470747969[339] = 0;
   out_3120508586470747969[340] = 0;
   out_3120508586470747969[341] = 0;
   out_3120508586470747969[342] = 0;
   out_3120508586470747969[343] = 0;
   out_3120508586470747969[344] = 0;
   out_3120508586470747969[345] = 0;
   out_3120508586470747969[346] = 0;
   out_3120508586470747969[347] = 0;
   out_3120508586470747969[348] = 0;
   out_3120508586470747969[349] = 0;
   out_3120508586470747969[350] = 0;
   out_3120508586470747969[351] = 0;
   out_3120508586470747969[352] = 1;
   out_3120508586470747969[353] = 0;
   out_3120508586470747969[354] = 0;
   out_3120508586470747969[355] = 0;
   out_3120508586470747969[356] = 0;
   out_3120508586470747969[357] = 0;
   out_3120508586470747969[358] = 0;
   out_3120508586470747969[359] = 0;
   out_3120508586470747969[360] = 0;
   out_3120508586470747969[361] = 0;
   out_3120508586470747969[362] = 0;
   out_3120508586470747969[363] = 0;
   out_3120508586470747969[364] = 0;
   out_3120508586470747969[365] = 0;
   out_3120508586470747969[366] = 0;
   out_3120508586470747969[367] = 0;
   out_3120508586470747969[368] = 0;
   out_3120508586470747969[369] = 0;
   out_3120508586470747969[370] = 0;
   out_3120508586470747969[371] = 0;
   out_3120508586470747969[372] = 0;
   out_3120508586470747969[373] = 0;
   out_3120508586470747969[374] = 1;
   out_3120508586470747969[375] = 0;
   out_3120508586470747969[376] = 0;
   out_3120508586470747969[377] = 0;
   out_3120508586470747969[378] = 0;
   out_3120508586470747969[379] = 0;
   out_3120508586470747969[380] = 0;
   out_3120508586470747969[381] = 0;
   out_3120508586470747969[382] = 0;
   out_3120508586470747969[383] = 0;
   out_3120508586470747969[384] = 0;
   out_3120508586470747969[385] = 0;
   out_3120508586470747969[386] = 0;
   out_3120508586470747969[387] = 0;
   out_3120508586470747969[388] = 0;
   out_3120508586470747969[389] = 0;
   out_3120508586470747969[390] = 0;
   out_3120508586470747969[391] = 0;
   out_3120508586470747969[392] = 0;
   out_3120508586470747969[393] = 0;
   out_3120508586470747969[394] = 0;
   out_3120508586470747969[395] = 0;
   out_3120508586470747969[396] = 1;
   out_3120508586470747969[397] = 0;
   out_3120508586470747969[398] = 0;
   out_3120508586470747969[399] = 0;
   out_3120508586470747969[400] = 0;
   out_3120508586470747969[401] = 0;
   out_3120508586470747969[402] = 0;
   out_3120508586470747969[403] = 0;
   out_3120508586470747969[404] = 0;
   out_3120508586470747969[405] = 0;
   out_3120508586470747969[406] = 0;
   out_3120508586470747969[407] = 0;
   out_3120508586470747969[408] = 0;
   out_3120508586470747969[409] = 0;
   out_3120508586470747969[410] = 0;
   out_3120508586470747969[411] = 0;
   out_3120508586470747969[412] = 0;
   out_3120508586470747969[413] = 0;
   out_3120508586470747969[414] = 0;
   out_3120508586470747969[415] = 0;
   out_3120508586470747969[416] = 0;
   out_3120508586470747969[417] = 0;
   out_3120508586470747969[418] = 1;
   out_3120508586470747969[419] = 0;
   out_3120508586470747969[420] = 0;
   out_3120508586470747969[421] = 0;
   out_3120508586470747969[422] = 0;
   out_3120508586470747969[423] = 0;
   out_3120508586470747969[424] = 0;
   out_3120508586470747969[425] = 0;
   out_3120508586470747969[426] = 0;
   out_3120508586470747969[427] = 0;
   out_3120508586470747969[428] = 0;
   out_3120508586470747969[429] = 0;
   out_3120508586470747969[430] = 0;
   out_3120508586470747969[431] = 0;
   out_3120508586470747969[432] = 0;
   out_3120508586470747969[433] = 0;
   out_3120508586470747969[434] = 0;
   out_3120508586470747969[435] = 0;
   out_3120508586470747969[436] = 0;
   out_3120508586470747969[437] = 0;
   out_3120508586470747969[438] = 0;
   out_3120508586470747969[439] = 0;
   out_3120508586470747969[440] = 1;
}
void h_4(double *state, double *unused, double *out_1854745610775522181) {
   out_1854745610775522181[0] = state[10] + state[13];
   out_1854745610775522181[1] = state[11] + state[14];
   out_1854745610775522181[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6353941194245937609) {
   out_6353941194245937609[0] = 0;
   out_6353941194245937609[1] = 0;
   out_6353941194245937609[2] = 0;
   out_6353941194245937609[3] = 0;
   out_6353941194245937609[4] = 0;
   out_6353941194245937609[5] = 0;
   out_6353941194245937609[6] = 0;
   out_6353941194245937609[7] = 0;
   out_6353941194245937609[8] = 0;
   out_6353941194245937609[9] = 0;
   out_6353941194245937609[10] = 1;
   out_6353941194245937609[11] = 0;
   out_6353941194245937609[12] = 0;
   out_6353941194245937609[13] = 1;
   out_6353941194245937609[14] = 0;
   out_6353941194245937609[15] = 0;
   out_6353941194245937609[16] = 0;
   out_6353941194245937609[17] = 0;
   out_6353941194245937609[18] = 0;
   out_6353941194245937609[19] = 0;
   out_6353941194245937609[20] = 0;
   out_6353941194245937609[21] = 0;
   out_6353941194245937609[22] = 0;
   out_6353941194245937609[23] = 0;
   out_6353941194245937609[24] = 0;
   out_6353941194245937609[25] = 0;
   out_6353941194245937609[26] = 0;
   out_6353941194245937609[27] = 0;
   out_6353941194245937609[28] = 0;
   out_6353941194245937609[29] = 0;
   out_6353941194245937609[30] = 0;
   out_6353941194245937609[31] = 0;
   out_6353941194245937609[32] = 0;
   out_6353941194245937609[33] = 1;
   out_6353941194245937609[34] = 0;
   out_6353941194245937609[35] = 0;
   out_6353941194245937609[36] = 1;
   out_6353941194245937609[37] = 0;
   out_6353941194245937609[38] = 0;
   out_6353941194245937609[39] = 0;
   out_6353941194245937609[40] = 0;
   out_6353941194245937609[41] = 0;
   out_6353941194245937609[42] = 0;
   out_6353941194245937609[43] = 0;
   out_6353941194245937609[44] = 0;
   out_6353941194245937609[45] = 0;
   out_6353941194245937609[46] = 0;
   out_6353941194245937609[47] = 0;
   out_6353941194245937609[48] = 0;
   out_6353941194245937609[49] = 0;
   out_6353941194245937609[50] = 0;
   out_6353941194245937609[51] = 0;
   out_6353941194245937609[52] = 0;
   out_6353941194245937609[53] = 0;
   out_6353941194245937609[54] = 0;
   out_6353941194245937609[55] = 0;
   out_6353941194245937609[56] = 1;
   out_6353941194245937609[57] = 0;
   out_6353941194245937609[58] = 0;
   out_6353941194245937609[59] = 1;
   out_6353941194245937609[60] = 0;
   out_6353941194245937609[61] = 0;
   out_6353941194245937609[62] = 0;
   out_6353941194245937609[63] = 0;
   out_6353941194245937609[64] = 0;
   out_6353941194245937609[65] = 0;
}
void h_9(double *state, double *unused, double *out_953217976374423093) {
   out_953217976374423093[0] = state[10];
   out_953217976374423093[1] = state[11];
   out_953217976374423093[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6112751547616346964) {
   out_6112751547616346964[0] = 0;
   out_6112751547616346964[1] = 0;
   out_6112751547616346964[2] = 0;
   out_6112751547616346964[3] = 0;
   out_6112751547616346964[4] = 0;
   out_6112751547616346964[5] = 0;
   out_6112751547616346964[6] = 0;
   out_6112751547616346964[7] = 0;
   out_6112751547616346964[8] = 0;
   out_6112751547616346964[9] = 0;
   out_6112751547616346964[10] = 1;
   out_6112751547616346964[11] = 0;
   out_6112751547616346964[12] = 0;
   out_6112751547616346964[13] = 0;
   out_6112751547616346964[14] = 0;
   out_6112751547616346964[15] = 0;
   out_6112751547616346964[16] = 0;
   out_6112751547616346964[17] = 0;
   out_6112751547616346964[18] = 0;
   out_6112751547616346964[19] = 0;
   out_6112751547616346964[20] = 0;
   out_6112751547616346964[21] = 0;
   out_6112751547616346964[22] = 0;
   out_6112751547616346964[23] = 0;
   out_6112751547616346964[24] = 0;
   out_6112751547616346964[25] = 0;
   out_6112751547616346964[26] = 0;
   out_6112751547616346964[27] = 0;
   out_6112751547616346964[28] = 0;
   out_6112751547616346964[29] = 0;
   out_6112751547616346964[30] = 0;
   out_6112751547616346964[31] = 0;
   out_6112751547616346964[32] = 0;
   out_6112751547616346964[33] = 1;
   out_6112751547616346964[34] = 0;
   out_6112751547616346964[35] = 0;
   out_6112751547616346964[36] = 0;
   out_6112751547616346964[37] = 0;
   out_6112751547616346964[38] = 0;
   out_6112751547616346964[39] = 0;
   out_6112751547616346964[40] = 0;
   out_6112751547616346964[41] = 0;
   out_6112751547616346964[42] = 0;
   out_6112751547616346964[43] = 0;
   out_6112751547616346964[44] = 0;
   out_6112751547616346964[45] = 0;
   out_6112751547616346964[46] = 0;
   out_6112751547616346964[47] = 0;
   out_6112751547616346964[48] = 0;
   out_6112751547616346964[49] = 0;
   out_6112751547616346964[50] = 0;
   out_6112751547616346964[51] = 0;
   out_6112751547616346964[52] = 0;
   out_6112751547616346964[53] = 0;
   out_6112751547616346964[54] = 0;
   out_6112751547616346964[55] = 0;
   out_6112751547616346964[56] = 1;
   out_6112751547616346964[57] = 0;
   out_6112751547616346964[58] = 0;
   out_6112751547616346964[59] = 0;
   out_6112751547616346964[60] = 0;
   out_6112751547616346964[61] = 0;
   out_6112751547616346964[62] = 0;
   out_6112751547616346964[63] = 0;
   out_6112751547616346964[64] = 0;
   out_6112751547616346964[65] = 0;
}
void h_10(double *state, double *unused, double *out_3419261070243978164) {
   out_3419261070243978164[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3419261070243978164[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3419261070243978164[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_197181602305955466) {
   out_197181602305955466[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_197181602305955466[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_197181602305955466[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_197181602305955466[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_197181602305955466[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_197181602305955466[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_197181602305955466[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_197181602305955466[7] = 0;
   out_197181602305955466[8] = 0;
   out_197181602305955466[9] = 0;
   out_197181602305955466[10] = 0;
   out_197181602305955466[11] = 0;
   out_197181602305955466[12] = 0;
   out_197181602305955466[13] = 0;
   out_197181602305955466[14] = 0;
   out_197181602305955466[15] = 0;
   out_197181602305955466[16] = 1;
   out_197181602305955466[17] = 0;
   out_197181602305955466[18] = 0;
   out_197181602305955466[19] = 1;
   out_197181602305955466[20] = 0;
   out_197181602305955466[21] = 0;
   out_197181602305955466[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_197181602305955466[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_197181602305955466[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_197181602305955466[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_197181602305955466[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_197181602305955466[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_197181602305955466[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_197181602305955466[29] = 0;
   out_197181602305955466[30] = 0;
   out_197181602305955466[31] = 0;
   out_197181602305955466[32] = 0;
   out_197181602305955466[33] = 0;
   out_197181602305955466[34] = 0;
   out_197181602305955466[35] = 0;
   out_197181602305955466[36] = 0;
   out_197181602305955466[37] = 0;
   out_197181602305955466[38] = 0;
   out_197181602305955466[39] = 1;
   out_197181602305955466[40] = 0;
   out_197181602305955466[41] = 0;
   out_197181602305955466[42] = 1;
   out_197181602305955466[43] = 0;
   out_197181602305955466[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_197181602305955466[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_197181602305955466[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_197181602305955466[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_197181602305955466[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_197181602305955466[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_197181602305955466[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_197181602305955466[51] = 0;
   out_197181602305955466[52] = 0;
   out_197181602305955466[53] = 0;
   out_197181602305955466[54] = 0;
   out_197181602305955466[55] = 0;
   out_197181602305955466[56] = 0;
   out_197181602305955466[57] = 0;
   out_197181602305955466[58] = 0;
   out_197181602305955466[59] = 0;
   out_197181602305955466[60] = 0;
   out_197181602305955466[61] = 0;
   out_197181602305955466[62] = 1;
   out_197181602305955466[63] = 0;
   out_197181602305955466[64] = 0;
   out_197181602305955466[65] = 1;
}
void h_12(double *state, double *unused, double *out_1346848399456022453) {
   out_1346848399456022453[0] = state[0];
   out_1346848399456022453[1] = state[1];
   out_1346848399456022453[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1334484786213975814) {
   out_1334484786213975814[0] = 1;
   out_1334484786213975814[1] = 0;
   out_1334484786213975814[2] = 0;
   out_1334484786213975814[3] = 0;
   out_1334484786213975814[4] = 0;
   out_1334484786213975814[5] = 0;
   out_1334484786213975814[6] = 0;
   out_1334484786213975814[7] = 0;
   out_1334484786213975814[8] = 0;
   out_1334484786213975814[9] = 0;
   out_1334484786213975814[10] = 0;
   out_1334484786213975814[11] = 0;
   out_1334484786213975814[12] = 0;
   out_1334484786213975814[13] = 0;
   out_1334484786213975814[14] = 0;
   out_1334484786213975814[15] = 0;
   out_1334484786213975814[16] = 0;
   out_1334484786213975814[17] = 0;
   out_1334484786213975814[18] = 0;
   out_1334484786213975814[19] = 0;
   out_1334484786213975814[20] = 0;
   out_1334484786213975814[21] = 0;
   out_1334484786213975814[22] = 0;
   out_1334484786213975814[23] = 1;
   out_1334484786213975814[24] = 0;
   out_1334484786213975814[25] = 0;
   out_1334484786213975814[26] = 0;
   out_1334484786213975814[27] = 0;
   out_1334484786213975814[28] = 0;
   out_1334484786213975814[29] = 0;
   out_1334484786213975814[30] = 0;
   out_1334484786213975814[31] = 0;
   out_1334484786213975814[32] = 0;
   out_1334484786213975814[33] = 0;
   out_1334484786213975814[34] = 0;
   out_1334484786213975814[35] = 0;
   out_1334484786213975814[36] = 0;
   out_1334484786213975814[37] = 0;
   out_1334484786213975814[38] = 0;
   out_1334484786213975814[39] = 0;
   out_1334484786213975814[40] = 0;
   out_1334484786213975814[41] = 0;
   out_1334484786213975814[42] = 0;
   out_1334484786213975814[43] = 0;
   out_1334484786213975814[44] = 0;
   out_1334484786213975814[45] = 0;
   out_1334484786213975814[46] = 1;
   out_1334484786213975814[47] = 0;
   out_1334484786213975814[48] = 0;
   out_1334484786213975814[49] = 0;
   out_1334484786213975814[50] = 0;
   out_1334484786213975814[51] = 0;
   out_1334484786213975814[52] = 0;
   out_1334484786213975814[53] = 0;
   out_1334484786213975814[54] = 0;
   out_1334484786213975814[55] = 0;
   out_1334484786213975814[56] = 0;
   out_1334484786213975814[57] = 0;
   out_1334484786213975814[58] = 0;
   out_1334484786213975814[59] = 0;
   out_1334484786213975814[60] = 0;
   out_1334484786213975814[61] = 0;
   out_1334484786213975814[62] = 0;
   out_1334484786213975814[63] = 0;
   out_1334484786213975814[64] = 0;
   out_1334484786213975814[65] = 0;
}
void h_31(double *state, double *unused, double *out_1889562335172587885) {
   out_1889562335172587885[0] = state[7];
   out_1889562335172587885[1] = state[8];
   out_1889562335172587885[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2987279136873330233) {
   out_2987279136873330233[0] = 0;
   out_2987279136873330233[1] = 0;
   out_2987279136873330233[2] = 0;
   out_2987279136873330233[3] = 0;
   out_2987279136873330233[4] = 0;
   out_2987279136873330233[5] = 0;
   out_2987279136873330233[6] = 0;
   out_2987279136873330233[7] = 1;
   out_2987279136873330233[8] = 0;
   out_2987279136873330233[9] = 0;
   out_2987279136873330233[10] = 0;
   out_2987279136873330233[11] = 0;
   out_2987279136873330233[12] = 0;
   out_2987279136873330233[13] = 0;
   out_2987279136873330233[14] = 0;
   out_2987279136873330233[15] = 0;
   out_2987279136873330233[16] = 0;
   out_2987279136873330233[17] = 0;
   out_2987279136873330233[18] = 0;
   out_2987279136873330233[19] = 0;
   out_2987279136873330233[20] = 0;
   out_2987279136873330233[21] = 0;
   out_2987279136873330233[22] = 0;
   out_2987279136873330233[23] = 0;
   out_2987279136873330233[24] = 0;
   out_2987279136873330233[25] = 0;
   out_2987279136873330233[26] = 0;
   out_2987279136873330233[27] = 0;
   out_2987279136873330233[28] = 0;
   out_2987279136873330233[29] = 0;
   out_2987279136873330233[30] = 1;
   out_2987279136873330233[31] = 0;
   out_2987279136873330233[32] = 0;
   out_2987279136873330233[33] = 0;
   out_2987279136873330233[34] = 0;
   out_2987279136873330233[35] = 0;
   out_2987279136873330233[36] = 0;
   out_2987279136873330233[37] = 0;
   out_2987279136873330233[38] = 0;
   out_2987279136873330233[39] = 0;
   out_2987279136873330233[40] = 0;
   out_2987279136873330233[41] = 0;
   out_2987279136873330233[42] = 0;
   out_2987279136873330233[43] = 0;
   out_2987279136873330233[44] = 0;
   out_2987279136873330233[45] = 0;
   out_2987279136873330233[46] = 0;
   out_2987279136873330233[47] = 0;
   out_2987279136873330233[48] = 0;
   out_2987279136873330233[49] = 0;
   out_2987279136873330233[50] = 0;
   out_2987279136873330233[51] = 0;
   out_2987279136873330233[52] = 0;
   out_2987279136873330233[53] = 1;
   out_2987279136873330233[54] = 0;
   out_2987279136873330233[55] = 0;
   out_2987279136873330233[56] = 0;
   out_2987279136873330233[57] = 0;
   out_2987279136873330233[58] = 0;
   out_2987279136873330233[59] = 0;
   out_2987279136873330233[60] = 0;
   out_2987279136873330233[61] = 0;
   out_2987279136873330233[62] = 0;
   out_2987279136873330233[63] = 0;
   out_2987279136873330233[64] = 0;
   out_2987279136873330233[65] = 0;
}
void h_32(double *state, double *unused, double *out_5132173494779662762) {
   out_5132173494779662762[0] = state[3];
   out_5132173494779662762[1] = state[4];
   out_5132173494779662762[2] = state[5];
   out_5132173494779662762[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7328283912606437121) {
   out_7328283912606437121[0] = 0;
   out_7328283912606437121[1] = 0;
   out_7328283912606437121[2] = 0;
   out_7328283912606437121[3] = 1;
   out_7328283912606437121[4] = 0;
   out_7328283912606437121[5] = 0;
   out_7328283912606437121[6] = 0;
   out_7328283912606437121[7] = 0;
   out_7328283912606437121[8] = 0;
   out_7328283912606437121[9] = 0;
   out_7328283912606437121[10] = 0;
   out_7328283912606437121[11] = 0;
   out_7328283912606437121[12] = 0;
   out_7328283912606437121[13] = 0;
   out_7328283912606437121[14] = 0;
   out_7328283912606437121[15] = 0;
   out_7328283912606437121[16] = 0;
   out_7328283912606437121[17] = 0;
   out_7328283912606437121[18] = 0;
   out_7328283912606437121[19] = 0;
   out_7328283912606437121[20] = 0;
   out_7328283912606437121[21] = 0;
   out_7328283912606437121[22] = 0;
   out_7328283912606437121[23] = 0;
   out_7328283912606437121[24] = 0;
   out_7328283912606437121[25] = 0;
   out_7328283912606437121[26] = 1;
   out_7328283912606437121[27] = 0;
   out_7328283912606437121[28] = 0;
   out_7328283912606437121[29] = 0;
   out_7328283912606437121[30] = 0;
   out_7328283912606437121[31] = 0;
   out_7328283912606437121[32] = 0;
   out_7328283912606437121[33] = 0;
   out_7328283912606437121[34] = 0;
   out_7328283912606437121[35] = 0;
   out_7328283912606437121[36] = 0;
   out_7328283912606437121[37] = 0;
   out_7328283912606437121[38] = 0;
   out_7328283912606437121[39] = 0;
   out_7328283912606437121[40] = 0;
   out_7328283912606437121[41] = 0;
   out_7328283912606437121[42] = 0;
   out_7328283912606437121[43] = 0;
   out_7328283912606437121[44] = 0;
   out_7328283912606437121[45] = 0;
   out_7328283912606437121[46] = 0;
   out_7328283912606437121[47] = 0;
   out_7328283912606437121[48] = 0;
   out_7328283912606437121[49] = 1;
   out_7328283912606437121[50] = 0;
   out_7328283912606437121[51] = 0;
   out_7328283912606437121[52] = 0;
   out_7328283912606437121[53] = 0;
   out_7328283912606437121[54] = 0;
   out_7328283912606437121[55] = 0;
   out_7328283912606437121[56] = 0;
   out_7328283912606437121[57] = 0;
   out_7328283912606437121[58] = 0;
   out_7328283912606437121[59] = 0;
   out_7328283912606437121[60] = 0;
   out_7328283912606437121[61] = 0;
   out_7328283912606437121[62] = 0;
   out_7328283912606437121[63] = 0;
   out_7328283912606437121[64] = 0;
   out_7328283912606437121[65] = 0;
   out_7328283912606437121[66] = 0;
   out_7328283912606437121[67] = 0;
   out_7328283912606437121[68] = 0;
   out_7328283912606437121[69] = 0;
   out_7328283912606437121[70] = 0;
   out_7328283912606437121[71] = 0;
   out_7328283912606437121[72] = 1;
   out_7328283912606437121[73] = 0;
   out_7328283912606437121[74] = 0;
   out_7328283912606437121[75] = 0;
   out_7328283912606437121[76] = 0;
   out_7328283912606437121[77] = 0;
   out_7328283912606437121[78] = 0;
   out_7328283912606437121[79] = 0;
   out_7328283912606437121[80] = 0;
   out_7328283912606437121[81] = 0;
   out_7328283912606437121[82] = 0;
   out_7328283912606437121[83] = 0;
   out_7328283912606437121[84] = 0;
   out_7328283912606437121[85] = 0;
   out_7328283912606437121[86] = 0;
   out_7328283912606437121[87] = 0;
}
void h_13(double *state, double *unused, double *out_5059856578377808030) {
   out_5059856578377808030[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5059856578377808030[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5059856578377808030[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8212200507733000639) {
   out_8212200507733000639[0] = 0;
   out_8212200507733000639[1] = 0;
   out_8212200507733000639[2] = 0;
   out_8212200507733000639[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8212200507733000639[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8212200507733000639[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8212200507733000639[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8212200507733000639[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8212200507733000639[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8212200507733000639[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8212200507733000639[10] = 0;
   out_8212200507733000639[11] = 0;
   out_8212200507733000639[12] = 0;
   out_8212200507733000639[13] = 0;
   out_8212200507733000639[14] = 0;
   out_8212200507733000639[15] = 0;
   out_8212200507733000639[16] = 0;
   out_8212200507733000639[17] = 0;
   out_8212200507733000639[18] = 0;
   out_8212200507733000639[19] = 0;
   out_8212200507733000639[20] = 0;
   out_8212200507733000639[21] = 0;
   out_8212200507733000639[22] = 0;
   out_8212200507733000639[23] = 0;
   out_8212200507733000639[24] = 0;
   out_8212200507733000639[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8212200507733000639[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8212200507733000639[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8212200507733000639[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8212200507733000639[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8212200507733000639[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8212200507733000639[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8212200507733000639[32] = 0;
   out_8212200507733000639[33] = 0;
   out_8212200507733000639[34] = 0;
   out_8212200507733000639[35] = 0;
   out_8212200507733000639[36] = 0;
   out_8212200507733000639[37] = 0;
   out_8212200507733000639[38] = 0;
   out_8212200507733000639[39] = 0;
   out_8212200507733000639[40] = 0;
   out_8212200507733000639[41] = 0;
   out_8212200507733000639[42] = 0;
   out_8212200507733000639[43] = 0;
   out_8212200507733000639[44] = 0;
   out_8212200507733000639[45] = 0;
   out_8212200507733000639[46] = 0;
   out_8212200507733000639[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8212200507733000639[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8212200507733000639[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8212200507733000639[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8212200507733000639[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8212200507733000639[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8212200507733000639[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8212200507733000639[54] = 0;
   out_8212200507733000639[55] = 0;
   out_8212200507733000639[56] = 0;
   out_8212200507733000639[57] = 0;
   out_8212200507733000639[58] = 0;
   out_8212200507733000639[59] = 0;
   out_8212200507733000639[60] = 0;
   out_8212200507733000639[61] = 0;
   out_8212200507733000639[62] = 0;
   out_8212200507733000639[63] = 0;
   out_8212200507733000639[64] = 0;
   out_8212200507733000639[65] = 0;
}
void h_14(double *state, double *unused, double *out_953217976374423093) {
   out_953217976374423093[0] = state[10];
   out_953217976374423093[1] = state[11];
   out_953217976374423093[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6112751547616346964) {
   out_6112751547616346964[0] = 0;
   out_6112751547616346964[1] = 0;
   out_6112751547616346964[2] = 0;
   out_6112751547616346964[3] = 0;
   out_6112751547616346964[4] = 0;
   out_6112751547616346964[5] = 0;
   out_6112751547616346964[6] = 0;
   out_6112751547616346964[7] = 0;
   out_6112751547616346964[8] = 0;
   out_6112751547616346964[9] = 0;
   out_6112751547616346964[10] = 1;
   out_6112751547616346964[11] = 0;
   out_6112751547616346964[12] = 0;
   out_6112751547616346964[13] = 0;
   out_6112751547616346964[14] = 0;
   out_6112751547616346964[15] = 0;
   out_6112751547616346964[16] = 0;
   out_6112751547616346964[17] = 0;
   out_6112751547616346964[18] = 0;
   out_6112751547616346964[19] = 0;
   out_6112751547616346964[20] = 0;
   out_6112751547616346964[21] = 0;
   out_6112751547616346964[22] = 0;
   out_6112751547616346964[23] = 0;
   out_6112751547616346964[24] = 0;
   out_6112751547616346964[25] = 0;
   out_6112751547616346964[26] = 0;
   out_6112751547616346964[27] = 0;
   out_6112751547616346964[28] = 0;
   out_6112751547616346964[29] = 0;
   out_6112751547616346964[30] = 0;
   out_6112751547616346964[31] = 0;
   out_6112751547616346964[32] = 0;
   out_6112751547616346964[33] = 1;
   out_6112751547616346964[34] = 0;
   out_6112751547616346964[35] = 0;
   out_6112751547616346964[36] = 0;
   out_6112751547616346964[37] = 0;
   out_6112751547616346964[38] = 0;
   out_6112751547616346964[39] = 0;
   out_6112751547616346964[40] = 0;
   out_6112751547616346964[41] = 0;
   out_6112751547616346964[42] = 0;
   out_6112751547616346964[43] = 0;
   out_6112751547616346964[44] = 0;
   out_6112751547616346964[45] = 0;
   out_6112751547616346964[46] = 0;
   out_6112751547616346964[47] = 0;
   out_6112751547616346964[48] = 0;
   out_6112751547616346964[49] = 0;
   out_6112751547616346964[50] = 0;
   out_6112751547616346964[51] = 0;
   out_6112751547616346964[52] = 0;
   out_6112751547616346964[53] = 0;
   out_6112751547616346964[54] = 0;
   out_6112751547616346964[55] = 0;
   out_6112751547616346964[56] = 1;
   out_6112751547616346964[57] = 0;
   out_6112751547616346964[58] = 0;
   out_6112751547616346964[59] = 0;
   out_6112751547616346964[60] = 0;
   out_6112751547616346964[61] = 0;
   out_6112751547616346964[62] = 0;
   out_6112751547616346964[63] = 0;
   out_6112751547616346964[64] = 0;
   out_6112751547616346964[65] = 0;
}
void h_33(double *state, double *unused, double *out_2217696332301297631) {
   out_2217696332301297631[0] = state[16];
   out_2217696332301297631[1] = state[17];
   out_2217696332301297631[2] = state[18];
}
void H_33(double *state, double *unused, double *out_163277867765527371) {
   out_163277867765527371[0] = 0;
   out_163277867765527371[1] = 0;
   out_163277867765527371[2] = 0;
   out_163277867765527371[3] = 0;
   out_163277867765527371[4] = 0;
   out_163277867765527371[5] = 0;
   out_163277867765527371[6] = 0;
   out_163277867765527371[7] = 0;
   out_163277867765527371[8] = 0;
   out_163277867765527371[9] = 0;
   out_163277867765527371[10] = 0;
   out_163277867765527371[11] = 0;
   out_163277867765527371[12] = 0;
   out_163277867765527371[13] = 0;
   out_163277867765527371[14] = 0;
   out_163277867765527371[15] = 0;
   out_163277867765527371[16] = 1;
   out_163277867765527371[17] = 0;
   out_163277867765527371[18] = 0;
   out_163277867765527371[19] = 0;
   out_163277867765527371[20] = 0;
   out_163277867765527371[21] = 0;
   out_163277867765527371[22] = 0;
   out_163277867765527371[23] = 0;
   out_163277867765527371[24] = 0;
   out_163277867765527371[25] = 0;
   out_163277867765527371[26] = 0;
   out_163277867765527371[27] = 0;
   out_163277867765527371[28] = 0;
   out_163277867765527371[29] = 0;
   out_163277867765527371[30] = 0;
   out_163277867765527371[31] = 0;
   out_163277867765527371[32] = 0;
   out_163277867765527371[33] = 0;
   out_163277867765527371[34] = 0;
   out_163277867765527371[35] = 0;
   out_163277867765527371[36] = 0;
   out_163277867765527371[37] = 0;
   out_163277867765527371[38] = 0;
   out_163277867765527371[39] = 1;
   out_163277867765527371[40] = 0;
   out_163277867765527371[41] = 0;
   out_163277867765527371[42] = 0;
   out_163277867765527371[43] = 0;
   out_163277867765527371[44] = 0;
   out_163277867765527371[45] = 0;
   out_163277867765527371[46] = 0;
   out_163277867765527371[47] = 0;
   out_163277867765527371[48] = 0;
   out_163277867765527371[49] = 0;
   out_163277867765527371[50] = 0;
   out_163277867765527371[51] = 0;
   out_163277867765527371[52] = 0;
   out_163277867765527371[53] = 0;
   out_163277867765527371[54] = 0;
   out_163277867765527371[55] = 0;
   out_163277867765527371[56] = 0;
   out_163277867765527371[57] = 0;
   out_163277867765527371[58] = 0;
   out_163277867765527371[59] = 0;
   out_163277867765527371[60] = 0;
   out_163277867765527371[61] = 0;
   out_163277867765527371[62] = 1;
   out_163277867765527371[63] = 0;
   out_163277867765527371[64] = 0;
   out_163277867765527371[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5454284932020681649) {
  H(in_vec, out_5454284932020681649);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7704279630345638266) {
  err_fun(nom_x, delta_x, out_7704279630345638266);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2513211039557519125) {
  inv_err_fun(nom_x, true_x, out_2513211039557519125);
}
void live_H_mod_fun(double *state, double *out_7435501040416024686) {
  H_mod_fun(state, out_7435501040416024686);
}
void live_f_fun(double *state, double dt, double *out_4212934802868580656) {
  f_fun(state,  dt, out_4212934802868580656);
}
void live_F_fun(double *state, double dt, double *out_3120508586470747969) {
  F_fun(state,  dt, out_3120508586470747969);
}
void live_h_4(double *state, double *unused, double *out_1854745610775522181) {
  h_4(state, unused, out_1854745610775522181);
}
void live_H_4(double *state, double *unused, double *out_6353941194245937609) {
  H_4(state, unused, out_6353941194245937609);
}
void live_h_9(double *state, double *unused, double *out_953217976374423093) {
  h_9(state, unused, out_953217976374423093);
}
void live_H_9(double *state, double *unused, double *out_6112751547616346964) {
  H_9(state, unused, out_6112751547616346964);
}
void live_h_10(double *state, double *unused, double *out_3419261070243978164) {
  h_10(state, unused, out_3419261070243978164);
}
void live_H_10(double *state, double *unused, double *out_197181602305955466) {
  H_10(state, unused, out_197181602305955466);
}
void live_h_12(double *state, double *unused, double *out_1346848399456022453) {
  h_12(state, unused, out_1346848399456022453);
}
void live_H_12(double *state, double *unused, double *out_1334484786213975814) {
  H_12(state, unused, out_1334484786213975814);
}
void live_h_31(double *state, double *unused, double *out_1889562335172587885) {
  h_31(state, unused, out_1889562335172587885);
}
void live_H_31(double *state, double *unused, double *out_2987279136873330233) {
  H_31(state, unused, out_2987279136873330233);
}
void live_h_32(double *state, double *unused, double *out_5132173494779662762) {
  h_32(state, unused, out_5132173494779662762);
}
void live_H_32(double *state, double *unused, double *out_7328283912606437121) {
  H_32(state, unused, out_7328283912606437121);
}
void live_h_13(double *state, double *unused, double *out_5059856578377808030) {
  h_13(state, unused, out_5059856578377808030);
}
void live_H_13(double *state, double *unused, double *out_8212200507733000639) {
  H_13(state, unused, out_8212200507733000639);
}
void live_h_14(double *state, double *unused, double *out_953217976374423093) {
  h_14(state, unused, out_953217976374423093);
}
void live_H_14(double *state, double *unused, double *out_6112751547616346964) {
  H_14(state, unused, out_6112751547616346964);
}
void live_h_33(double *state, double *unused, double *out_2217696332301297631) {
  h_33(state, unused, out_2217696332301297631);
}
void live_H_33(double *state, double *unused, double *out_163277867765527371) {
  H_33(state, unused, out_163277867765527371);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
