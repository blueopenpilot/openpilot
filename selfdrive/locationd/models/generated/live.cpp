#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2853646381397912552) {
   out_2853646381397912552[0] = 0;
   out_2853646381397912552[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2853646381397912552[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2853646381397912552[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2853646381397912552[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2853646381397912552[5] = -sin(in_vec[1]);
   out_2853646381397912552[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2853646381397912552[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2853646381397912552[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2853646381397912552[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2853646381397912552[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2853646381397912552[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2853646381397912552[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2853646381397912552[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2853646381397912552[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2853646381397912552[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2853646381397912552[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2853646381397912552[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5549535972816791141) {
   out_5549535972816791141[0] = delta_x[0] + nom_x[0];
   out_5549535972816791141[1] = delta_x[1] + nom_x[1];
   out_5549535972816791141[2] = delta_x[2] + nom_x[2];
   out_5549535972816791141[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5549535972816791141[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5549535972816791141[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5549535972816791141[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5549535972816791141[7] = delta_x[6] + nom_x[7];
   out_5549535972816791141[8] = delta_x[7] + nom_x[8];
   out_5549535972816791141[9] = delta_x[8] + nom_x[9];
   out_5549535972816791141[10] = delta_x[9] + nom_x[10];
   out_5549535972816791141[11] = delta_x[10] + nom_x[11];
   out_5549535972816791141[12] = delta_x[11] + nom_x[12];
   out_5549535972816791141[13] = delta_x[12] + nom_x[13];
   out_5549535972816791141[14] = delta_x[13] + nom_x[14];
   out_5549535972816791141[15] = delta_x[14] + nom_x[15];
   out_5549535972816791141[16] = delta_x[15] + nom_x[16];
   out_5549535972816791141[17] = delta_x[16] + nom_x[17];
   out_5549535972816791141[18] = delta_x[17] + nom_x[18];
   out_5549535972816791141[19] = delta_x[18] + nom_x[19];
   out_5549535972816791141[20] = delta_x[19] + nom_x[20];
   out_5549535972816791141[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3634911457740076995) {
   out_3634911457740076995[0] = -nom_x[0] + true_x[0];
   out_3634911457740076995[1] = -nom_x[1] + true_x[1];
   out_3634911457740076995[2] = -nom_x[2] + true_x[2];
   out_3634911457740076995[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3634911457740076995[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3634911457740076995[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3634911457740076995[6] = -nom_x[7] + true_x[7];
   out_3634911457740076995[7] = -nom_x[8] + true_x[8];
   out_3634911457740076995[8] = -nom_x[9] + true_x[9];
   out_3634911457740076995[9] = -nom_x[10] + true_x[10];
   out_3634911457740076995[10] = -nom_x[11] + true_x[11];
   out_3634911457740076995[11] = -nom_x[12] + true_x[12];
   out_3634911457740076995[12] = -nom_x[13] + true_x[13];
   out_3634911457740076995[13] = -nom_x[14] + true_x[14];
   out_3634911457740076995[14] = -nom_x[15] + true_x[15];
   out_3634911457740076995[15] = -nom_x[16] + true_x[16];
   out_3634911457740076995[16] = -nom_x[17] + true_x[17];
   out_3634911457740076995[17] = -nom_x[18] + true_x[18];
   out_3634911457740076995[18] = -nom_x[19] + true_x[19];
   out_3634911457740076995[19] = -nom_x[20] + true_x[20];
   out_3634911457740076995[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8058031850184286508) {
   out_8058031850184286508[0] = 1.0;
   out_8058031850184286508[1] = 0;
   out_8058031850184286508[2] = 0;
   out_8058031850184286508[3] = 0;
   out_8058031850184286508[4] = 0;
   out_8058031850184286508[5] = 0;
   out_8058031850184286508[6] = 0;
   out_8058031850184286508[7] = 0;
   out_8058031850184286508[8] = 0;
   out_8058031850184286508[9] = 0;
   out_8058031850184286508[10] = 0;
   out_8058031850184286508[11] = 0;
   out_8058031850184286508[12] = 0;
   out_8058031850184286508[13] = 0;
   out_8058031850184286508[14] = 0;
   out_8058031850184286508[15] = 0;
   out_8058031850184286508[16] = 0;
   out_8058031850184286508[17] = 0;
   out_8058031850184286508[18] = 0;
   out_8058031850184286508[19] = 0;
   out_8058031850184286508[20] = 0;
   out_8058031850184286508[21] = 0;
   out_8058031850184286508[22] = 1.0;
   out_8058031850184286508[23] = 0;
   out_8058031850184286508[24] = 0;
   out_8058031850184286508[25] = 0;
   out_8058031850184286508[26] = 0;
   out_8058031850184286508[27] = 0;
   out_8058031850184286508[28] = 0;
   out_8058031850184286508[29] = 0;
   out_8058031850184286508[30] = 0;
   out_8058031850184286508[31] = 0;
   out_8058031850184286508[32] = 0;
   out_8058031850184286508[33] = 0;
   out_8058031850184286508[34] = 0;
   out_8058031850184286508[35] = 0;
   out_8058031850184286508[36] = 0;
   out_8058031850184286508[37] = 0;
   out_8058031850184286508[38] = 0;
   out_8058031850184286508[39] = 0;
   out_8058031850184286508[40] = 0;
   out_8058031850184286508[41] = 0;
   out_8058031850184286508[42] = 0;
   out_8058031850184286508[43] = 0;
   out_8058031850184286508[44] = 1.0;
   out_8058031850184286508[45] = 0;
   out_8058031850184286508[46] = 0;
   out_8058031850184286508[47] = 0;
   out_8058031850184286508[48] = 0;
   out_8058031850184286508[49] = 0;
   out_8058031850184286508[50] = 0;
   out_8058031850184286508[51] = 0;
   out_8058031850184286508[52] = 0;
   out_8058031850184286508[53] = 0;
   out_8058031850184286508[54] = 0;
   out_8058031850184286508[55] = 0;
   out_8058031850184286508[56] = 0;
   out_8058031850184286508[57] = 0;
   out_8058031850184286508[58] = 0;
   out_8058031850184286508[59] = 0;
   out_8058031850184286508[60] = 0;
   out_8058031850184286508[61] = 0;
   out_8058031850184286508[62] = 0;
   out_8058031850184286508[63] = 0;
   out_8058031850184286508[64] = 0;
   out_8058031850184286508[65] = 0;
   out_8058031850184286508[66] = -0.5*state[4];
   out_8058031850184286508[67] = -0.5*state[5];
   out_8058031850184286508[68] = -0.5*state[6];
   out_8058031850184286508[69] = 0;
   out_8058031850184286508[70] = 0;
   out_8058031850184286508[71] = 0;
   out_8058031850184286508[72] = 0;
   out_8058031850184286508[73] = 0;
   out_8058031850184286508[74] = 0;
   out_8058031850184286508[75] = 0;
   out_8058031850184286508[76] = 0;
   out_8058031850184286508[77] = 0;
   out_8058031850184286508[78] = 0;
   out_8058031850184286508[79] = 0;
   out_8058031850184286508[80] = 0;
   out_8058031850184286508[81] = 0;
   out_8058031850184286508[82] = 0;
   out_8058031850184286508[83] = 0;
   out_8058031850184286508[84] = 0;
   out_8058031850184286508[85] = 0;
   out_8058031850184286508[86] = 0;
   out_8058031850184286508[87] = 0.5*state[3];
   out_8058031850184286508[88] = 0.5*state[6];
   out_8058031850184286508[89] = -0.5*state[5];
   out_8058031850184286508[90] = 0;
   out_8058031850184286508[91] = 0;
   out_8058031850184286508[92] = 0;
   out_8058031850184286508[93] = 0;
   out_8058031850184286508[94] = 0;
   out_8058031850184286508[95] = 0;
   out_8058031850184286508[96] = 0;
   out_8058031850184286508[97] = 0;
   out_8058031850184286508[98] = 0;
   out_8058031850184286508[99] = 0;
   out_8058031850184286508[100] = 0;
   out_8058031850184286508[101] = 0;
   out_8058031850184286508[102] = 0;
   out_8058031850184286508[103] = 0;
   out_8058031850184286508[104] = 0;
   out_8058031850184286508[105] = 0;
   out_8058031850184286508[106] = 0;
   out_8058031850184286508[107] = 0;
   out_8058031850184286508[108] = -0.5*state[6];
   out_8058031850184286508[109] = 0.5*state[3];
   out_8058031850184286508[110] = 0.5*state[4];
   out_8058031850184286508[111] = 0;
   out_8058031850184286508[112] = 0;
   out_8058031850184286508[113] = 0;
   out_8058031850184286508[114] = 0;
   out_8058031850184286508[115] = 0;
   out_8058031850184286508[116] = 0;
   out_8058031850184286508[117] = 0;
   out_8058031850184286508[118] = 0;
   out_8058031850184286508[119] = 0;
   out_8058031850184286508[120] = 0;
   out_8058031850184286508[121] = 0;
   out_8058031850184286508[122] = 0;
   out_8058031850184286508[123] = 0;
   out_8058031850184286508[124] = 0;
   out_8058031850184286508[125] = 0;
   out_8058031850184286508[126] = 0;
   out_8058031850184286508[127] = 0;
   out_8058031850184286508[128] = 0;
   out_8058031850184286508[129] = 0.5*state[5];
   out_8058031850184286508[130] = -0.5*state[4];
   out_8058031850184286508[131] = 0.5*state[3];
   out_8058031850184286508[132] = 0;
   out_8058031850184286508[133] = 0;
   out_8058031850184286508[134] = 0;
   out_8058031850184286508[135] = 0;
   out_8058031850184286508[136] = 0;
   out_8058031850184286508[137] = 0;
   out_8058031850184286508[138] = 0;
   out_8058031850184286508[139] = 0;
   out_8058031850184286508[140] = 0;
   out_8058031850184286508[141] = 0;
   out_8058031850184286508[142] = 0;
   out_8058031850184286508[143] = 0;
   out_8058031850184286508[144] = 0;
   out_8058031850184286508[145] = 0;
   out_8058031850184286508[146] = 0;
   out_8058031850184286508[147] = 0;
   out_8058031850184286508[148] = 0;
   out_8058031850184286508[149] = 0;
   out_8058031850184286508[150] = 0;
   out_8058031850184286508[151] = 0;
   out_8058031850184286508[152] = 0;
   out_8058031850184286508[153] = 1.0;
   out_8058031850184286508[154] = 0;
   out_8058031850184286508[155] = 0;
   out_8058031850184286508[156] = 0;
   out_8058031850184286508[157] = 0;
   out_8058031850184286508[158] = 0;
   out_8058031850184286508[159] = 0;
   out_8058031850184286508[160] = 0;
   out_8058031850184286508[161] = 0;
   out_8058031850184286508[162] = 0;
   out_8058031850184286508[163] = 0;
   out_8058031850184286508[164] = 0;
   out_8058031850184286508[165] = 0;
   out_8058031850184286508[166] = 0;
   out_8058031850184286508[167] = 0;
   out_8058031850184286508[168] = 0;
   out_8058031850184286508[169] = 0;
   out_8058031850184286508[170] = 0;
   out_8058031850184286508[171] = 0;
   out_8058031850184286508[172] = 0;
   out_8058031850184286508[173] = 0;
   out_8058031850184286508[174] = 0;
   out_8058031850184286508[175] = 1.0;
   out_8058031850184286508[176] = 0;
   out_8058031850184286508[177] = 0;
   out_8058031850184286508[178] = 0;
   out_8058031850184286508[179] = 0;
   out_8058031850184286508[180] = 0;
   out_8058031850184286508[181] = 0;
   out_8058031850184286508[182] = 0;
   out_8058031850184286508[183] = 0;
   out_8058031850184286508[184] = 0;
   out_8058031850184286508[185] = 0;
   out_8058031850184286508[186] = 0;
   out_8058031850184286508[187] = 0;
   out_8058031850184286508[188] = 0;
   out_8058031850184286508[189] = 0;
   out_8058031850184286508[190] = 0;
   out_8058031850184286508[191] = 0;
   out_8058031850184286508[192] = 0;
   out_8058031850184286508[193] = 0;
   out_8058031850184286508[194] = 0;
   out_8058031850184286508[195] = 0;
   out_8058031850184286508[196] = 0;
   out_8058031850184286508[197] = 1.0;
   out_8058031850184286508[198] = 0;
   out_8058031850184286508[199] = 0;
   out_8058031850184286508[200] = 0;
   out_8058031850184286508[201] = 0;
   out_8058031850184286508[202] = 0;
   out_8058031850184286508[203] = 0;
   out_8058031850184286508[204] = 0;
   out_8058031850184286508[205] = 0;
   out_8058031850184286508[206] = 0;
   out_8058031850184286508[207] = 0;
   out_8058031850184286508[208] = 0;
   out_8058031850184286508[209] = 0;
   out_8058031850184286508[210] = 0;
   out_8058031850184286508[211] = 0;
   out_8058031850184286508[212] = 0;
   out_8058031850184286508[213] = 0;
   out_8058031850184286508[214] = 0;
   out_8058031850184286508[215] = 0;
   out_8058031850184286508[216] = 0;
   out_8058031850184286508[217] = 0;
   out_8058031850184286508[218] = 0;
   out_8058031850184286508[219] = 1.0;
   out_8058031850184286508[220] = 0;
   out_8058031850184286508[221] = 0;
   out_8058031850184286508[222] = 0;
   out_8058031850184286508[223] = 0;
   out_8058031850184286508[224] = 0;
   out_8058031850184286508[225] = 0;
   out_8058031850184286508[226] = 0;
   out_8058031850184286508[227] = 0;
   out_8058031850184286508[228] = 0;
   out_8058031850184286508[229] = 0;
   out_8058031850184286508[230] = 0;
   out_8058031850184286508[231] = 0;
   out_8058031850184286508[232] = 0;
   out_8058031850184286508[233] = 0;
   out_8058031850184286508[234] = 0;
   out_8058031850184286508[235] = 0;
   out_8058031850184286508[236] = 0;
   out_8058031850184286508[237] = 0;
   out_8058031850184286508[238] = 0;
   out_8058031850184286508[239] = 0;
   out_8058031850184286508[240] = 0;
   out_8058031850184286508[241] = 1.0;
   out_8058031850184286508[242] = 0;
   out_8058031850184286508[243] = 0;
   out_8058031850184286508[244] = 0;
   out_8058031850184286508[245] = 0;
   out_8058031850184286508[246] = 0;
   out_8058031850184286508[247] = 0;
   out_8058031850184286508[248] = 0;
   out_8058031850184286508[249] = 0;
   out_8058031850184286508[250] = 0;
   out_8058031850184286508[251] = 0;
   out_8058031850184286508[252] = 0;
   out_8058031850184286508[253] = 0;
   out_8058031850184286508[254] = 0;
   out_8058031850184286508[255] = 0;
   out_8058031850184286508[256] = 0;
   out_8058031850184286508[257] = 0;
   out_8058031850184286508[258] = 0;
   out_8058031850184286508[259] = 0;
   out_8058031850184286508[260] = 0;
   out_8058031850184286508[261] = 0;
   out_8058031850184286508[262] = 0;
   out_8058031850184286508[263] = 1.0;
   out_8058031850184286508[264] = 0;
   out_8058031850184286508[265] = 0;
   out_8058031850184286508[266] = 0;
   out_8058031850184286508[267] = 0;
   out_8058031850184286508[268] = 0;
   out_8058031850184286508[269] = 0;
   out_8058031850184286508[270] = 0;
   out_8058031850184286508[271] = 0;
   out_8058031850184286508[272] = 0;
   out_8058031850184286508[273] = 0;
   out_8058031850184286508[274] = 0;
   out_8058031850184286508[275] = 0;
   out_8058031850184286508[276] = 0;
   out_8058031850184286508[277] = 0;
   out_8058031850184286508[278] = 0;
   out_8058031850184286508[279] = 0;
   out_8058031850184286508[280] = 0;
   out_8058031850184286508[281] = 0;
   out_8058031850184286508[282] = 0;
   out_8058031850184286508[283] = 0;
   out_8058031850184286508[284] = 0;
   out_8058031850184286508[285] = 1.0;
   out_8058031850184286508[286] = 0;
   out_8058031850184286508[287] = 0;
   out_8058031850184286508[288] = 0;
   out_8058031850184286508[289] = 0;
   out_8058031850184286508[290] = 0;
   out_8058031850184286508[291] = 0;
   out_8058031850184286508[292] = 0;
   out_8058031850184286508[293] = 0;
   out_8058031850184286508[294] = 0;
   out_8058031850184286508[295] = 0;
   out_8058031850184286508[296] = 0;
   out_8058031850184286508[297] = 0;
   out_8058031850184286508[298] = 0;
   out_8058031850184286508[299] = 0;
   out_8058031850184286508[300] = 0;
   out_8058031850184286508[301] = 0;
   out_8058031850184286508[302] = 0;
   out_8058031850184286508[303] = 0;
   out_8058031850184286508[304] = 0;
   out_8058031850184286508[305] = 0;
   out_8058031850184286508[306] = 0;
   out_8058031850184286508[307] = 1.0;
   out_8058031850184286508[308] = 0;
   out_8058031850184286508[309] = 0;
   out_8058031850184286508[310] = 0;
   out_8058031850184286508[311] = 0;
   out_8058031850184286508[312] = 0;
   out_8058031850184286508[313] = 0;
   out_8058031850184286508[314] = 0;
   out_8058031850184286508[315] = 0;
   out_8058031850184286508[316] = 0;
   out_8058031850184286508[317] = 0;
   out_8058031850184286508[318] = 0;
   out_8058031850184286508[319] = 0;
   out_8058031850184286508[320] = 0;
   out_8058031850184286508[321] = 0;
   out_8058031850184286508[322] = 0;
   out_8058031850184286508[323] = 0;
   out_8058031850184286508[324] = 0;
   out_8058031850184286508[325] = 0;
   out_8058031850184286508[326] = 0;
   out_8058031850184286508[327] = 0;
   out_8058031850184286508[328] = 0;
   out_8058031850184286508[329] = 1.0;
   out_8058031850184286508[330] = 0;
   out_8058031850184286508[331] = 0;
   out_8058031850184286508[332] = 0;
   out_8058031850184286508[333] = 0;
   out_8058031850184286508[334] = 0;
   out_8058031850184286508[335] = 0;
   out_8058031850184286508[336] = 0;
   out_8058031850184286508[337] = 0;
   out_8058031850184286508[338] = 0;
   out_8058031850184286508[339] = 0;
   out_8058031850184286508[340] = 0;
   out_8058031850184286508[341] = 0;
   out_8058031850184286508[342] = 0;
   out_8058031850184286508[343] = 0;
   out_8058031850184286508[344] = 0;
   out_8058031850184286508[345] = 0;
   out_8058031850184286508[346] = 0;
   out_8058031850184286508[347] = 0;
   out_8058031850184286508[348] = 0;
   out_8058031850184286508[349] = 0;
   out_8058031850184286508[350] = 0;
   out_8058031850184286508[351] = 1.0;
   out_8058031850184286508[352] = 0;
   out_8058031850184286508[353] = 0;
   out_8058031850184286508[354] = 0;
   out_8058031850184286508[355] = 0;
   out_8058031850184286508[356] = 0;
   out_8058031850184286508[357] = 0;
   out_8058031850184286508[358] = 0;
   out_8058031850184286508[359] = 0;
   out_8058031850184286508[360] = 0;
   out_8058031850184286508[361] = 0;
   out_8058031850184286508[362] = 0;
   out_8058031850184286508[363] = 0;
   out_8058031850184286508[364] = 0;
   out_8058031850184286508[365] = 0;
   out_8058031850184286508[366] = 0;
   out_8058031850184286508[367] = 0;
   out_8058031850184286508[368] = 0;
   out_8058031850184286508[369] = 0;
   out_8058031850184286508[370] = 0;
   out_8058031850184286508[371] = 0;
   out_8058031850184286508[372] = 0;
   out_8058031850184286508[373] = 1.0;
   out_8058031850184286508[374] = 0;
   out_8058031850184286508[375] = 0;
   out_8058031850184286508[376] = 0;
   out_8058031850184286508[377] = 0;
   out_8058031850184286508[378] = 0;
   out_8058031850184286508[379] = 0;
   out_8058031850184286508[380] = 0;
   out_8058031850184286508[381] = 0;
   out_8058031850184286508[382] = 0;
   out_8058031850184286508[383] = 0;
   out_8058031850184286508[384] = 0;
   out_8058031850184286508[385] = 0;
   out_8058031850184286508[386] = 0;
   out_8058031850184286508[387] = 0;
   out_8058031850184286508[388] = 0;
   out_8058031850184286508[389] = 0;
   out_8058031850184286508[390] = 0;
   out_8058031850184286508[391] = 0;
   out_8058031850184286508[392] = 0;
   out_8058031850184286508[393] = 0;
   out_8058031850184286508[394] = 0;
   out_8058031850184286508[395] = 1.0;
   out_8058031850184286508[396] = 0;
   out_8058031850184286508[397] = 0;
   out_8058031850184286508[398] = 0;
   out_8058031850184286508[399] = 0;
   out_8058031850184286508[400] = 0;
   out_8058031850184286508[401] = 0;
   out_8058031850184286508[402] = 0;
   out_8058031850184286508[403] = 0;
   out_8058031850184286508[404] = 0;
   out_8058031850184286508[405] = 0;
   out_8058031850184286508[406] = 0;
   out_8058031850184286508[407] = 0;
   out_8058031850184286508[408] = 0;
   out_8058031850184286508[409] = 0;
   out_8058031850184286508[410] = 0;
   out_8058031850184286508[411] = 0;
   out_8058031850184286508[412] = 0;
   out_8058031850184286508[413] = 0;
   out_8058031850184286508[414] = 0;
   out_8058031850184286508[415] = 0;
   out_8058031850184286508[416] = 0;
   out_8058031850184286508[417] = 1.0;
   out_8058031850184286508[418] = 0;
   out_8058031850184286508[419] = 0;
   out_8058031850184286508[420] = 0;
   out_8058031850184286508[421] = 0;
   out_8058031850184286508[422] = 0;
   out_8058031850184286508[423] = 0;
   out_8058031850184286508[424] = 0;
   out_8058031850184286508[425] = 0;
   out_8058031850184286508[426] = 0;
   out_8058031850184286508[427] = 0;
   out_8058031850184286508[428] = 0;
   out_8058031850184286508[429] = 0;
   out_8058031850184286508[430] = 0;
   out_8058031850184286508[431] = 0;
   out_8058031850184286508[432] = 0;
   out_8058031850184286508[433] = 0;
   out_8058031850184286508[434] = 0;
   out_8058031850184286508[435] = 0;
   out_8058031850184286508[436] = 0;
   out_8058031850184286508[437] = 0;
   out_8058031850184286508[438] = 0;
   out_8058031850184286508[439] = 1.0;
   out_8058031850184286508[440] = 0;
   out_8058031850184286508[441] = 0;
   out_8058031850184286508[442] = 0;
   out_8058031850184286508[443] = 0;
   out_8058031850184286508[444] = 0;
   out_8058031850184286508[445] = 0;
   out_8058031850184286508[446] = 0;
   out_8058031850184286508[447] = 0;
   out_8058031850184286508[448] = 0;
   out_8058031850184286508[449] = 0;
   out_8058031850184286508[450] = 0;
   out_8058031850184286508[451] = 0;
   out_8058031850184286508[452] = 0;
   out_8058031850184286508[453] = 0;
   out_8058031850184286508[454] = 0;
   out_8058031850184286508[455] = 0;
   out_8058031850184286508[456] = 0;
   out_8058031850184286508[457] = 0;
   out_8058031850184286508[458] = 0;
   out_8058031850184286508[459] = 0;
   out_8058031850184286508[460] = 0;
   out_8058031850184286508[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3451938404271731457) {
   out_3451938404271731457[0] = dt*state[7] + state[0];
   out_3451938404271731457[1] = dt*state[8] + state[1];
   out_3451938404271731457[2] = dt*state[9] + state[2];
   out_3451938404271731457[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3451938404271731457[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3451938404271731457[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3451938404271731457[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3451938404271731457[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3451938404271731457[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3451938404271731457[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3451938404271731457[10] = state[10];
   out_3451938404271731457[11] = state[11];
   out_3451938404271731457[12] = state[12];
   out_3451938404271731457[13] = state[13];
   out_3451938404271731457[14] = state[14];
   out_3451938404271731457[15] = state[15];
   out_3451938404271731457[16] = state[16];
   out_3451938404271731457[17] = state[17];
   out_3451938404271731457[18] = state[18];
   out_3451938404271731457[19] = state[19];
   out_3451938404271731457[20] = state[20];
   out_3451938404271731457[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8702098680640092912) {
   out_8702098680640092912[0] = 1;
   out_8702098680640092912[1] = 0;
   out_8702098680640092912[2] = 0;
   out_8702098680640092912[3] = 0;
   out_8702098680640092912[4] = 0;
   out_8702098680640092912[5] = 0;
   out_8702098680640092912[6] = dt;
   out_8702098680640092912[7] = 0;
   out_8702098680640092912[8] = 0;
   out_8702098680640092912[9] = 0;
   out_8702098680640092912[10] = 0;
   out_8702098680640092912[11] = 0;
   out_8702098680640092912[12] = 0;
   out_8702098680640092912[13] = 0;
   out_8702098680640092912[14] = 0;
   out_8702098680640092912[15] = 0;
   out_8702098680640092912[16] = 0;
   out_8702098680640092912[17] = 0;
   out_8702098680640092912[18] = 0;
   out_8702098680640092912[19] = 0;
   out_8702098680640092912[20] = 0;
   out_8702098680640092912[21] = 0;
   out_8702098680640092912[22] = 1;
   out_8702098680640092912[23] = 0;
   out_8702098680640092912[24] = 0;
   out_8702098680640092912[25] = 0;
   out_8702098680640092912[26] = 0;
   out_8702098680640092912[27] = 0;
   out_8702098680640092912[28] = dt;
   out_8702098680640092912[29] = 0;
   out_8702098680640092912[30] = 0;
   out_8702098680640092912[31] = 0;
   out_8702098680640092912[32] = 0;
   out_8702098680640092912[33] = 0;
   out_8702098680640092912[34] = 0;
   out_8702098680640092912[35] = 0;
   out_8702098680640092912[36] = 0;
   out_8702098680640092912[37] = 0;
   out_8702098680640092912[38] = 0;
   out_8702098680640092912[39] = 0;
   out_8702098680640092912[40] = 0;
   out_8702098680640092912[41] = 0;
   out_8702098680640092912[42] = 0;
   out_8702098680640092912[43] = 0;
   out_8702098680640092912[44] = 1;
   out_8702098680640092912[45] = 0;
   out_8702098680640092912[46] = 0;
   out_8702098680640092912[47] = 0;
   out_8702098680640092912[48] = 0;
   out_8702098680640092912[49] = 0;
   out_8702098680640092912[50] = dt;
   out_8702098680640092912[51] = 0;
   out_8702098680640092912[52] = 0;
   out_8702098680640092912[53] = 0;
   out_8702098680640092912[54] = 0;
   out_8702098680640092912[55] = 0;
   out_8702098680640092912[56] = 0;
   out_8702098680640092912[57] = 0;
   out_8702098680640092912[58] = 0;
   out_8702098680640092912[59] = 0;
   out_8702098680640092912[60] = 0;
   out_8702098680640092912[61] = 0;
   out_8702098680640092912[62] = 0;
   out_8702098680640092912[63] = 0;
   out_8702098680640092912[64] = 0;
   out_8702098680640092912[65] = 0;
   out_8702098680640092912[66] = 1;
   out_8702098680640092912[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8702098680640092912[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8702098680640092912[69] = 0;
   out_8702098680640092912[70] = 0;
   out_8702098680640092912[71] = 0;
   out_8702098680640092912[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8702098680640092912[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8702098680640092912[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8702098680640092912[75] = 0;
   out_8702098680640092912[76] = 0;
   out_8702098680640092912[77] = 0;
   out_8702098680640092912[78] = 0;
   out_8702098680640092912[79] = 0;
   out_8702098680640092912[80] = 0;
   out_8702098680640092912[81] = 0;
   out_8702098680640092912[82] = 0;
   out_8702098680640092912[83] = 0;
   out_8702098680640092912[84] = 0;
   out_8702098680640092912[85] = 0;
   out_8702098680640092912[86] = 0;
   out_8702098680640092912[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8702098680640092912[88] = 1;
   out_8702098680640092912[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8702098680640092912[90] = 0;
   out_8702098680640092912[91] = 0;
   out_8702098680640092912[92] = 0;
   out_8702098680640092912[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8702098680640092912[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8702098680640092912[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8702098680640092912[96] = 0;
   out_8702098680640092912[97] = 0;
   out_8702098680640092912[98] = 0;
   out_8702098680640092912[99] = 0;
   out_8702098680640092912[100] = 0;
   out_8702098680640092912[101] = 0;
   out_8702098680640092912[102] = 0;
   out_8702098680640092912[103] = 0;
   out_8702098680640092912[104] = 0;
   out_8702098680640092912[105] = 0;
   out_8702098680640092912[106] = 0;
   out_8702098680640092912[107] = 0;
   out_8702098680640092912[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8702098680640092912[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8702098680640092912[110] = 1;
   out_8702098680640092912[111] = 0;
   out_8702098680640092912[112] = 0;
   out_8702098680640092912[113] = 0;
   out_8702098680640092912[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8702098680640092912[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8702098680640092912[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8702098680640092912[117] = 0;
   out_8702098680640092912[118] = 0;
   out_8702098680640092912[119] = 0;
   out_8702098680640092912[120] = 0;
   out_8702098680640092912[121] = 0;
   out_8702098680640092912[122] = 0;
   out_8702098680640092912[123] = 0;
   out_8702098680640092912[124] = 0;
   out_8702098680640092912[125] = 0;
   out_8702098680640092912[126] = 0;
   out_8702098680640092912[127] = 0;
   out_8702098680640092912[128] = 0;
   out_8702098680640092912[129] = 0;
   out_8702098680640092912[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8702098680640092912[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8702098680640092912[132] = 1;
   out_8702098680640092912[133] = 0;
   out_8702098680640092912[134] = 0;
   out_8702098680640092912[135] = 0;
   out_8702098680640092912[136] = 0;
   out_8702098680640092912[137] = 0;
   out_8702098680640092912[138] = 0;
   out_8702098680640092912[139] = 0;
   out_8702098680640092912[140] = 0;
   out_8702098680640092912[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8702098680640092912[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8702098680640092912[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8702098680640092912[144] = 0;
   out_8702098680640092912[145] = 0;
   out_8702098680640092912[146] = 0;
   out_8702098680640092912[147] = 0;
   out_8702098680640092912[148] = 0;
   out_8702098680640092912[149] = 0;
   out_8702098680640092912[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8702098680640092912[151] = 0;
   out_8702098680640092912[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8702098680640092912[153] = 0;
   out_8702098680640092912[154] = 1;
   out_8702098680640092912[155] = 0;
   out_8702098680640092912[156] = 0;
   out_8702098680640092912[157] = 0;
   out_8702098680640092912[158] = 0;
   out_8702098680640092912[159] = 0;
   out_8702098680640092912[160] = 0;
   out_8702098680640092912[161] = 0;
   out_8702098680640092912[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8702098680640092912[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8702098680640092912[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8702098680640092912[165] = 0;
   out_8702098680640092912[166] = 0;
   out_8702098680640092912[167] = 0;
   out_8702098680640092912[168] = 0;
   out_8702098680640092912[169] = 0;
   out_8702098680640092912[170] = 0;
   out_8702098680640092912[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8702098680640092912[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8702098680640092912[173] = 0;
   out_8702098680640092912[174] = 0;
   out_8702098680640092912[175] = 0;
   out_8702098680640092912[176] = 1;
   out_8702098680640092912[177] = 0;
   out_8702098680640092912[178] = 0;
   out_8702098680640092912[179] = 0;
   out_8702098680640092912[180] = 0;
   out_8702098680640092912[181] = 0;
   out_8702098680640092912[182] = 0;
   out_8702098680640092912[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8702098680640092912[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8702098680640092912[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8702098680640092912[186] = 0;
   out_8702098680640092912[187] = 0;
   out_8702098680640092912[188] = 0;
   out_8702098680640092912[189] = 0;
   out_8702098680640092912[190] = 0;
   out_8702098680640092912[191] = 0;
   out_8702098680640092912[192] = 0;
   out_8702098680640092912[193] = 0;
   out_8702098680640092912[194] = 0;
   out_8702098680640092912[195] = 0;
   out_8702098680640092912[196] = 0;
   out_8702098680640092912[197] = 0;
   out_8702098680640092912[198] = 1;
   out_8702098680640092912[199] = 0;
   out_8702098680640092912[200] = 0;
   out_8702098680640092912[201] = 0;
   out_8702098680640092912[202] = 0;
   out_8702098680640092912[203] = 0;
   out_8702098680640092912[204] = 0;
   out_8702098680640092912[205] = 0;
   out_8702098680640092912[206] = 0;
   out_8702098680640092912[207] = 0;
   out_8702098680640092912[208] = 0;
   out_8702098680640092912[209] = 0;
   out_8702098680640092912[210] = 0;
   out_8702098680640092912[211] = 0;
   out_8702098680640092912[212] = 0;
   out_8702098680640092912[213] = 0;
   out_8702098680640092912[214] = 0;
   out_8702098680640092912[215] = 0;
   out_8702098680640092912[216] = 0;
   out_8702098680640092912[217] = 0;
   out_8702098680640092912[218] = 0;
   out_8702098680640092912[219] = 0;
   out_8702098680640092912[220] = 1;
   out_8702098680640092912[221] = 0;
   out_8702098680640092912[222] = 0;
   out_8702098680640092912[223] = 0;
   out_8702098680640092912[224] = 0;
   out_8702098680640092912[225] = 0;
   out_8702098680640092912[226] = 0;
   out_8702098680640092912[227] = 0;
   out_8702098680640092912[228] = 0;
   out_8702098680640092912[229] = 0;
   out_8702098680640092912[230] = 0;
   out_8702098680640092912[231] = 0;
   out_8702098680640092912[232] = 0;
   out_8702098680640092912[233] = 0;
   out_8702098680640092912[234] = 0;
   out_8702098680640092912[235] = 0;
   out_8702098680640092912[236] = 0;
   out_8702098680640092912[237] = 0;
   out_8702098680640092912[238] = 0;
   out_8702098680640092912[239] = 0;
   out_8702098680640092912[240] = 0;
   out_8702098680640092912[241] = 0;
   out_8702098680640092912[242] = 1;
   out_8702098680640092912[243] = 0;
   out_8702098680640092912[244] = 0;
   out_8702098680640092912[245] = 0;
   out_8702098680640092912[246] = 0;
   out_8702098680640092912[247] = 0;
   out_8702098680640092912[248] = 0;
   out_8702098680640092912[249] = 0;
   out_8702098680640092912[250] = 0;
   out_8702098680640092912[251] = 0;
   out_8702098680640092912[252] = 0;
   out_8702098680640092912[253] = 0;
   out_8702098680640092912[254] = 0;
   out_8702098680640092912[255] = 0;
   out_8702098680640092912[256] = 0;
   out_8702098680640092912[257] = 0;
   out_8702098680640092912[258] = 0;
   out_8702098680640092912[259] = 0;
   out_8702098680640092912[260] = 0;
   out_8702098680640092912[261] = 0;
   out_8702098680640092912[262] = 0;
   out_8702098680640092912[263] = 0;
   out_8702098680640092912[264] = 1;
   out_8702098680640092912[265] = 0;
   out_8702098680640092912[266] = 0;
   out_8702098680640092912[267] = 0;
   out_8702098680640092912[268] = 0;
   out_8702098680640092912[269] = 0;
   out_8702098680640092912[270] = 0;
   out_8702098680640092912[271] = 0;
   out_8702098680640092912[272] = 0;
   out_8702098680640092912[273] = 0;
   out_8702098680640092912[274] = 0;
   out_8702098680640092912[275] = 0;
   out_8702098680640092912[276] = 0;
   out_8702098680640092912[277] = 0;
   out_8702098680640092912[278] = 0;
   out_8702098680640092912[279] = 0;
   out_8702098680640092912[280] = 0;
   out_8702098680640092912[281] = 0;
   out_8702098680640092912[282] = 0;
   out_8702098680640092912[283] = 0;
   out_8702098680640092912[284] = 0;
   out_8702098680640092912[285] = 0;
   out_8702098680640092912[286] = 1;
   out_8702098680640092912[287] = 0;
   out_8702098680640092912[288] = 0;
   out_8702098680640092912[289] = 0;
   out_8702098680640092912[290] = 0;
   out_8702098680640092912[291] = 0;
   out_8702098680640092912[292] = 0;
   out_8702098680640092912[293] = 0;
   out_8702098680640092912[294] = 0;
   out_8702098680640092912[295] = 0;
   out_8702098680640092912[296] = 0;
   out_8702098680640092912[297] = 0;
   out_8702098680640092912[298] = 0;
   out_8702098680640092912[299] = 0;
   out_8702098680640092912[300] = 0;
   out_8702098680640092912[301] = 0;
   out_8702098680640092912[302] = 0;
   out_8702098680640092912[303] = 0;
   out_8702098680640092912[304] = 0;
   out_8702098680640092912[305] = 0;
   out_8702098680640092912[306] = 0;
   out_8702098680640092912[307] = 0;
   out_8702098680640092912[308] = 1;
   out_8702098680640092912[309] = 0;
   out_8702098680640092912[310] = 0;
   out_8702098680640092912[311] = 0;
   out_8702098680640092912[312] = 0;
   out_8702098680640092912[313] = 0;
   out_8702098680640092912[314] = 0;
   out_8702098680640092912[315] = 0;
   out_8702098680640092912[316] = 0;
   out_8702098680640092912[317] = 0;
   out_8702098680640092912[318] = 0;
   out_8702098680640092912[319] = 0;
   out_8702098680640092912[320] = 0;
   out_8702098680640092912[321] = 0;
   out_8702098680640092912[322] = 0;
   out_8702098680640092912[323] = 0;
   out_8702098680640092912[324] = 0;
   out_8702098680640092912[325] = 0;
   out_8702098680640092912[326] = 0;
   out_8702098680640092912[327] = 0;
   out_8702098680640092912[328] = 0;
   out_8702098680640092912[329] = 0;
   out_8702098680640092912[330] = 1;
   out_8702098680640092912[331] = 0;
   out_8702098680640092912[332] = 0;
   out_8702098680640092912[333] = 0;
   out_8702098680640092912[334] = 0;
   out_8702098680640092912[335] = 0;
   out_8702098680640092912[336] = 0;
   out_8702098680640092912[337] = 0;
   out_8702098680640092912[338] = 0;
   out_8702098680640092912[339] = 0;
   out_8702098680640092912[340] = 0;
   out_8702098680640092912[341] = 0;
   out_8702098680640092912[342] = 0;
   out_8702098680640092912[343] = 0;
   out_8702098680640092912[344] = 0;
   out_8702098680640092912[345] = 0;
   out_8702098680640092912[346] = 0;
   out_8702098680640092912[347] = 0;
   out_8702098680640092912[348] = 0;
   out_8702098680640092912[349] = 0;
   out_8702098680640092912[350] = 0;
   out_8702098680640092912[351] = 0;
   out_8702098680640092912[352] = 1;
   out_8702098680640092912[353] = 0;
   out_8702098680640092912[354] = 0;
   out_8702098680640092912[355] = 0;
   out_8702098680640092912[356] = 0;
   out_8702098680640092912[357] = 0;
   out_8702098680640092912[358] = 0;
   out_8702098680640092912[359] = 0;
   out_8702098680640092912[360] = 0;
   out_8702098680640092912[361] = 0;
   out_8702098680640092912[362] = 0;
   out_8702098680640092912[363] = 0;
   out_8702098680640092912[364] = 0;
   out_8702098680640092912[365] = 0;
   out_8702098680640092912[366] = 0;
   out_8702098680640092912[367] = 0;
   out_8702098680640092912[368] = 0;
   out_8702098680640092912[369] = 0;
   out_8702098680640092912[370] = 0;
   out_8702098680640092912[371] = 0;
   out_8702098680640092912[372] = 0;
   out_8702098680640092912[373] = 0;
   out_8702098680640092912[374] = 1;
   out_8702098680640092912[375] = 0;
   out_8702098680640092912[376] = 0;
   out_8702098680640092912[377] = 0;
   out_8702098680640092912[378] = 0;
   out_8702098680640092912[379] = 0;
   out_8702098680640092912[380] = 0;
   out_8702098680640092912[381] = 0;
   out_8702098680640092912[382] = 0;
   out_8702098680640092912[383] = 0;
   out_8702098680640092912[384] = 0;
   out_8702098680640092912[385] = 0;
   out_8702098680640092912[386] = 0;
   out_8702098680640092912[387] = 0;
   out_8702098680640092912[388] = 0;
   out_8702098680640092912[389] = 0;
   out_8702098680640092912[390] = 0;
   out_8702098680640092912[391] = 0;
   out_8702098680640092912[392] = 0;
   out_8702098680640092912[393] = 0;
   out_8702098680640092912[394] = 0;
   out_8702098680640092912[395] = 0;
   out_8702098680640092912[396] = 1;
   out_8702098680640092912[397] = 0;
   out_8702098680640092912[398] = 0;
   out_8702098680640092912[399] = 0;
   out_8702098680640092912[400] = 0;
   out_8702098680640092912[401] = 0;
   out_8702098680640092912[402] = 0;
   out_8702098680640092912[403] = 0;
   out_8702098680640092912[404] = 0;
   out_8702098680640092912[405] = 0;
   out_8702098680640092912[406] = 0;
   out_8702098680640092912[407] = 0;
   out_8702098680640092912[408] = 0;
   out_8702098680640092912[409] = 0;
   out_8702098680640092912[410] = 0;
   out_8702098680640092912[411] = 0;
   out_8702098680640092912[412] = 0;
   out_8702098680640092912[413] = 0;
   out_8702098680640092912[414] = 0;
   out_8702098680640092912[415] = 0;
   out_8702098680640092912[416] = 0;
   out_8702098680640092912[417] = 0;
   out_8702098680640092912[418] = 1;
   out_8702098680640092912[419] = 0;
   out_8702098680640092912[420] = 0;
   out_8702098680640092912[421] = 0;
   out_8702098680640092912[422] = 0;
   out_8702098680640092912[423] = 0;
   out_8702098680640092912[424] = 0;
   out_8702098680640092912[425] = 0;
   out_8702098680640092912[426] = 0;
   out_8702098680640092912[427] = 0;
   out_8702098680640092912[428] = 0;
   out_8702098680640092912[429] = 0;
   out_8702098680640092912[430] = 0;
   out_8702098680640092912[431] = 0;
   out_8702098680640092912[432] = 0;
   out_8702098680640092912[433] = 0;
   out_8702098680640092912[434] = 0;
   out_8702098680640092912[435] = 0;
   out_8702098680640092912[436] = 0;
   out_8702098680640092912[437] = 0;
   out_8702098680640092912[438] = 0;
   out_8702098680640092912[439] = 0;
   out_8702098680640092912[440] = 1;
}
void h_4(double *state, double *unused, double *out_5694133910873872321) {
   out_5694133910873872321[0] = state[10] + state[13];
   out_5694133910873872321[1] = state[11] + state[14];
   out_5694133910873872321[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_249419679862994927) {
   out_249419679862994927[0] = 0;
   out_249419679862994927[1] = 0;
   out_249419679862994927[2] = 0;
   out_249419679862994927[3] = 0;
   out_249419679862994927[4] = 0;
   out_249419679862994927[5] = 0;
   out_249419679862994927[6] = 0;
   out_249419679862994927[7] = 0;
   out_249419679862994927[8] = 0;
   out_249419679862994927[9] = 0;
   out_249419679862994927[10] = 1;
   out_249419679862994927[11] = 0;
   out_249419679862994927[12] = 0;
   out_249419679862994927[13] = 1;
   out_249419679862994927[14] = 0;
   out_249419679862994927[15] = 0;
   out_249419679862994927[16] = 0;
   out_249419679862994927[17] = 0;
   out_249419679862994927[18] = 0;
   out_249419679862994927[19] = 0;
   out_249419679862994927[20] = 0;
   out_249419679862994927[21] = 0;
   out_249419679862994927[22] = 0;
   out_249419679862994927[23] = 0;
   out_249419679862994927[24] = 0;
   out_249419679862994927[25] = 0;
   out_249419679862994927[26] = 0;
   out_249419679862994927[27] = 0;
   out_249419679862994927[28] = 0;
   out_249419679862994927[29] = 0;
   out_249419679862994927[30] = 0;
   out_249419679862994927[31] = 0;
   out_249419679862994927[32] = 0;
   out_249419679862994927[33] = 1;
   out_249419679862994927[34] = 0;
   out_249419679862994927[35] = 0;
   out_249419679862994927[36] = 1;
   out_249419679862994927[37] = 0;
   out_249419679862994927[38] = 0;
   out_249419679862994927[39] = 0;
   out_249419679862994927[40] = 0;
   out_249419679862994927[41] = 0;
   out_249419679862994927[42] = 0;
   out_249419679862994927[43] = 0;
   out_249419679862994927[44] = 0;
   out_249419679862994927[45] = 0;
   out_249419679862994927[46] = 0;
   out_249419679862994927[47] = 0;
   out_249419679862994927[48] = 0;
   out_249419679862994927[49] = 0;
   out_249419679862994927[50] = 0;
   out_249419679862994927[51] = 0;
   out_249419679862994927[52] = 0;
   out_249419679862994927[53] = 0;
   out_249419679862994927[54] = 0;
   out_249419679862994927[55] = 0;
   out_249419679862994927[56] = 1;
   out_249419679862994927[57] = 0;
   out_249419679862994927[58] = 0;
   out_249419679862994927[59] = 1;
   out_249419679862994927[60] = 0;
   out_249419679862994927[61] = 0;
   out_249419679862994927[62] = 0;
   out_249419679862994927[63] = 0;
   out_249419679862994927[64] = 0;
   out_249419679862994927[65] = 0;
}
void h_9(double *state, double *unused, double *out_8951512206140578977) {
   out_8951512206140578977[0] = state[10];
   out_8951512206140578977[1] = state[11];
   out_8951512206140578977[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7536638615127442397) {
   out_7536638615127442397[0] = 0;
   out_7536638615127442397[1] = 0;
   out_7536638615127442397[2] = 0;
   out_7536638615127442397[3] = 0;
   out_7536638615127442397[4] = 0;
   out_7536638615127442397[5] = 0;
   out_7536638615127442397[6] = 0;
   out_7536638615127442397[7] = 0;
   out_7536638615127442397[8] = 0;
   out_7536638615127442397[9] = 0;
   out_7536638615127442397[10] = 1;
   out_7536638615127442397[11] = 0;
   out_7536638615127442397[12] = 0;
   out_7536638615127442397[13] = 0;
   out_7536638615127442397[14] = 0;
   out_7536638615127442397[15] = 0;
   out_7536638615127442397[16] = 0;
   out_7536638615127442397[17] = 0;
   out_7536638615127442397[18] = 0;
   out_7536638615127442397[19] = 0;
   out_7536638615127442397[20] = 0;
   out_7536638615127442397[21] = 0;
   out_7536638615127442397[22] = 0;
   out_7536638615127442397[23] = 0;
   out_7536638615127442397[24] = 0;
   out_7536638615127442397[25] = 0;
   out_7536638615127442397[26] = 0;
   out_7536638615127442397[27] = 0;
   out_7536638615127442397[28] = 0;
   out_7536638615127442397[29] = 0;
   out_7536638615127442397[30] = 0;
   out_7536638615127442397[31] = 0;
   out_7536638615127442397[32] = 0;
   out_7536638615127442397[33] = 1;
   out_7536638615127442397[34] = 0;
   out_7536638615127442397[35] = 0;
   out_7536638615127442397[36] = 0;
   out_7536638615127442397[37] = 0;
   out_7536638615127442397[38] = 0;
   out_7536638615127442397[39] = 0;
   out_7536638615127442397[40] = 0;
   out_7536638615127442397[41] = 0;
   out_7536638615127442397[42] = 0;
   out_7536638615127442397[43] = 0;
   out_7536638615127442397[44] = 0;
   out_7536638615127442397[45] = 0;
   out_7536638615127442397[46] = 0;
   out_7536638615127442397[47] = 0;
   out_7536638615127442397[48] = 0;
   out_7536638615127442397[49] = 0;
   out_7536638615127442397[50] = 0;
   out_7536638615127442397[51] = 0;
   out_7536638615127442397[52] = 0;
   out_7536638615127442397[53] = 0;
   out_7536638615127442397[54] = 0;
   out_7536638615127442397[55] = 0;
   out_7536638615127442397[56] = 1;
   out_7536638615127442397[57] = 0;
   out_7536638615127442397[58] = 0;
   out_7536638615127442397[59] = 0;
   out_7536638615127442397[60] = 0;
   out_7536638615127442397[61] = 0;
   out_7536638615127442397[62] = 0;
   out_7536638615127442397[63] = 0;
   out_7536638615127442397[64] = 0;
   out_7536638615127442397[65] = 0;
}
void h_10(double *state, double *unused, double *out_3736522873776615970) {
   out_3736522873776615970[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3736522873776615970[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3736522873776615970[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8225287402177473278) {
   out_8225287402177473278[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8225287402177473278[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8225287402177473278[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8225287402177473278[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8225287402177473278[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8225287402177473278[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8225287402177473278[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8225287402177473278[7] = 0;
   out_8225287402177473278[8] = 0;
   out_8225287402177473278[9] = 0;
   out_8225287402177473278[10] = 0;
   out_8225287402177473278[11] = 0;
   out_8225287402177473278[12] = 0;
   out_8225287402177473278[13] = 0;
   out_8225287402177473278[14] = 0;
   out_8225287402177473278[15] = 0;
   out_8225287402177473278[16] = 1;
   out_8225287402177473278[17] = 0;
   out_8225287402177473278[18] = 0;
   out_8225287402177473278[19] = 1;
   out_8225287402177473278[20] = 0;
   out_8225287402177473278[21] = 0;
   out_8225287402177473278[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8225287402177473278[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8225287402177473278[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8225287402177473278[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8225287402177473278[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8225287402177473278[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8225287402177473278[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8225287402177473278[29] = 0;
   out_8225287402177473278[30] = 0;
   out_8225287402177473278[31] = 0;
   out_8225287402177473278[32] = 0;
   out_8225287402177473278[33] = 0;
   out_8225287402177473278[34] = 0;
   out_8225287402177473278[35] = 0;
   out_8225287402177473278[36] = 0;
   out_8225287402177473278[37] = 0;
   out_8225287402177473278[38] = 0;
   out_8225287402177473278[39] = 1;
   out_8225287402177473278[40] = 0;
   out_8225287402177473278[41] = 0;
   out_8225287402177473278[42] = 1;
   out_8225287402177473278[43] = 0;
   out_8225287402177473278[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8225287402177473278[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8225287402177473278[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8225287402177473278[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8225287402177473278[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8225287402177473278[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8225287402177473278[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8225287402177473278[51] = 0;
   out_8225287402177473278[52] = 0;
   out_8225287402177473278[53] = 0;
   out_8225287402177473278[54] = 0;
   out_8225287402177473278[55] = 0;
   out_8225287402177473278[56] = 0;
   out_8225287402177473278[57] = 0;
   out_8225287402177473278[58] = 0;
   out_8225287402177473278[59] = 0;
   out_8225287402177473278[60] = 0;
   out_8225287402177473278[61] = 0;
   out_8225287402177473278[62] = 1;
   out_8225287402177473278[63] = 0;
   out_8225287402177473278[64] = 0;
   out_8225287402177473278[65] = 1;
}
void h_12(double *state, double *unused, double *out_7383623745651831242) {
   out_7383623745651831242[0] = state[0];
   out_7383623745651831242[1] = state[1];
   out_7383623745651831242[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6131838697179738069) {
   out_6131838697179738069[0] = 1;
   out_6131838697179738069[1] = 0;
   out_6131838697179738069[2] = 0;
   out_6131838697179738069[3] = 0;
   out_6131838697179738069[4] = 0;
   out_6131838697179738069[5] = 0;
   out_6131838697179738069[6] = 0;
   out_6131838697179738069[7] = 0;
   out_6131838697179738069[8] = 0;
   out_6131838697179738069[9] = 0;
   out_6131838697179738069[10] = 0;
   out_6131838697179738069[11] = 0;
   out_6131838697179738069[12] = 0;
   out_6131838697179738069[13] = 0;
   out_6131838697179738069[14] = 0;
   out_6131838697179738069[15] = 0;
   out_6131838697179738069[16] = 0;
   out_6131838697179738069[17] = 0;
   out_6131838697179738069[18] = 0;
   out_6131838697179738069[19] = 0;
   out_6131838697179738069[20] = 0;
   out_6131838697179738069[21] = 0;
   out_6131838697179738069[22] = 0;
   out_6131838697179738069[23] = 1;
   out_6131838697179738069[24] = 0;
   out_6131838697179738069[25] = 0;
   out_6131838697179738069[26] = 0;
   out_6131838697179738069[27] = 0;
   out_6131838697179738069[28] = 0;
   out_6131838697179738069[29] = 0;
   out_6131838697179738069[30] = 0;
   out_6131838697179738069[31] = 0;
   out_6131838697179738069[32] = 0;
   out_6131838697179738069[33] = 0;
   out_6131838697179738069[34] = 0;
   out_6131838697179738069[35] = 0;
   out_6131838697179738069[36] = 0;
   out_6131838697179738069[37] = 0;
   out_6131838697179738069[38] = 0;
   out_6131838697179738069[39] = 0;
   out_6131838697179738069[40] = 0;
   out_6131838697179738069[41] = 0;
   out_6131838697179738069[42] = 0;
   out_6131838697179738069[43] = 0;
   out_6131838697179738069[44] = 0;
   out_6131838697179738069[45] = 0;
   out_6131838697179738069[46] = 1;
   out_6131838697179738069[47] = 0;
   out_6131838697179738069[48] = 0;
   out_6131838697179738069[49] = 0;
   out_6131838697179738069[50] = 0;
   out_6131838697179738069[51] = 0;
   out_6131838697179738069[52] = 0;
   out_6131838697179738069[53] = 0;
   out_6131838697179738069[54] = 0;
   out_6131838697179738069[55] = 0;
   out_6131838697179738069[56] = 0;
   out_6131838697179738069[57] = 0;
   out_6131838697179738069[58] = 0;
   out_6131838697179738069[59] = 0;
   out_6131838697179738069[60] = 0;
   out_6131838697179738069[61] = 0;
   out_6131838697179738069[62] = 0;
   out_6131838697179738069[63] = 0;
   out_6131838697179738069[64] = 0;
   out_6131838697179738069[65] = 0;
}
void h_31(double *state, double *unused, double *out_4598324046571392693) {
   out_4598324046571392693[0] = state[7];
   out_4598324046571392693[1] = state[8];
   out_4598324046571392693[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7784633047839092488) {
   out_7784633047839092488[0] = 0;
   out_7784633047839092488[1] = 0;
   out_7784633047839092488[2] = 0;
   out_7784633047839092488[3] = 0;
   out_7784633047839092488[4] = 0;
   out_7784633047839092488[5] = 0;
   out_7784633047839092488[6] = 0;
   out_7784633047839092488[7] = 1;
   out_7784633047839092488[8] = 0;
   out_7784633047839092488[9] = 0;
   out_7784633047839092488[10] = 0;
   out_7784633047839092488[11] = 0;
   out_7784633047839092488[12] = 0;
   out_7784633047839092488[13] = 0;
   out_7784633047839092488[14] = 0;
   out_7784633047839092488[15] = 0;
   out_7784633047839092488[16] = 0;
   out_7784633047839092488[17] = 0;
   out_7784633047839092488[18] = 0;
   out_7784633047839092488[19] = 0;
   out_7784633047839092488[20] = 0;
   out_7784633047839092488[21] = 0;
   out_7784633047839092488[22] = 0;
   out_7784633047839092488[23] = 0;
   out_7784633047839092488[24] = 0;
   out_7784633047839092488[25] = 0;
   out_7784633047839092488[26] = 0;
   out_7784633047839092488[27] = 0;
   out_7784633047839092488[28] = 0;
   out_7784633047839092488[29] = 0;
   out_7784633047839092488[30] = 1;
   out_7784633047839092488[31] = 0;
   out_7784633047839092488[32] = 0;
   out_7784633047839092488[33] = 0;
   out_7784633047839092488[34] = 0;
   out_7784633047839092488[35] = 0;
   out_7784633047839092488[36] = 0;
   out_7784633047839092488[37] = 0;
   out_7784633047839092488[38] = 0;
   out_7784633047839092488[39] = 0;
   out_7784633047839092488[40] = 0;
   out_7784633047839092488[41] = 0;
   out_7784633047839092488[42] = 0;
   out_7784633047839092488[43] = 0;
   out_7784633047839092488[44] = 0;
   out_7784633047839092488[45] = 0;
   out_7784633047839092488[46] = 0;
   out_7784633047839092488[47] = 0;
   out_7784633047839092488[48] = 0;
   out_7784633047839092488[49] = 0;
   out_7784633047839092488[50] = 0;
   out_7784633047839092488[51] = 0;
   out_7784633047839092488[52] = 0;
   out_7784633047839092488[53] = 1;
   out_7784633047839092488[54] = 0;
   out_7784633047839092488[55] = 0;
   out_7784633047839092488[56] = 0;
   out_7784633047839092488[57] = 0;
   out_7784633047839092488[58] = 0;
   out_7784633047839092488[59] = 0;
   out_7784633047839092488[60] = 0;
   out_7784633047839092488[61] = 0;
   out_7784633047839092488[62] = 0;
   out_7784633047839092488[63] = 0;
   out_7784633047839092488[64] = 0;
   out_7784633047839092488[65] = 0;
}
void h_32(double *state, double *unused, double *out_9083885247086774980) {
   out_9083885247086774980[0] = state[3];
   out_9083885247086774980[1] = state[4];
   out_9083885247086774980[2] = state[5];
   out_9083885247086774980[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7775629603022004632) {
   out_7775629603022004632[0] = 0;
   out_7775629603022004632[1] = 0;
   out_7775629603022004632[2] = 0;
   out_7775629603022004632[3] = 1;
   out_7775629603022004632[4] = 0;
   out_7775629603022004632[5] = 0;
   out_7775629603022004632[6] = 0;
   out_7775629603022004632[7] = 0;
   out_7775629603022004632[8] = 0;
   out_7775629603022004632[9] = 0;
   out_7775629603022004632[10] = 0;
   out_7775629603022004632[11] = 0;
   out_7775629603022004632[12] = 0;
   out_7775629603022004632[13] = 0;
   out_7775629603022004632[14] = 0;
   out_7775629603022004632[15] = 0;
   out_7775629603022004632[16] = 0;
   out_7775629603022004632[17] = 0;
   out_7775629603022004632[18] = 0;
   out_7775629603022004632[19] = 0;
   out_7775629603022004632[20] = 0;
   out_7775629603022004632[21] = 0;
   out_7775629603022004632[22] = 0;
   out_7775629603022004632[23] = 0;
   out_7775629603022004632[24] = 0;
   out_7775629603022004632[25] = 0;
   out_7775629603022004632[26] = 1;
   out_7775629603022004632[27] = 0;
   out_7775629603022004632[28] = 0;
   out_7775629603022004632[29] = 0;
   out_7775629603022004632[30] = 0;
   out_7775629603022004632[31] = 0;
   out_7775629603022004632[32] = 0;
   out_7775629603022004632[33] = 0;
   out_7775629603022004632[34] = 0;
   out_7775629603022004632[35] = 0;
   out_7775629603022004632[36] = 0;
   out_7775629603022004632[37] = 0;
   out_7775629603022004632[38] = 0;
   out_7775629603022004632[39] = 0;
   out_7775629603022004632[40] = 0;
   out_7775629603022004632[41] = 0;
   out_7775629603022004632[42] = 0;
   out_7775629603022004632[43] = 0;
   out_7775629603022004632[44] = 0;
   out_7775629603022004632[45] = 0;
   out_7775629603022004632[46] = 0;
   out_7775629603022004632[47] = 0;
   out_7775629603022004632[48] = 0;
   out_7775629603022004632[49] = 1;
   out_7775629603022004632[50] = 0;
   out_7775629603022004632[51] = 0;
   out_7775629603022004632[52] = 0;
   out_7775629603022004632[53] = 0;
   out_7775629603022004632[54] = 0;
   out_7775629603022004632[55] = 0;
   out_7775629603022004632[56] = 0;
   out_7775629603022004632[57] = 0;
   out_7775629603022004632[58] = 0;
   out_7775629603022004632[59] = 0;
   out_7775629603022004632[60] = 0;
   out_7775629603022004632[61] = 0;
   out_7775629603022004632[62] = 0;
   out_7775629603022004632[63] = 0;
   out_7775629603022004632[64] = 0;
   out_7775629603022004632[65] = 0;
   out_7775629603022004632[66] = 0;
   out_7775629603022004632[67] = 0;
   out_7775629603022004632[68] = 0;
   out_7775629603022004632[69] = 0;
   out_7775629603022004632[70] = 0;
   out_7775629603022004632[71] = 0;
   out_7775629603022004632[72] = 1;
   out_7775629603022004632[73] = 0;
   out_7775629603022004632[74] = 0;
   out_7775629603022004632[75] = 0;
   out_7775629603022004632[76] = 0;
   out_7775629603022004632[77] = 0;
   out_7775629603022004632[78] = 0;
   out_7775629603022004632[79] = 0;
   out_7775629603022004632[80] = 0;
   out_7775629603022004632[81] = 0;
   out_7775629603022004632[82] = 0;
   out_7775629603022004632[83] = 0;
   out_7775629603022004632[84] = 0;
   out_7775629603022004632[85] = 0;
   out_7775629603022004632[86] = 0;
   out_7775629603022004632[87] = 0;
}
void h_13(double *state, double *unused, double *out_1269344890707383669) {
   out_1269344890707383669[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1269344890707383669[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1269344890707383669[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6958956562019023321) {
   out_6958956562019023321[0] = 0;
   out_6958956562019023321[1] = 0;
   out_6958956562019023321[2] = 0;
   out_6958956562019023321[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6958956562019023321[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6958956562019023321[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6958956562019023321[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6958956562019023321[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6958956562019023321[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6958956562019023321[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6958956562019023321[10] = 0;
   out_6958956562019023321[11] = 0;
   out_6958956562019023321[12] = 0;
   out_6958956562019023321[13] = 0;
   out_6958956562019023321[14] = 0;
   out_6958956562019023321[15] = 0;
   out_6958956562019023321[16] = 0;
   out_6958956562019023321[17] = 0;
   out_6958956562019023321[18] = 0;
   out_6958956562019023321[19] = 0;
   out_6958956562019023321[20] = 0;
   out_6958956562019023321[21] = 0;
   out_6958956562019023321[22] = 0;
   out_6958956562019023321[23] = 0;
   out_6958956562019023321[24] = 0;
   out_6958956562019023321[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6958956562019023321[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6958956562019023321[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6958956562019023321[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6958956562019023321[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6958956562019023321[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6958956562019023321[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6958956562019023321[32] = 0;
   out_6958956562019023321[33] = 0;
   out_6958956562019023321[34] = 0;
   out_6958956562019023321[35] = 0;
   out_6958956562019023321[36] = 0;
   out_6958956562019023321[37] = 0;
   out_6958956562019023321[38] = 0;
   out_6958956562019023321[39] = 0;
   out_6958956562019023321[40] = 0;
   out_6958956562019023321[41] = 0;
   out_6958956562019023321[42] = 0;
   out_6958956562019023321[43] = 0;
   out_6958956562019023321[44] = 0;
   out_6958956562019023321[45] = 0;
   out_6958956562019023321[46] = 0;
   out_6958956562019023321[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6958956562019023321[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6958956562019023321[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6958956562019023321[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6958956562019023321[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6958956562019023321[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6958956562019023321[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6958956562019023321[54] = 0;
   out_6958956562019023321[55] = 0;
   out_6958956562019023321[56] = 0;
   out_6958956562019023321[57] = 0;
   out_6958956562019023321[58] = 0;
   out_6958956562019023321[59] = 0;
   out_6958956562019023321[60] = 0;
   out_6958956562019023321[61] = 0;
   out_6958956562019023321[62] = 0;
   out_6958956562019023321[63] = 0;
   out_6958956562019023321[64] = 0;
   out_6958956562019023321[65] = 0;
}
void h_14(double *state, double *unused, double *out_8951512206140578977) {
   out_8951512206140578977[0] = state[10];
   out_8951512206140578977[1] = state[11];
   out_8951512206140578977[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7536638615127442397) {
   out_7536638615127442397[0] = 0;
   out_7536638615127442397[1] = 0;
   out_7536638615127442397[2] = 0;
   out_7536638615127442397[3] = 0;
   out_7536638615127442397[4] = 0;
   out_7536638615127442397[5] = 0;
   out_7536638615127442397[6] = 0;
   out_7536638615127442397[7] = 0;
   out_7536638615127442397[8] = 0;
   out_7536638615127442397[9] = 0;
   out_7536638615127442397[10] = 1;
   out_7536638615127442397[11] = 0;
   out_7536638615127442397[12] = 0;
   out_7536638615127442397[13] = 0;
   out_7536638615127442397[14] = 0;
   out_7536638615127442397[15] = 0;
   out_7536638615127442397[16] = 0;
   out_7536638615127442397[17] = 0;
   out_7536638615127442397[18] = 0;
   out_7536638615127442397[19] = 0;
   out_7536638615127442397[20] = 0;
   out_7536638615127442397[21] = 0;
   out_7536638615127442397[22] = 0;
   out_7536638615127442397[23] = 0;
   out_7536638615127442397[24] = 0;
   out_7536638615127442397[25] = 0;
   out_7536638615127442397[26] = 0;
   out_7536638615127442397[27] = 0;
   out_7536638615127442397[28] = 0;
   out_7536638615127442397[29] = 0;
   out_7536638615127442397[30] = 0;
   out_7536638615127442397[31] = 0;
   out_7536638615127442397[32] = 0;
   out_7536638615127442397[33] = 1;
   out_7536638615127442397[34] = 0;
   out_7536638615127442397[35] = 0;
   out_7536638615127442397[36] = 0;
   out_7536638615127442397[37] = 0;
   out_7536638615127442397[38] = 0;
   out_7536638615127442397[39] = 0;
   out_7536638615127442397[40] = 0;
   out_7536638615127442397[41] = 0;
   out_7536638615127442397[42] = 0;
   out_7536638615127442397[43] = 0;
   out_7536638615127442397[44] = 0;
   out_7536638615127442397[45] = 0;
   out_7536638615127442397[46] = 0;
   out_7536638615127442397[47] = 0;
   out_7536638615127442397[48] = 0;
   out_7536638615127442397[49] = 0;
   out_7536638615127442397[50] = 0;
   out_7536638615127442397[51] = 0;
   out_7536638615127442397[52] = 0;
   out_7536638615127442397[53] = 0;
   out_7536638615127442397[54] = 0;
   out_7536638615127442397[55] = 0;
   out_7536638615127442397[56] = 1;
   out_7536638615127442397[57] = 0;
   out_7536638615127442397[58] = 0;
   out_7536638615127442397[59] = 0;
   out_7536638615127442397[60] = 0;
   out_7536638615127442397[61] = 0;
   out_7536638615127442397[62] = 0;
   out_7536638615127442397[63] = 0;
   out_7536638615127442397[64] = 0;
   out_7536638615127442397[65] = 0;
}
void h_33(double *state, double *unused, double *out_7446583057376225623) {
   out_7446583057376225623[0] = state[16];
   out_7446583057376225623[1] = state[17];
   out_7446583057376225623[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4634076043200234884) {
   out_4634076043200234884[0] = 0;
   out_4634076043200234884[1] = 0;
   out_4634076043200234884[2] = 0;
   out_4634076043200234884[3] = 0;
   out_4634076043200234884[4] = 0;
   out_4634076043200234884[5] = 0;
   out_4634076043200234884[6] = 0;
   out_4634076043200234884[7] = 0;
   out_4634076043200234884[8] = 0;
   out_4634076043200234884[9] = 0;
   out_4634076043200234884[10] = 0;
   out_4634076043200234884[11] = 0;
   out_4634076043200234884[12] = 0;
   out_4634076043200234884[13] = 0;
   out_4634076043200234884[14] = 0;
   out_4634076043200234884[15] = 0;
   out_4634076043200234884[16] = 1;
   out_4634076043200234884[17] = 0;
   out_4634076043200234884[18] = 0;
   out_4634076043200234884[19] = 0;
   out_4634076043200234884[20] = 0;
   out_4634076043200234884[21] = 0;
   out_4634076043200234884[22] = 0;
   out_4634076043200234884[23] = 0;
   out_4634076043200234884[24] = 0;
   out_4634076043200234884[25] = 0;
   out_4634076043200234884[26] = 0;
   out_4634076043200234884[27] = 0;
   out_4634076043200234884[28] = 0;
   out_4634076043200234884[29] = 0;
   out_4634076043200234884[30] = 0;
   out_4634076043200234884[31] = 0;
   out_4634076043200234884[32] = 0;
   out_4634076043200234884[33] = 0;
   out_4634076043200234884[34] = 0;
   out_4634076043200234884[35] = 0;
   out_4634076043200234884[36] = 0;
   out_4634076043200234884[37] = 0;
   out_4634076043200234884[38] = 0;
   out_4634076043200234884[39] = 1;
   out_4634076043200234884[40] = 0;
   out_4634076043200234884[41] = 0;
   out_4634076043200234884[42] = 0;
   out_4634076043200234884[43] = 0;
   out_4634076043200234884[44] = 0;
   out_4634076043200234884[45] = 0;
   out_4634076043200234884[46] = 0;
   out_4634076043200234884[47] = 0;
   out_4634076043200234884[48] = 0;
   out_4634076043200234884[49] = 0;
   out_4634076043200234884[50] = 0;
   out_4634076043200234884[51] = 0;
   out_4634076043200234884[52] = 0;
   out_4634076043200234884[53] = 0;
   out_4634076043200234884[54] = 0;
   out_4634076043200234884[55] = 0;
   out_4634076043200234884[56] = 0;
   out_4634076043200234884[57] = 0;
   out_4634076043200234884[58] = 0;
   out_4634076043200234884[59] = 0;
   out_4634076043200234884[60] = 0;
   out_4634076043200234884[61] = 0;
   out_4634076043200234884[62] = 1;
   out_4634076043200234884[63] = 0;
   out_4634076043200234884[64] = 0;
   out_4634076043200234884[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2853646381397912552) {
  H(in_vec, out_2853646381397912552);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5549535972816791141) {
  err_fun(nom_x, delta_x, out_5549535972816791141);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3634911457740076995) {
  inv_err_fun(nom_x, true_x, out_3634911457740076995);
}
void live_H_mod_fun(double *state, double *out_8058031850184286508) {
  H_mod_fun(state, out_8058031850184286508);
}
void live_f_fun(double *state, double dt, double *out_3451938404271731457) {
  f_fun(state,  dt, out_3451938404271731457);
}
void live_F_fun(double *state, double dt, double *out_8702098680640092912) {
  F_fun(state,  dt, out_8702098680640092912);
}
void live_h_4(double *state, double *unused, double *out_5694133910873872321) {
  h_4(state, unused, out_5694133910873872321);
}
void live_H_4(double *state, double *unused, double *out_249419679862994927) {
  H_4(state, unused, out_249419679862994927);
}
void live_h_9(double *state, double *unused, double *out_8951512206140578977) {
  h_9(state, unused, out_8951512206140578977);
}
void live_H_9(double *state, double *unused, double *out_7536638615127442397) {
  H_9(state, unused, out_7536638615127442397);
}
void live_h_10(double *state, double *unused, double *out_3736522873776615970) {
  h_10(state, unused, out_3736522873776615970);
}
void live_H_10(double *state, double *unused, double *out_8225287402177473278) {
  H_10(state, unused, out_8225287402177473278);
}
void live_h_12(double *state, double *unused, double *out_7383623745651831242) {
  h_12(state, unused, out_7383623745651831242);
}
void live_H_12(double *state, double *unused, double *out_6131838697179738069) {
  H_12(state, unused, out_6131838697179738069);
}
void live_h_31(double *state, double *unused, double *out_4598324046571392693) {
  h_31(state, unused, out_4598324046571392693);
}
void live_H_31(double *state, double *unused, double *out_7784633047839092488) {
  H_31(state, unused, out_7784633047839092488);
}
void live_h_32(double *state, double *unused, double *out_9083885247086774980) {
  h_32(state, unused, out_9083885247086774980);
}
void live_H_32(double *state, double *unused, double *out_7775629603022004632) {
  H_32(state, unused, out_7775629603022004632);
}
void live_h_13(double *state, double *unused, double *out_1269344890707383669) {
  h_13(state, unused, out_1269344890707383669);
}
void live_H_13(double *state, double *unused, double *out_6958956562019023321) {
  H_13(state, unused, out_6958956562019023321);
}
void live_h_14(double *state, double *unused, double *out_8951512206140578977) {
  h_14(state, unused, out_8951512206140578977);
}
void live_H_14(double *state, double *unused, double *out_7536638615127442397) {
  H_14(state, unused, out_7536638615127442397);
}
void live_h_33(double *state, double *unused, double *out_7446583057376225623) {
  h_33(state, unused, out_7446583057376225623);
}
void live_H_33(double *state, double *unused, double *out_4634076043200234884) {
  H_33(state, unused, out_4634076043200234884);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
