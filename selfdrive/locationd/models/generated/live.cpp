#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6020406760525914227) {
   out_6020406760525914227[0] = 0;
   out_6020406760525914227[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6020406760525914227[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6020406760525914227[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6020406760525914227[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6020406760525914227[5] = -sin(in_vec[1]);
   out_6020406760525914227[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6020406760525914227[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6020406760525914227[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6020406760525914227[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6020406760525914227[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6020406760525914227[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6020406760525914227[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6020406760525914227[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6020406760525914227[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6020406760525914227[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6020406760525914227[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6020406760525914227[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9138946898377382373) {
   out_9138946898377382373[0] = delta_x[0] + nom_x[0];
   out_9138946898377382373[1] = delta_x[1] + nom_x[1];
   out_9138946898377382373[2] = delta_x[2] + nom_x[2];
   out_9138946898377382373[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9138946898377382373[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9138946898377382373[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9138946898377382373[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9138946898377382373[7] = delta_x[6] + nom_x[7];
   out_9138946898377382373[8] = delta_x[7] + nom_x[8];
   out_9138946898377382373[9] = delta_x[8] + nom_x[9];
   out_9138946898377382373[10] = delta_x[9] + nom_x[10];
   out_9138946898377382373[11] = delta_x[10] + nom_x[11];
   out_9138946898377382373[12] = delta_x[11] + nom_x[12];
   out_9138946898377382373[13] = delta_x[12] + nom_x[13];
   out_9138946898377382373[14] = delta_x[13] + nom_x[14];
   out_9138946898377382373[15] = delta_x[14] + nom_x[15];
   out_9138946898377382373[16] = delta_x[15] + nom_x[16];
   out_9138946898377382373[17] = delta_x[16] + nom_x[17];
   out_9138946898377382373[18] = delta_x[17] + nom_x[18];
   out_9138946898377382373[19] = delta_x[18] + nom_x[19];
   out_9138946898377382373[20] = delta_x[19] + nom_x[20];
   out_9138946898377382373[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1766051097771838348) {
   out_1766051097771838348[0] = -nom_x[0] + true_x[0];
   out_1766051097771838348[1] = -nom_x[1] + true_x[1];
   out_1766051097771838348[2] = -nom_x[2] + true_x[2];
   out_1766051097771838348[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1766051097771838348[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1766051097771838348[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1766051097771838348[6] = -nom_x[7] + true_x[7];
   out_1766051097771838348[7] = -nom_x[8] + true_x[8];
   out_1766051097771838348[8] = -nom_x[9] + true_x[9];
   out_1766051097771838348[9] = -nom_x[10] + true_x[10];
   out_1766051097771838348[10] = -nom_x[11] + true_x[11];
   out_1766051097771838348[11] = -nom_x[12] + true_x[12];
   out_1766051097771838348[12] = -nom_x[13] + true_x[13];
   out_1766051097771838348[13] = -nom_x[14] + true_x[14];
   out_1766051097771838348[14] = -nom_x[15] + true_x[15];
   out_1766051097771838348[15] = -nom_x[16] + true_x[16];
   out_1766051097771838348[16] = -nom_x[17] + true_x[17];
   out_1766051097771838348[17] = -nom_x[18] + true_x[18];
   out_1766051097771838348[18] = -nom_x[19] + true_x[19];
   out_1766051097771838348[19] = -nom_x[20] + true_x[20];
   out_1766051097771838348[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7757453199381973644) {
   out_7757453199381973644[0] = 1.0;
   out_7757453199381973644[1] = 0;
   out_7757453199381973644[2] = 0;
   out_7757453199381973644[3] = 0;
   out_7757453199381973644[4] = 0;
   out_7757453199381973644[5] = 0;
   out_7757453199381973644[6] = 0;
   out_7757453199381973644[7] = 0;
   out_7757453199381973644[8] = 0;
   out_7757453199381973644[9] = 0;
   out_7757453199381973644[10] = 0;
   out_7757453199381973644[11] = 0;
   out_7757453199381973644[12] = 0;
   out_7757453199381973644[13] = 0;
   out_7757453199381973644[14] = 0;
   out_7757453199381973644[15] = 0;
   out_7757453199381973644[16] = 0;
   out_7757453199381973644[17] = 0;
   out_7757453199381973644[18] = 0;
   out_7757453199381973644[19] = 0;
   out_7757453199381973644[20] = 0;
   out_7757453199381973644[21] = 0;
   out_7757453199381973644[22] = 1.0;
   out_7757453199381973644[23] = 0;
   out_7757453199381973644[24] = 0;
   out_7757453199381973644[25] = 0;
   out_7757453199381973644[26] = 0;
   out_7757453199381973644[27] = 0;
   out_7757453199381973644[28] = 0;
   out_7757453199381973644[29] = 0;
   out_7757453199381973644[30] = 0;
   out_7757453199381973644[31] = 0;
   out_7757453199381973644[32] = 0;
   out_7757453199381973644[33] = 0;
   out_7757453199381973644[34] = 0;
   out_7757453199381973644[35] = 0;
   out_7757453199381973644[36] = 0;
   out_7757453199381973644[37] = 0;
   out_7757453199381973644[38] = 0;
   out_7757453199381973644[39] = 0;
   out_7757453199381973644[40] = 0;
   out_7757453199381973644[41] = 0;
   out_7757453199381973644[42] = 0;
   out_7757453199381973644[43] = 0;
   out_7757453199381973644[44] = 1.0;
   out_7757453199381973644[45] = 0;
   out_7757453199381973644[46] = 0;
   out_7757453199381973644[47] = 0;
   out_7757453199381973644[48] = 0;
   out_7757453199381973644[49] = 0;
   out_7757453199381973644[50] = 0;
   out_7757453199381973644[51] = 0;
   out_7757453199381973644[52] = 0;
   out_7757453199381973644[53] = 0;
   out_7757453199381973644[54] = 0;
   out_7757453199381973644[55] = 0;
   out_7757453199381973644[56] = 0;
   out_7757453199381973644[57] = 0;
   out_7757453199381973644[58] = 0;
   out_7757453199381973644[59] = 0;
   out_7757453199381973644[60] = 0;
   out_7757453199381973644[61] = 0;
   out_7757453199381973644[62] = 0;
   out_7757453199381973644[63] = 0;
   out_7757453199381973644[64] = 0;
   out_7757453199381973644[65] = 0;
   out_7757453199381973644[66] = -0.5*state[4];
   out_7757453199381973644[67] = -0.5*state[5];
   out_7757453199381973644[68] = -0.5*state[6];
   out_7757453199381973644[69] = 0;
   out_7757453199381973644[70] = 0;
   out_7757453199381973644[71] = 0;
   out_7757453199381973644[72] = 0;
   out_7757453199381973644[73] = 0;
   out_7757453199381973644[74] = 0;
   out_7757453199381973644[75] = 0;
   out_7757453199381973644[76] = 0;
   out_7757453199381973644[77] = 0;
   out_7757453199381973644[78] = 0;
   out_7757453199381973644[79] = 0;
   out_7757453199381973644[80] = 0;
   out_7757453199381973644[81] = 0;
   out_7757453199381973644[82] = 0;
   out_7757453199381973644[83] = 0;
   out_7757453199381973644[84] = 0;
   out_7757453199381973644[85] = 0;
   out_7757453199381973644[86] = 0;
   out_7757453199381973644[87] = 0.5*state[3];
   out_7757453199381973644[88] = 0.5*state[6];
   out_7757453199381973644[89] = -0.5*state[5];
   out_7757453199381973644[90] = 0;
   out_7757453199381973644[91] = 0;
   out_7757453199381973644[92] = 0;
   out_7757453199381973644[93] = 0;
   out_7757453199381973644[94] = 0;
   out_7757453199381973644[95] = 0;
   out_7757453199381973644[96] = 0;
   out_7757453199381973644[97] = 0;
   out_7757453199381973644[98] = 0;
   out_7757453199381973644[99] = 0;
   out_7757453199381973644[100] = 0;
   out_7757453199381973644[101] = 0;
   out_7757453199381973644[102] = 0;
   out_7757453199381973644[103] = 0;
   out_7757453199381973644[104] = 0;
   out_7757453199381973644[105] = 0;
   out_7757453199381973644[106] = 0;
   out_7757453199381973644[107] = 0;
   out_7757453199381973644[108] = -0.5*state[6];
   out_7757453199381973644[109] = 0.5*state[3];
   out_7757453199381973644[110] = 0.5*state[4];
   out_7757453199381973644[111] = 0;
   out_7757453199381973644[112] = 0;
   out_7757453199381973644[113] = 0;
   out_7757453199381973644[114] = 0;
   out_7757453199381973644[115] = 0;
   out_7757453199381973644[116] = 0;
   out_7757453199381973644[117] = 0;
   out_7757453199381973644[118] = 0;
   out_7757453199381973644[119] = 0;
   out_7757453199381973644[120] = 0;
   out_7757453199381973644[121] = 0;
   out_7757453199381973644[122] = 0;
   out_7757453199381973644[123] = 0;
   out_7757453199381973644[124] = 0;
   out_7757453199381973644[125] = 0;
   out_7757453199381973644[126] = 0;
   out_7757453199381973644[127] = 0;
   out_7757453199381973644[128] = 0;
   out_7757453199381973644[129] = 0.5*state[5];
   out_7757453199381973644[130] = -0.5*state[4];
   out_7757453199381973644[131] = 0.5*state[3];
   out_7757453199381973644[132] = 0;
   out_7757453199381973644[133] = 0;
   out_7757453199381973644[134] = 0;
   out_7757453199381973644[135] = 0;
   out_7757453199381973644[136] = 0;
   out_7757453199381973644[137] = 0;
   out_7757453199381973644[138] = 0;
   out_7757453199381973644[139] = 0;
   out_7757453199381973644[140] = 0;
   out_7757453199381973644[141] = 0;
   out_7757453199381973644[142] = 0;
   out_7757453199381973644[143] = 0;
   out_7757453199381973644[144] = 0;
   out_7757453199381973644[145] = 0;
   out_7757453199381973644[146] = 0;
   out_7757453199381973644[147] = 0;
   out_7757453199381973644[148] = 0;
   out_7757453199381973644[149] = 0;
   out_7757453199381973644[150] = 0;
   out_7757453199381973644[151] = 0;
   out_7757453199381973644[152] = 0;
   out_7757453199381973644[153] = 1.0;
   out_7757453199381973644[154] = 0;
   out_7757453199381973644[155] = 0;
   out_7757453199381973644[156] = 0;
   out_7757453199381973644[157] = 0;
   out_7757453199381973644[158] = 0;
   out_7757453199381973644[159] = 0;
   out_7757453199381973644[160] = 0;
   out_7757453199381973644[161] = 0;
   out_7757453199381973644[162] = 0;
   out_7757453199381973644[163] = 0;
   out_7757453199381973644[164] = 0;
   out_7757453199381973644[165] = 0;
   out_7757453199381973644[166] = 0;
   out_7757453199381973644[167] = 0;
   out_7757453199381973644[168] = 0;
   out_7757453199381973644[169] = 0;
   out_7757453199381973644[170] = 0;
   out_7757453199381973644[171] = 0;
   out_7757453199381973644[172] = 0;
   out_7757453199381973644[173] = 0;
   out_7757453199381973644[174] = 0;
   out_7757453199381973644[175] = 1.0;
   out_7757453199381973644[176] = 0;
   out_7757453199381973644[177] = 0;
   out_7757453199381973644[178] = 0;
   out_7757453199381973644[179] = 0;
   out_7757453199381973644[180] = 0;
   out_7757453199381973644[181] = 0;
   out_7757453199381973644[182] = 0;
   out_7757453199381973644[183] = 0;
   out_7757453199381973644[184] = 0;
   out_7757453199381973644[185] = 0;
   out_7757453199381973644[186] = 0;
   out_7757453199381973644[187] = 0;
   out_7757453199381973644[188] = 0;
   out_7757453199381973644[189] = 0;
   out_7757453199381973644[190] = 0;
   out_7757453199381973644[191] = 0;
   out_7757453199381973644[192] = 0;
   out_7757453199381973644[193] = 0;
   out_7757453199381973644[194] = 0;
   out_7757453199381973644[195] = 0;
   out_7757453199381973644[196] = 0;
   out_7757453199381973644[197] = 1.0;
   out_7757453199381973644[198] = 0;
   out_7757453199381973644[199] = 0;
   out_7757453199381973644[200] = 0;
   out_7757453199381973644[201] = 0;
   out_7757453199381973644[202] = 0;
   out_7757453199381973644[203] = 0;
   out_7757453199381973644[204] = 0;
   out_7757453199381973644[205] = 0;
   out_7757453199381973644[206] = 0;
   out_7757453199381973644[207] = 0;
   out_7757453199381973644[208] = 0;
   out_7757453199381973644[209] = 0;
   out_7757453199381973644[210] = 0;
   out_7757453199381973644[211] = 0;
   out_7757453199381973644[212] = 0;
   out_7757453199381973644[213] = 0;
   out_7757453199381973644[214] = 0;
   out_7757453199381973644[215] = 0;
   out_7757453199381973644[216] = 0;
   out_7757453199381973644[217] = 0;
   out_7757453199381973644[218] = 0;
   out_7757453199381973644[219] = 1.0;
   out_7757453199381973644[220] = 0;
   out_7757453199381973644[221] = 0;
   out_7757453199381973644[222] = 0;
   out_7757453199381973644[223] = 0;
   out_7757453199381973644[224] = 0;
   out_7757453199381973644[225] = 0;
   out_7757453199381973644[226] = 0;
   out_7757453199381973644[227] = 0;
   out_7757453199381973644[228] = 0;
   out_7757453199381973644[229] = 0;
   out_7757453199381973644[230] = 0;
   out_7757453199381973644[231] = 0;
   out_7757453199381973644[232] = 0;
   out_7757453199381973644[233] = 0;
   out_7757453199381973644[234] = 0;
   out_7757453199381973644[235] = 0;
   out_7757453199381973644[236] = 0;
   out_7757453199381973644[237] = 0;
   out_7757453199381973644[238] = 0;
   out_7757453199381973644[239] = 0;
   out_7757453199381973644[240] = 0;
   out_7757453199381973644[241] = 1.0;
   out_7757453199381973644[242] = 0;
   out_7757453199381973644[243] = 0;
   out_7757453199381973644[244] = 0;
   out_7757453199381973644[245] = 0;
   out_7757453199381973644[246] = 0;
   out_7757453199381973644[247] = 0;
   out_7757453199381973644[248] = 0;
   out_7757453199381973644[249] = 0;
   out_7757453199381973644[250] = 0;
   out_7757453199381973644[251] = 0;
   out_7757453199381973644[252] = 0;
   out_7757453199381973644[253] = 0;
   out_7757453199381973644[254] = 0;
   out_7757453199381973644[255] = 0;
   out_7757453199381973644[256] = 0;
   out_7757453199381973644[257] = 0;
   out_7757453199381973644[258] = 0;
   out_7757453199381973644[259] = 0;
   out_7757453199381973644[260] = 0;
   out_7757453199381973644[261] = 0;
   out_7757453199381973644[262] = 0;
   out_7757453199381973644[263] = 1.0;
   out_7757453199381973644[264] = 0;
   out_7757453199381973644[265] = 0;
   out_7757453199381973644[266] = 0;
   out_7757453199381973644[267] = 0;
   out_7757453199381973644[268] = 0;
   out_7757453199381973644[269] = 0;
   out_7757453199381973644[270] = 0;
   out_7757453199381973644[271] = 0;
   out_7757453199381973644[272] = 0;
   out_7757453199381973644[273] = 0;
   out_7757453199381973644[274] = 0;
   out_7757453199381973644[275] = 0;
   out_7757453199381973644[276] = 0;
   out_7757453199381973644[277] = 0;
   out_7757453199381973644[278] = 0;
   out_7757453199381973644[279] = 0;
   out_7757453199381973644[280] = 0;
   out_7757453199381973644[281] = 0;
   out_7757453199381973644[282] = 0;
   out_7757453199381973644[283] = 0;
   out_7757453199381973644[284] = 0;
   out_7757453199381973644[285] = 1.0;
   out_7757453199381973644[286] = 0;
   out_7757453199381973644[287] = 0;
   out_7757453199381973644[288] = 0;
   out_7757453199381973644[289] = 0;
   out_7757453199381973644[290] = 0;
   out_7757453199381973644[291] = 0;
   out_7757453199381973644[292] = 0;
   out_7757453199381973644[293] = 0;
   out_7757453199381973644[294] = 0;
   out_7757453199381973644[295] = 0;
   out_7757453199381973644[296] = 0;
   out_7757453199381973644[297] = 0;
   out_7757453199381973644[298] = 0;
   out_7757453199381973644[299] = 0;
   out_7757453199381973644[300] = 0;
   out_7757453199381973644[301] = 0;
   out_7757453199381973644[302] = 0;
   out_7757453199381973644[303] = 0;
   out_7757453199381973644[304] = 0;
   out_7757453199381973644[305] = 0;
   out_7757453199381973644[306] = 0;
   out_7757453199381973644[307] = 1.0;
   out_7757453199381973644[308] = 0;
   out_7757453199381973644[309] = 0;
   out_7757453199381973644[310] = 0;
   out_7757453199381973644[311] = 0;
   out_7757453199381973644[312] = 0;
   out_7757453199381973644[313] = 0;
   out_7757453199381973644[314] = 0;
   out_7757453199381973644[315] = 0;
   out_7757453199381973644[316] = 0;
   out_7757453199381973644[317] = 0;
   out_7757453199381973644[318] = 0;
   out_7757453199381973644[319] = 0;
   out_7757453199381973644[320] = 0;
   out_7757453199381973644[321] = 0;
   out_7757453199381973644[322] = 0;
   out_7757453199381973644[323] = 0;
   out_7757453199381973644[324] = 0;
   out_7757453199381973644[325] = 0;
   out_7757453199381973644[326] = 0;
   out_7757453199381973644[327] = 0;
   out_7757453199381973644[328] = 0;
   out_7757453199381973644[329] = 1.0;
   out_7757453199381973644[330] = 0;
   out_7757453199381973644[331] = 0;
   out_7757453199381973644[332] = 0;
   out_7757453199381973644[333] = 0;
   out_7757453199381973644[334] = 0;
   out_7757453199381973644[335] = 0;
   out_7757453199381973644[336] = 0;
   out_7757453199381973644[337] = 0;
   out_7757453199381973644[338] = 0;
   out_7757453199381973644[339] = 0;
   out_7757453199381973644[340] = 0;
   out_7757453199381973644[341] = 0;
   out_7757453199381973644[342] = 0;
   out_7757453199381973644[343] = 0;
   out_7757453199381973644[344] = 0;
   out_7757453199381973644[345] = 0;
   out_7757453199381973644[346] = 0;
   out_7757453199381973644[347] = 0;
   out_7757453199381973644[348] = 0;
   out_7757453199381973644[349] = 0;
   out_7757453199381973644[350] = 0;
   out_7757453199381973644[351] = 1.0;
   out_7757453199381973644[352] = 0;
   out_7757453199381973644[353] = 0;
   out_7757453199381973644[354] = 0;
   out_7757453199381973644[355] = 0;
   out_7757453199381973644[356] = 0;
   out_7757453199381973644[357] = 0;
   out_7757453199381973644[358] = 0;
   out_7757453199381973644[359] = 0;
   out_7757453199381973644[360] = 0;
   out_7757453199381973644[361] = 0;
   out_7757453199381973644[362] = 0;
   out_7757453199381973644[363] = 0;
   out_7757453199381973644[364] = 0;
   out_7757453199381973644[365] = 0;
   out_7757453199381973644[366] = 0;
   out_7757453199381973644[367] = 0;
   out_7757453199381973644[368] = 0;
   out_7757453199381973644[369] = 0;
   out_7757453199381973644[370] = 0;
   out_7757453199381973644[371] = 0;
   out_7757453199381973644[372] = 0;
   out_7757453199381973644[373] = 1.0;
   out_7757453199381973644[374] = 0;
   out_7757453199381973644[375] = 0;
   out_7757453199381973644[376] = 0;
   out_7757453199381973644[377] = 0;
   out_7757453199381973644[378] = 0;
   out_7757453199381973644[379] = 0;
   out_7757453199381973644[380] = 0;
   out_7757453199381973644[381] = 0;
   out_7757453199381973644[382] = 0;
   out_7757453199381973644[383] = 0;
   out_7757453199381973644[384] = 0;
   out_7757453199381973644[385] = 0;
   out_7757453199381973644[386] = 0;
   out_7757453199381973644[387] = 0;
   out_7757453199381973644[388] = 0;
   out_7757453199381973644[389] = 0;
   out_7757453199381973644[390] = 0;
   out_7757453199381973644[391] = 0;
   out_7757453199381973644[392] = 0;
   out_7757453199381973644[393] = 0;
   out_7757453199381973644[394] = 0;
   out_7757453199381973644[395] = 1.0;
   out_7757453199381973644[396] = 0;
   out_7757453199381973644[397] = 0;
   out_7757453199381973644[398] = 0;
   out_7757453199381973644[399] = 0;
   out_7757453199381973644[400] = 0;
   out_7757453199381973644[401] = 0;
   out_7757453199381973644[402] = 0;
   out_7757453199381973644[403] = 0;
   out_7757453199381973644[404] = 0;
   out_7757453199381973644[405] = 0;
   out_7757453199381973644[406] = 0;
   out_7757453199381973644[407] = 0;
   out_7757453199381973644[408] = 0;
   out_7757453199381973644[409] = 0;
   out_7757453199381973644[410] = 0;
   out_7757453199381973644[411] = 0;
   out_7757453199381973644[412] = 0;
   out_7757453199381973644[413] = 0;
   out_7757453199381973644[414] = 0;
   out_7757453199381973644[415] = 0;
   out_7757453199381973644[416] = 0;
   out_7757453199381973644[417] = 1.0;
   out_7757453199381973644[418] = 0;
   out_7757453199381973644[419] = 0;
   out_7757453199381973644[420] = 0;
   out_7757453199381973644[421] = 0;
   out_7757453199381973644[422] = 0;
   out_7757453199381973644[423] = 0;
   out_7757453199381973644[424] = 0;
   out_7757453199381973644[425] = 0;
   out_7757453199381973644[426] = 0;
   out_7757453199381973644[427] = 0;
   out_7757453199381973644[428] = 0;
   out_7757453199381973644[429] = 0;
   out_7757453199381973644[430] = 0;
   out_7757453199381973644[431] = 0;
   out_7757453199381973644[432] = 0;
   out_7757453199381973644[433] = 0;
   out_7757453199381973644[434] = 0;
   out_7757453199381973644[435] = 0;
   out_7757453199381973644[436] = 0;
   out_7757453199381973644[437] = 0;
   out_7757453199381973644[438] = 0;
   out_7757453199381973644[439] = 1.0;
   out_7757453199381973644[440] = 0;
   out_7757453199381973644[441] = 0;
   out_7757453199381973644[442] = 0;
   out_7757453199381973644[443] = 0;
   out_7757453199381973644[444] = 0;
   out_7757453199381973644[445] = 0;
   out_7757453199381973644[446] = 0;
   out_7757453199381973644[447] = 0;
   out_7757453199381973644[448] = 0;
   out_7757453199381973644[449] = 0;
   out_7757453199381973644[450] = 0;
   out_7757453199381973644[451] = 0;
   out_7757453199381973644[452] = 0;
   out_7757453199381973644[453] = 0;
   out_7757453199381973644[454] = 0;
   out_7757453199381973644[455] = 0;
   out_7757453199381973644[456] = 0;
   out_7757453199381973644[457] = 0;
   out_7757453199381973644[458] = 0;
   out_7757453199381973644[459] = 0;
   out_7757453199381973644[460] = 0;
   out_7757453199381973644[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6862179030632812745) {
   out_6862179030632812745[0] = dt*state[7] + state[0];
   out_6862179030632812745[1] = dt*state[8] + state[1];
   out_6862179030632812745[2] = dt*state[9] + state[2];
   out_6862179030632812745[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6862179030632812745[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6862179030632812745[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6862179030632812745[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6862179030632812745[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6862179030632812745[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6862179030632812745[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6862179030632812745[10] = state[10];
   out_6862179030632812745[11] = state[11];
   out_6862179030632812745[12] = state[12];
   out_6862179030632812745[13] = state[13];
   out_6862179030632812745[14] = state[14];
   out_6862179030632812745[15] = state[15];
   out_6862179030632812745[16] = state[16];
   out_6862179030632812745[17] = state[17];
   out_6862179030632812745[18] = state[18];
   out_6862179030632812745[19] = state[19];
   out_6862179030632812745[20] = state[20];
   out_6862179030632812745[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5806104157926584478) {
   out_5806104157926584478[0] = 1;
   out_5806104157926584478[1] = 0;
   out_5806104157926584478[2] = 0;
   out_5806104157926584478[3] = 0;
   out_5806104157926584478[4] = 0;
   out_5806104157926584478[5] = 0;
   out_5806104157926584478[6] = dt;
   out_5806104157926584478[7] = 0;
   out_5806104157926584478[8] = 0;
   out_5806104157926584478[9] = 0;
   out_5806104157926584478[10] = 0;
   out_5806104157926584478[11] = 0;
   out_5806104157926584478[12] = 0;
   out_5806104157926584478[13] = 0;
   out_5806104157926584478[14] = 0;
   out_5806104157926584478[15] = 0;
   out_5806104157926584478[16] = 0;
   out_5806104157926584478[17] = 0;
   out_5806104157926584478[18] = 0;
   out_5806104157926584478[19] = 0;
   out_5806104157926584478[20] = 0;
   out_5806104157926584478[21] = 0;
   out_5806104157926584478[22] = 1;
   out_5806104157926584478[23] = 0;
   out_5806104157926584478[24] = 0;
   out_5806104157926584478[25] = 0;
   out_5806104157926584478[26] = 0;
   out_5806104157926584478[27] = 0;
   out_5806104157926584478[28] = dt;
   out_5806104157926584478[29] = 0;
   out_5806104157926584478[30] = 0;
   out_5806104157926584478[31] = 0;
   out_5806104157926584478[32] = 0;
   out_5806104157926584478[33] = 0;
   out_5806104157926584478[34] = 0;
   out_5806104157926584478[35] = 0;
   out_5806104157926584478[36] = 0;
   out_5806104157926584478[37] = 0;
   out_5806104157926584478[38] = 0;
   out_5806104157926584478[39] = 0;
   out_5806104157926584478[40] = 0;
   out_5806104157926584478[41] = 0;
   out_5806104157926584478[42] = 0;
   out_5806104157926584478[43] = 0;
   out_5806104157926584478[44] = 1;
   out_5806104157926584478[45] = 0;
   out_5806104157926584478[46] = 0;
   out_5806104157926584478[47] = 0;
   out_5806104157926584478[48] = 0;
   out_5806104157926584478[49] = 0;
   out_5806104157926584478[50] = dt;
   out_5806104157926584478[51] = 0;
   out_5806104157926584478[52] = 0;
   out_5806104157926584478[53] = 0;
   out_5806104157926584478[54] = 0;
   out_5806104157926584478[55] = 0;
   out_5806104157926584478[56] = 0;
   out_5806104157926584478[57] = 0;
   out_5806104157926584478[58] = 0;
   out_5806104157926584478[59] = 0;
   out_5806104157926584478[60] = 0;
   out_5806104157926584478[61] = 0;
   out_5806104157926584478[62] = 0;
   out_5806104157926584478[63] = 0;
   out_5806104157926584478[64] = 0;
   out_5806104157926584478[65] = 0;
   out_5806104157926584478[66] = 1;
   out_5806104157926584478[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5806104157926584478[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5806104157926584478[69] = 0;
   out_5806104157926584478[70] = 0;
   out_5806104157926584478[71] = 0;
   out_5806104157926584478[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5806104157926584478[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806104157926584478[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806104157926584478[75] = 0;
   out_5806104157926584478[76] = 0;
   out_5806104157926584478[77] = 0;
   out_5806104157926584478[78] = 0;
   out_5806104157926584478[79] = 0;
   out_5806104157926584478[80] = 0;
   out_5806104157926584478[81] = 0;
   out_5806104157926584478[82] = 0;
   out_5806104157926584478[83] = 0;
   out_5806104157926584478[84] = 0;
   out_5806104157926584478[85] = 0;
   out_5806104157926584478[86] = 0;
   out_5806104157926584478[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5806104157926584478[88] = 1;
   out_5806104157926584478[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5806104157926584478[90] = 0;
   out_5806104157926584478[91] = 0;
   out_5806104157926584478[92] = 0;
   out_5806104157926584478[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806104157926584478[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5806104157926584478[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806104157926584478[96] = 0;
   out_5806104157926584478[97] = 0;
   out_5806104157926584478[98] = 0;
   out_5806104157926584478[99] = 0;
   out_5806104157926584478[100] = 0;
   out_5806104157926584478[101] = 0;
   out_5806104157926584478[102] = 0;
   out_5806104157926584478[103] = 0;
   out_5806104157926584478[104] = 0;
   out_5806104157926584478[105] = 0;
   out_5806104157926584478[106] = 0;
   out_5806104157926584478[107] = 0;
   out_5806104157926584478[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5806104157926584478[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5806104157926584478[110] = 1;
   out_5806104157926584478[111] = 0;
   out_5806104157926584478[112] = 0;
   out_5806104157926584478[113] = 0;
   out_5806104157926584478[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806104157926584478[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806104157926584478[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5806104157926584478[117] = 0;
   out_5806104157926584478[118] = 0;
   out_5806104157926584478[119] = 0;
   out_5806104157926584478[120] = 0;
   out_5806104157926584478[121] = 0;
   out_5806104157926584478[122] = 0;
   out_5806104157926584478[123] = 0;
   out_5806104157926584478[124] = 0;
   out_5806104157926584478[125] = 0;
   out_5806104157926584478[126] = 0;
   out_5806104157926584478[127] = 0;
   out_5806104157926584478[128] = 0;
   out_5806104157926584478[129] = 0;
   out_5806104157926584478[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5806104157926584478[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5806104157926584478[132] = 1;
   out_5806104157926584478[133] = 0;
   out_5806104157926584478[134] = 0;
   out_5806104157926584478[135] = 0;
   out_5806104157926584478[136] = 0;
   out_5806104157926584478[137] = 0;
   out_5806104157926584478[138] = 0;
   out_5806104157926584478[139] = 0;
   out_5806104157926584478[140] = 0;
   out_5806104157926584478[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5806104157926584478[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806104157926584478[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806104157926584478[144] = 0;
   out_5806104157926584478[145] = 0;
   out_5806104157926584478[146] = 0;
   out_5806104157926584478[147] = 0;
   out_5806104157926584478[148] = 0;
   out_5806104157926584478[149] = 0;
   out_5806104157926584478[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5806104157926584478[151] = 0;
   out_5806104157926584478[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5806104157926584478[153] = 0;
   out_5806104157926584478[154] = 1;
   out_5806104157926584478[155] = 0;
   out_5806104157926584478[156] = 0;
   out_5806104157926584478[157] = 0;
   out_5806104157926584478[158] = 0;
   out_5806104157926584478[159] = 0;
   out_5806104157926584478[160] = 0;
   out_5806104157926584478[161] = 0;
   out_5806104157926584478[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806104157926584478[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5806104157926584478[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806104157926584478[165] = 0;
   out_5806104157926584478[166] = 0;
   out_5806104157926584478[167] = 0;
   out_5806104157926584478[168] = 0;
   out_5806104157926584478[169] = 0;
   out_5806104157926584478[170] = 0;
   out_5806104157926584478[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5806104157926584478[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5806104157926584478[173] = 0;
   out_5806104157926584478[174] = 0;
   out_5806104157926584478[175] = 0;
   out_5806104157926584478[176] = 1;
   out_5806104157926584478[177] = 0;
   out_5806104157926584478[178] = 0;
   out_5806104157926584478[179] = 0;
   out_5806104157926584478[180] = 0;
   out_5806104157926584478[181] = 0;
   out_5806104157926584478[182] = 0;
   out_5806104157926584478[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806104157926584478[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806104157926584478[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5806104157926584478[186] = 0;
   out_5806104157926584478[187] = 0;
   out_5806104157926584478[188] = 0;
   out_5806104157926584478[189] = 0;
   out_5806104157926584478[190] = 0;
   out_5806104157926584478[191] = 0;
   out_5806104157926584478[192] = 0;
   out_5806104157926584478[193] = 0;
   out_5806104157926584478[194] = 0;
   out_5806104157926584478[195] = 0;
   out_5806104157926584478[196] = 0;
   out_5806104157926584478[197] = 0;
   out_5806104157926584478[198] = 1;
   out_5806104157926584478[199] = 0;
   out_5806104157926584478[200] = 0;
   out_5806104157926584478[201] = 0;
   out_5806104157926584478[202] = 0;
   out_5806104157926584478[203] = 0;
   out_5806104157926584478[204] = 0;
   out_5806104157926584478[205] = 0;
   out_5806104157926584478[206] = 0;
   out_5806104157926584478[207] = 0;
   out_5806104157926584478[208] = 0;
   out_5806104157926584478[209] = 0;
   out_5806104157926584478[210] = 0;
   out_5806104157926584478[211] = 0;
   out_5806104157926584478[212] = 0;
   out_5806104157926584478[213] = 0;
   out_5806104157926584478[214] = 0;
   out_5806104157926584478[215] = 0;
   out_5806104157926584478[216] = 0;
   out_5806104157926584478[217] = 0;
   out_5806104157926584478[218] = 0;
   out_5806104157926584478[219] = 0;
   out_5806104157926584478[220] = 1;
   out_5806104157926584478[221] = 0;
   out_5806104157926584478[222] = 0;
   out_5806104157926584478[223] = 0;
   out_5806104157926584478[224] = 0;
   out_5806104157926584478[225] = 0;
   out_5806104157926584478[226] = 0;
   out_5806104157926584478[227] = 0;
   out_5806104157926584478[228] = 0;
   out_5806104157926584478[229] = 0;
   out_5806104157926584478[230] = 0;
   out_5806104157926584478[231] = 0;
   out_5806104157926584478[232] = 0;
   out_5806104157926584478[233] = 0;
   out_5806104157926584478[234] = 0;
   out_5806104157926584478[235] = 0;
   out_5806104157926584478[236] = 0;
   out_5806104157926584478[237] = 0;
   out_5806104157926584478[238] = 0;
   out_5806104157926584478[239] = 0;
   out_5806104157926584478[240] = 0;
   out_5806104157926584478[241] = 0;
   out_5806104157926584478[242] = 1;
   out_5806104157926584478[243] = 0;
   out_5806104157926584478[244] = 0;
   out_5806104157926584478[245] = 0;
   out_5806104157926584478[246] = 0;
   out_5806104157926584478[247] = 0;
   out_5806104157926584478[248] = 0;
   out_5806104157926584478[249] = 0;
   out_5806104157926584478[250] = 0;
   out_5806104157926584478[251] = 0;
   out_5806104157926584478[252] = 0;
   out_5806104157926584478[253] = 0;
   out_5806104157926584478[254] = 0;
   out_5806104157926584478[255] = 0;
   out_5806104157926584478[256] = 0;
   out_5806104157926584478[257] = 0;
   out_5806104157926584478[258] = 0;
   out_5806104157926584478[259] = 0;
   out_5806104157926584478[260] = 0;
   out_5806104157926584478[261] = 0;
   out_5806104157926584478[262] = 0;
   out_5806104157926584478[263] = 0;
   out_5806104157926584478[264] = 1;
   out_5806104157926584478[265] = 0;
   out_5806104157926584478[266] = 0;
   out_5806104157926584478[267] = 0;
   out_5806104157926584478[268] = 0;
   out_5806104157926584478[269] = 0;
   out_5806104157926584478[270] = 0;
   out_5806104157926584478[271] = 0;
   out_5806104157926584478[272] = 0;
   out_5806104157926584478[273] = 0;
   out_5806104157926584478[274] = 0;
   out_5806104157926584478[275] = 0;
   out_5806104157926584478[276] = 0;
   out_5806104157926584478[277] = 0;
   out_5806104157926584478[278] = 0;
   out_5806104157926584478[279] = 0;
   out_5806104157926584478[280] = 0;
   out_5806104157926584478[281] = 0;
   out_5806104157926584478[282] = 0;
   out_5806104157926584478[283] = 0;
   out_5806104157926584478[284] = 0;
   out_5806104157926584478[285] = 0;
   out_5806104157926584478[286] = 1;
   out_5806104157926584478[287] = 0;
   out_5806104157926584478[288] = 0;
   out_5806104157926584478[289] = 0;
   out_5806104157926584478[290] = 0;
   out_5806104157926584478[291] = 0;
   out_5806104157926584478[292] = 0;
   out_5806104157926584478[293] = 0;
   out_5806104157926584478[294] = 0;
   out_5806104157926584478[295] = 0;
   out_5806104157926584478[296] = 0;
   out_5806104157926584478[297] = 0;
   out_5806104157926584478[298] = 0;
   out_5806104157926584478[299] = 0;
   out_5806104157926584478[300] = 0;
   out_5806104157926584478[301] = 0;
   out_5806104157926584478[302] = 0;
   out_5806104157926584478[303] = 0;
   out_5806104157926584478[304] = 0;
   out_5806104157926584478[305] = 0;
   out_5806104157926584478[306] = 0;
   out_5806104157926584478[307] = 0;
   out_5806104157926584478[308] = 1;
   out_5806104157926584478[309] = 0;
   out_5806104157926584478[310] = 0;
   out_5806104157926584478[311] = 0;
   out_5806104157926584478[312] = 0;
   out_5806104157926584478[313] = 0;
   out_5806104157926584478[314] = 0;
   out_5806104157926584478[315] = 0;
   out_5806104157926584478[316] = 0;
   out_5806104157926584478[317] = 0;
   out_5806104157926584478[318] = 0;
   out_5806104157926584478[319] = 0;
   out_5806104157926584478[320] = 0;
   out_5806104157926584478[321] = 0;
   out_5806104157926584478[322] = 0;
   out_5806104157926584478[323] = 0;
   out_5806104157926584478[324] = 0;
   out_5806104157926584478[325] = 0;
   out_5806104157926584478[326] = 0;
   out_5806104157926584478[327] = 0;
   out_5806104157926584478[328] = 0;
   out_5806104157926584478[329] = 0;
   out_5806104157926584478[330] = 1;
   out_5806104157926584478[331] = 0;
   out_5806104157926584478[332] = 0;
   out_5806104157926584478[333] = 0;
   out_5806104157926584478[334] = 0;
   out_5806104157926584478[335] = 0;
   out_5806104157926584478[336] = 0;
   out_5806104157926584478[337] = 0;
   out_5806104157926584478[338] = 0;
   out_5806104157926584478[339] = 0;
   out_5806104157926584478[340] = 0;
   out_5806104157926584478[341] = 0;
   out_5806104157926584478[342] = 0;
   out_5806104157926584478[343] = 0;
   out_5806104157926584478[344] = 0;
   out_5806104157926584478[345] = 0;
   out_5806104157926584478[346] = 0;
   out_5806104157926584478[347] = 0;
   out_5806104157926584478[348] = 0;
   out_5806104157926584478[349] = 0;
   out_5806104157926584478[350] = 0;
   out_5806104157926584478[351] = 0;
   out_5806104157926584478[352] = 1;
   out_5806104157926584478[353] = 0;
   out_5806104157926584478[354] = 0;
   out_5806104157926584478[355] = 0;
   out_5806104157926584478[356] = 0;
   out_5806104157926584478[357] = 0;
   out_5806104157926584478[358] = 0;
   out_5806104157926584478[359] = 0;
   out_5806104157926584478[360] = 0;
   out_5806104157926584478[361] = 0;
   out_5806104157926584478[362] = 0;
   out_5806104157926584478[363] = 0;
   out_5806104157926584478[364] = 0;
   out_5806104157926584478[365] = 0;
   out_5806104157926584478[366] = 0;
   out_5806104157926584478[367] = 0;
   out_5806104157926584478[368] = 0;
   out_5806104157926584478[369] = 0;
   out_5806104157926584478[370] = 0;
   out_5806104157926584478[371] = 0;
   out_5806104157926584478[372] = 0;
   out_5806104157926584478[373] = 0;
   out_5806104157926584478[374] = 1;
   out_5806104157926584478[375] = 0;
   out_5806104157926584478[376] = 0;
   out_5806104157926584478[377] = 0;
   out_5806104157926584478[378] = 0;
   out_5806104157926584478[379] = 0;
   out_5806104157926584478[380] = 0;
   out_5806104157926584478[381] = 0;
   out_5806104157926584478[382] = 0;
   out_5806104157926584478[383] = 0;
   out_5806104157926584478[384] = 0;
   out_5806104157926584478[385] = 0;
   out_5806104157926584478[386] = 0;
   out_5806104157926584478[387] = 0;
   out_5806104157926584478[388] = 0;
   out_5806104157926584478[389] = 0;
   out_5806104157926584478[390] = 0;
   out_5806104157926584478[391] = 0;
   out_5806104157926584478[392] = 0;
   out_5806104157926584478[393] = 0;
   out_5806104157926584478[394] = 0;
   out_5806104157926584478[395] = 0;
   out_5806104157926584478[396] = 1;
   out_5806104157926584478[397] = 0;
   out_5806104157926584478[398] = 0;
   out_5806104157926584478[399] = 0;
   out_5806104157926584478[400] = 0;
   out_5806104157926584478[401] = 0;
   out_5806104157926584478[402] = 0;
   out_5806104157926584478[403] = 0;
   out_5806104157926584478[404] = 0;
   out_5806104157926584478[405] = 0;
   out_5806104157926584478[406] = 0;
   out_5806104157926584478[407] = 0;
   out_5806104157926584478[408] = 0;
   out_5806104157926584478[409] = 0;
   out_5806104157926584478[410] = 0;
   out_5806104157926584478[411] = 0;
   out_5806104157926584478[412] = 0;
   out_5806104157926584478[413] = 0;
   out_5806104157926584478[414] = 0;
   out_5806104157926584478[415] = 0;
   out_5806104157926584478[416] = 0;
   out_5806104157926584478[417] = 0;
   out_5806104157926584478[418] = 1;
   out_5806104157926584478[419] = 0;
   out_5806104157926584478[420] = 0;
   out_5806104157926584478[421] = 0;
   out_5806104157926584478[422] = 0;
   out_5806104157926584478[423] = 0;
   out_5806104157926584478[424] = 0;
   out_5806104157926584478[425] = 0;
   out_5806104157926584478[426] = 0;
   out_5806104157926584478[427] = 0;
   out_5806104157926584478[428] = 0;
   out_5806104157926584478[429] = 0;
   out_5806104157926584478[430] = 0;
   out_5806104157926584478[431] = 0;
   out_5806104157926584478[432] = 0;
   out_5806104157926584478[433] = 0;
   out_5806104157926584478[434] = 0;
   out_5806104157926584478[435] = 0;
   out_5806104157926584478[436] = 0;
   out_5806104157926584478[437] = 0;
   out_5806104157926584478[438] = 0;
   out_5806104157926584478[439] = 0;
   out_5806104157926584478[440] = 1;
}
void h_4(double *state, double *unused, double *out_4436485360583885785) {
   out_4436485360583885785[0] = state[10] + state[13];
   out_4436485360583885785[1] = state[11] + state[14];
   out_4436485360583885785[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6123477027156270371) {
   out_6123477027156270371[0] = 0;
   out_6123477027156270371[1] = 0;
   out_6123477027156270371[2] = 0;
   out_6123477027156270371[3] = 0;
   out_6123477027156270371[4] = 0;
   out_6123477027156270371[5] = 0;
   out_6123477027156270371[6] = 0;
   out_6123477027156270371[7] = 0;
   out_6123477027156270371[8] = 0;
   out_6123477027156270371[9] = 0;
   out_6123477027156270371[10] = 1;
   out_6123477027156270371[11] = 0;
   out_6123477027156270371[12] = 0;
   out_6123477027156270371[13] = 1;
   out_6123477027156270371[14] = 0;
   out_6123477027156270371[15] = 0;
   out_6123477027156270371[16] = 0;
   out_6123477027156270371[17] = 0;
   out_6123477027156270371[18] = 0;
   out_6123477027156270371[19] = 0;
   out_6123477027156270371[20] = 0;
   out_6123477027156270371[21] = 0;
   out_6123477027156270371[22] = 0;
   out_6123477027156270371[23] = 0;
   out_6123477027156270371[24] = 0;
   out_6123477027156270371[25] = 0;
   out_6123477027156270371[26] = 0;
   out_6123477027156270371[27] = 0;
   out_6123477027156270371[28] = 0;
   out_6123477027156270371[29] = 0;
   out_6123477027156270371[30] = 0;
   out_6123477027156270371[31] = 0;
   out_6123477027156270371[32] = 0;
   out_6123477027156270371[33] = 1;
   out_6123477027156270371[34] = 0;
   out_6123477027156270371[35] = 0;
   out_6123477027156270371[36] = 1;
   out_6123477027156270371[37] = 0;
   out_6123477027156270371[38] = 0;
   out_6123477027156270371[39] = 0;
   out_6123477027156270371[40] = 0;
   out_6123477027156270371[41] = 0;
   out_6123477027156270371[42] = 0;
   out_6123477027156270371[43] = 0;
   out_6123477027156270371[44] = 0;
   out_6123477027156270371[45] = 0;
   out_6123477027156270371[46] = 0;
   out_6123477027156270371[47] = 0;
   out_6123477027156270371[48] = 0;
   out_6123477027156270371[49] = 0;
   out_6123477027156270371[50] = 0;
   out_6123477027156270371[51] = 0;
   out_6123477027156270371[52] = 0;
   out_6123477027156270371[53] = 0;
   out_6123477027156270371[54] = 0;
   out_6123477027156270371[55] = 0;
   out_6123477027156270371[56] = 1;
   out_6123477027156270371[57] = 0;
   out_6123477027156270371[58] = 0;
   out_6123477027156270371[59] = 1;
   out_6123477027156270371[60] = 0;
   out_6123477027156270371[61] = 0;
   out_6123477027156270371[62] = 0;
   out_6123477027156270371[63] = 0;
   out_6123477027156270371[64] = 0;
   out_6123477027156270371[65] = 0;
}
void h_9(double *state, double *unused, double *out_6246065433276342271) {
   out_6246065433276342271[0] = state[10];
   out_6246065433276342271[1] = state[11];
   out_6246065433276342271[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1163741908108177099) {
   out_1163741908108177099[0] = 0;
   out_1163741908108177099[1] = 0;
   out_1163741908108177099[2] = 0;
   out_1163741908108177099[3] = 0;
   out_1163741908108177099[4] = 0;
   out_1163741908108177099[5] = 0;
   out_1163741908108177099[6] = 0;
   out_1163741908108177099[7] = 0;
   out_1163741908108177099[8] = 0;
   out_1163741908108177099[9] = 0;
   out_1163741908108177099[10] = 1;
   out_1163741908108177099[11] = 0;
   out_1163741908108177099[12] = 0;
   out_1163741908108177099[13] = 0;
   out_1163741908108177099[14] = 0;
   out_1163741908108177099[15] = 0;
   out_1163741908108177099[16] = 0;
   out_1163741908108177099[17] = 0;
   out_1163741908108177099[18] = 0;
   out_1163741908108177099[19] = 0;
   out_1163741908108177099[20] = 0;
   out_1163741908108177099[21] = 0;
   out_1163741908108177099[22] = 0;
   out_1163741908108177099[23] = 0;
   out_1163741908108177099[24] = 0;
   out_1163741908108177099[25] = 0;
   out_1163741908108177099[26] = 0;
   out_1163741908108177099[27] = 0;
   out_1163741908108177099[28] = 0;
   out_1163741908108177099[29] = 0;
   out_1163741908108177099[30] = 0;
   out_1163741908108177099[31] = 0;
   out_1163741908108177099[32] = 0;
   out_1163741908108177099[33] = 1;
   out_1163741908108177099[34] = 0;
   out_1163741908108177099[35] = 0;
   out_1163741908108177099[36] = 0;
   out_1163741908108177099[37] = 0;
   out_1163741908108177099[38] = 0;
   out_1163741908108177099[39] = 0;
   out_1163741908108177099[40] = 0;
   out_1163741908108177099[41] = 0;
   out_1163741908108177099[42] = 0;
   out_1163741908108177099[43] = 0;
   out_1163741908108177099[44] = 0;
   out_1163741908108177099[45] = 0;
   out_1163741908108177099[46] = 0;
   out_1163741908108177099[47] = 0;
   out_1163741908108177099[48] = 0;
   out_1163741908108177099[49] = 0;
   out_1163741908108177099[50] = 0;
   out_1163741908108177099[51] = 0;
   out_1163741908108177099[52] = 0;
   out_1163741908108177099[53] = 0;
   out_1163741908108177099[54] = 0;
   out_1163741908108177099[55] = 0;
   out_1163741908108177099[56] = 1;
   out_1163741908108177099[57] = 0;
   out_1163741908108177099[58] = 0;
   out_1163741908108177099[59] = 0;
   out_1163741908108177099[60] = 0;
   out_1163741908108177099[61] = 0;
   out_1163741908108177099[62] = 0;
   out_1163741908108177099[63] = 0;
   out_1163741908108177099[64] = 0;
   out_1163741908108177099[65] = 0;
}
void h_10(double *state, double *unused, double *out_1526413025883775463) {
   out_1526413025883775463[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1526413025883775463[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1526413025883775463[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6038771845523629986) {
   out_6038771845523629986[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6038771845523629986[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6038771845523629986[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6038771845523629986[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6038771845523629986[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6038771845523629986[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6038771845523629986[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6038771845523629986[7] = 0;
   out_6038771845523629986[8] = 0;
   out_6038771845523629986[9] = 0;
   out_6038771845523629986[10] = 0;
   out_6038771845523629986[11] = 0;
   out_6038771845523629986[12] = 0;
   out_6038771845523629986[13] = 0;
   out_6038771845523629986[14] = 0;
   out_6038771845523629986[15] = 0;
   out_6038771845523629986[16] = 1;
   out_6038771845523629986[17] = 0;
   out_6038771845523629986[18] = 0;
   out_6038771845523629986[19] = 1;
   out_6038771845523629986[20] = 0;
   out_6038771845523629986[21] = 0;
   out_6038771845523629986[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6038771845523629986[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6038771845523629986[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6038771845523629986[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6038771845523629986[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6038771845523629986[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6038771845523629986[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6038771845523629986[29] = 0;
   out_6038771845523629986[30] = 0;
   out_6038771845523629986[31] = 0;
   out_6038771845523629986[32] = 0;
   out_6038771845523629986[33] = 0;
   out_6038771845523629986[34] = 0;
   out_6038771845523629986[35] = 0;
   out_6038771845523629986[36] = 0;
   out_6038771845523629986[37] = 0;
   out_6038771845523629986[38] = 0;
   out_6038771845523629986[39] = 1;
   out_6038771845523629986[40] = 0;
   out_6038771845523629986[41] = 0;
   out_6038771845523629986[42] = 1;
   out_6038771845523629986[43] = 0;
   out_6038771845523629986[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6038771845523629986[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6038771845523629986[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6038771845523629986[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6038771845523629986[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6038771845523629986[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6038771845523629986[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6038771845523629986[51] = 0;
   out_6038771845523629986[52] = 0;
   out_6038771845523629986[53] = 0;
   out_6038771845523629986[54] = 0;
   out_6038771845523629986[55] = 0;
   out_6038771845523629986[56] = 0;
   out_6038771845523629986[57] = 0;
   out_6038771845523629986[58] = 0;
   out_6038771845523629986[59] = 0;
   out_6038771845523629986[60] = 0;
   out_6038771845523629986[61] = 0;
   out_6038771845523629986[62] = 1;
   out_6038771845523629986[63] = 0;
   out_6038771845523629986[64] = 0;
   out_6038771845523629986[65] = 1;
}
void h_12(double *state, double *unused, double *out_6580810709086629191) {
   out_6580810709086629191[0] = state[0];
   out_6580810709086629191[1] = state[1];
   out_6580810709086629191[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5942008669510548249) {
   out_5942008669510548249[0] = 1;
   out_5942008669510548249[1] = 0;
   out_5942008669510548249[2] = 0;
   out_5942008669510548249[3] = 0;
   out_5942008669510548249[4] = 0;
   out_5942008669510548249[5] = 0;
   out_5942008669510548249[6] = 0;
   out_5942008669510548249[7] = 0;
   out_5942008669510548249[8] = 0;
   out_5942008669510548249[9] = 0;
   out_5942008669510548249[10] = 0;
   out_5942008669510548249[11] = 0;
   out_5942008669510548249[12] = 0;
   out_5942008669510548249[13] = 0;
   out_5942008669510548249[14] = 0;
   out_5942008669510548249[15] = 0;
   out_5942008669510548249[16] = 0;
   out_5942008669510548249[17] = 0;
   out_5942008669510548249[18] = 0;
   out_5942008669510548249[19] = 0;
   out_5942008669510548249[20] = 0;
   out_5942008669510548249[21] = 0;
   out_5942008669510548249[22] = 0;
   out_5942008669510548249[23] = 1;
   out_5942008669510548249[24] = 0;
   out_5942008669510548249[25] = 0;
   out_5942008669510548249[26] = 0;
   out_5942008669510548249[27] = 0;
   out_5942008669510548249[28] = 0;
   out_5942008669510548249[29] = 0;
   out_5942008669510548249[30] = 0;
   out_5942008669510548249[31] = 0;
   out_5942008669510548249[32] = 0;
   out_5942008669510548249[33] = 0;
   out_5942008669510548249[34] = 0;
   out_5942008669510548249[35] = 0;
   out_5942008669510548249[36] = 0;
   out_5942008669510548249[37] = 0;
   out_5942008669510548249[38] = 0;
   out_5942008669510548249[39] = 0;
   out_5942008669510548249[40] = 0;
   out_5942008669510548249[41] = 0;
   out_5942008669510548249[42] = 0;
   out_5942008669510548249[43] = 0;
   out_5942008669510548249[44] = 0;
   out_5942008669510548249[45] = 0;
   out_5942008669510548249[46] = 1;
   out_5942008669510548249[47] = 0;
   out_5942008669510548249[48] = 0;
   out_5942008669510548249[49] = 0;
   out_5942008669510548249[50] = 0;
   out_5942008669510548249[51] = 0;
   out_5942008669510548249[52] = 0;
   out_5942008669510548249[53] = 0;
   out_5942008669510548249[54] = 0;
   out_5942008669510548249[55] = 0;
   out_5942008669510548249[56] = 0;
   out_5942008669510548249[57] = 0;
   out_5942008669510548249[58] = 0;
   out_5942008669510548249[59] = 0;
   out_5942008669510548249[60] = 0;
   out_5942008669510548249[61] = 0;
   out_5942008669510548249[62] = 0;
   out_5942008669510548249[63] = 0;
   out_5942008669510548249[64] = 0;
   out_5942008669510548249[65] = 0;
}
void h_31(double *state, double *unused, double *out_2208032687669611621) {
   out_2208032687669611621[0] = state[7];
   out_2208032687669611621[1] = state[8];
   out_2208032687669611621[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4289214318851193830) {
   out_4289214318851193830[0] = 0;
   out_4289214318851193830[1] = 0;
   out_4289214318851193830[2] = 0;
   out_4289214318851193830[3] = 0;
   out_4289214318851193830[4] = 0;
   out_4289214318851193830[5] = 0;
   out_4289214318851193830[6] = 0;
   out_4289214318851193830[7] = 1;
   out_4289214318851193830[8] = 0;
   out_4289214318851193830[9] = 0;
   out_4289214318851193830[10] = 0;
   out_4289214318851193830[11] = 0;
   out_4289214318851193830[12] = 0;
   out_4289214318851193830[13] = 0;
   out_4289214318851193830[14] = 0;
   out_4289214318851193830[15] = 0;
   out_4289214318851193830[16] = 0;
   out_4289214318851193830[17] = 0;
   out_4289214318851193830[18] = 0;
   out_4289214318851193830[19] = 0;
   out_4289214318851193830[20] = 0;
   out_4289214318851193830[21] = 0;
   out_4289214318851193830[22] = 0;
   out_4289214318851193830[23] = 0;
   out_4289214318851193830[24] = 0;
   out_4289214318851193830[25] = 0;
   out_4289214318851193830[26] = 0;
   out_4289214318851193830[27] = 0;
   out_4289214318851193830[28] = 0;
   out_4289214318851193830[29] = 0;
   out_4289214318851193830[30] = 1;
   out_4289214318851193830[31] = 0;
   out_4289214318851193830[32] = 0;
   out_4289214318851193830[33] = 0;
   out_4289214318851193830[34] = 0;
   out_4289214318851193830[35] = 0;
   out_4289214318851193830[36] = 0;
   out_4289214318851193830[37] = 0;
   out_4289214318851193830[38] = 0;
   out_4289214318851193830[39] = 0;
   out_4289214318851193830[40] = 0;
   out_4289214318851193830[41] = 0;
   out_4289214318851193830[42] = 0;
   out_4289214318851193830[43] = 0;
   out_4289214318851193830[44] = 0;
   out_4289214318851193830[45] = 0;
   out_4289214318851193830[46] = 0;
   out_4289214318851193830[47] = 0;
   out_4289214318851193830[48] = 0;
   out_4289214318851193830[49] = 0;
   out_4289214318851193830[50] = 0;
   out_4289214318851193830[51] = 0;
   out_4289214318851193830[52] = 0;
   out_4289214318851193830[53] = 1;
   out_4289214318851193830[54] = 0;
   out_4289214318851193830[55] = 0;
   out_4289214318851193830[56] = 0;
   out_4289214318851193830[57] = 0;
   out_4289214318851193830[58] = 0;
   out_4289214318851193830[59] = 0;
   out_4289214318851193830[60] = 0;
   out_4289214318851193830[61] = 0;
   out_4289214318851193830[62] = 0;
   out_4289214318851193830[63] = 0;
   out_4289214318851193830[64] = 0;
   out_4289214318851193830[65] = 0;
}
void h_32(double *state, double *unused, double *out_501696487008393722) {
   out_501696487008393722[0] = state[3];
   out_501696487008393722[1] = state[4];
   out_501696487008393722[2] = state[5];
   out_501696487008393722[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1244939009647749363) {
   out_1244939009647749363[0] = 0;
   out_1244939009647749363[1] = 0;
   out_1244939009647749363[2] = 0;
   out_1244939009647749363[3] = 1;
   out_1244939009647749363[4] = 0;
   out_1244939009647749363[5] = 0;
   out_1244939009647749363[6] = 0;
   out_1244939009647749363[7] = 0;
   out_1244939009647749363[8] = 0;
   out_1244939009647749363[9] = 0;
   out_1244939009647749363[10] = 0;
   out_1244939009647749363[11] = 0;
   out_1244939009647749363[12] = 0;
   out_1244939009647749363[13] = 0;
   out_1244939009647749363[14] = 0;
   out_1244939009647749363[15] = 0;
   out_1244939009647749363[16] = 0;
   out_1244939009647749363[17] = 0;
   out_1244939009647749363[18] = 0;
   out_1244939009647749363[19] = 0;
   out_1244939009647749363[20] = 0;
   out_1244939009647749363[21] = 0;
   out_1244939009647749363[22] = 0;
   out_1244939009647749363[23] = 0;
   out_1244939009647749363[24] = 0;
   out_1244939009647749363[25] = 0;
   out_1244939009647749363[26] = 1;
   out_1244939009647749363[27] = 0;
   out_1244939009647749363[28] = 0;
   out_1244939009647749363[29] = 0;
   out_1244939009647749363[30] = 0;
   out_1244939009647749363[31] = 0;
   out_1244939009647749363[32] = 0;
   out_1244939009647749363[33] = 0;
   out_1244939009647749363[34] = 0;
   out_1244939009647749363[35] = 0;
   out_1244939009647749363[36] = 0;
   out_1244939009647749363[37] = 0;
   out_1244939009647749363[38] = 0;
   out_1244939009647749363[39] = 0;
   out_1244939009647749363[40] = 0;
   out_1244939009647749363[41] = 0;
   out_1244939009647749363[42] = 0;
   out_1244939009647749363[43] = 0;
   out_1244939009647749363[44] = 0;
   out_1244939009647749363[45] = 0;
   out_1244939009647749363[46] = 0;
   out_1244939009647749363[47] = 0;
   out_1244939009647749363[48] = 0;
   out_1244939009647749363[49] = 1;
   out_1244939009647749363[50] = 0;
   out_1244939009647749363[51] = 0;
   out_1244939009647749363[52] = 0;
   out_1244939009647749363[53] = 0;
   out_1244939009647749363[54] = 0;
   out_1244939009647749363[55] = 0;
   out_1244939009647749363[56] = 0;
   out_1244939009647749363[57] = 0;
   out_1244939009647749363[58] = 0;
   out_1244939009647749363[59] = 0;
   out_1244939009647749363[60] = 0;
   out_1244939009647749363[61] = 0;
   out_1244939009647749363[62] = 0;
   out_1244939009647749363[63] = 0;
   out_1244939009647749363[64] = 0;
   out_1244939009647749363[65] = 0;
   out_1244939009647749363[66] = 0;
   out_1244939009647749363[67] = 0;
   out_1244939009647749363[68] = 0;
   out_1244939009647749363[69] = 0;
   out_1244939009647749363[70] = 0;
   out_1244939009647749363[71] = 0;
   out_1244939009647749363[72] = 1;
   out_1244939009647749363[73] = 0;
   out_1244939009647749363[74] = 0;
   out_1244939009647749363[75] = 0;
   out_1244939009647749363[76] = 0;
   out_1244939009647749363[77] = 0;
   out_1244939009647749363[78] = 0;
   out_1244939009647749363[79] = 0;
   out_1244939009647749363[80] = 0;
   out_1244939009647749363[81] = 0;
   out_1244939009647749363[82] = 0;
   out_1244939009647749363[83] = 0;
   out_1244939009647749363[84] = 0;
   out_1244939009647749363[85] = 0;
   out_1244939009647749363[86] = 0;
   out_1244939009647749363[87] = 0;
}
void h_13(double *state, double *unused, double *out_1162208089473883596) {
   out_1162208089473883596[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1162208089473883596[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1162208089473883596[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5054413420910978744) {
   out_5054413420910978744[0] = 0;
   out_5054413420910978744[1] = 0;
   out_5054413420910978744[2] = 0;
   out_5054413420910978744[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5054413420910978744[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5054413420910978744[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5054413420910978744[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5054413420910978744[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5054413420910978744[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5054413420910978744[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5054413420910978744[10] = 0;
   out_5054413420910978744[11] = 0;
   out_5054413420910978744[12] = 0;
   out_5054413420910978744[13] = 0;
   out_5054413420910978744[14] = 0;
   out_5054413420910978744[15] = 0;
   out_5054413420910978744[16] = 0;
   out_5054413420910978744[17] = 0;
   out_5054413420910978744[18] = 0;
   out_5054413420910978744[19] = 0;
   out_5054413420910978744[20] = 0;
   out_5054413420910978744[21] = 0;
   out_5054413420910978744[22] = 0;
   out_5054413420910978744[23] = 0;
   out_5054413420910978744[24] = 0;
   out_5054413420910978744[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5054413420910978744[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5054413420910978744[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5054413420910978744[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5054413420910978744[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5054413420910978744[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5054413420910978744[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5054413420910978744[32] = 0;
   out_5054413420910978744[33] = 0;
   out_5054413420910978744[34] = 0;
   out_5054413420910978744[35] = 0;
   out_5054413420910978744[36] = 0;
   out_5054413420910978744[37] = 0;
   out_5054413420910978744[38] = 0;
   out_5054413420910978744[39] = 0;
   out_5054413420910978744[40] = 0;
   out_5054413420910978744[41] = 0;
   out_5054413420910978744[42] = 0;
   out_5054413420910978744[43] = 0;
   out_5054413420910978744[44] = 0;
   out_5054413420910978744[45] = 0;
   out_5054413420910978744[46] = 0;
   out_5054413420910978744[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5054413420910978744[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5054413420910978744[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5054413420910978744[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5054413420910978744[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5054413420910978744[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5054413420910978744[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5054413420910978744[54] = 0;
   out_5054413420910978744[55] = 0;
   out_5054413420910978744[56] = 0;
   out_5054413420910978744[57] = 0;
   out_5054413420910978744[58] = 0;
   out_5054413420910978744[59] = 0;
   out_5054413420910978744[60] = 0;
   out_5054413420910978744[61] = 0;
   out_5054413420910978744[62] = 0;
   out_5054413420910978744[63] = 0;
   out_5054413420910978744[64] = 0;
   out_5054413420910978744[65] = 0;
}
void h_14(double *state, double *unused, double *out_6246065433276342271) {
   out_6246065433276342271[0] = state[10];
   out_6246065433276342271[1] = state[11];
   out_6246065433276342271[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1163741908108177099) {
   out_1163741908108177099[0] = 0;
   out_1163741908108177099[1] = 0;
   out_1163741908108177099[2] = 0;
   out_1163741908108177099[3] = 0;
   out_1163741908108177099[4] = 0;
   out_1163741908108177099[5] = 0;
   out_1163741908108177099[6] = 0;
   out_1163741908108177099[7] = 0;
   out_1163741908108177099[8] = 0;
   out_1163741908108177099[9] = 0;
   out_1163741908108177099[10] = 1;
   out_1163741908108177099[11] = 0;
   out_1163741908108177099[12] = 0;
   out_1163741908108177099[13] = 0;
   out_1163741908108177099[14] = 0;
   out_1163741908108177099[15] = 0;
   out_1163741908108177099[16] = 0;
   out_1163741908108177099[17] = 0;
   out_1163741908108177099[18] = 0;
   out_1163741908108177099[19] = 0;
   out_1163741908108177099[20] = 0;
   out_1163741908108177099[21] = 0;
   out_1163741908108177099[22] = 0;
   out_1163741908108177099[23] = 0;
   out_1163741908108177099[24] = 0;
   out_1163741908108177099[25] = 0;
   out_1163741908108177099[26] = 0;
   out_1163741908108177099[27] = 0;
   out_1163741908108177099[28] = 0;
   out_1163741908108177099[29] = 0;
   out_1163741908108177099[30] = 0;
   out_1163741908108177099[31] = 0;
   out_1163741908108177099[32] = 0;
   out_1163741908108177099[33] = 1;
   out_1163741908108177099[34] = 0;
   out_1163741908108177099[35] = 0;
   out_1163741908108177099[36] = 0;
   out_1163741908108177099[37] = 0;
   out_1163741908108177099[38] = 0;
   out_1163741908108177099[39] = 0;
   out_1163741908108177099[40] = 0;
   out_1163741908108177099[41] = 0;
   out_1163741908108177099[42] = 0;
   out_1163741908108177099[43] = 0;
   out_1163741908108177099[44] = 0;
   out_1163741908108177099[45] = 0;
   out_1163741908108177099[46] = 0;
   out_1163741908108177099[47] = 0;
   out_1163741908108177099[48] = 0;
   out_1163741908108177099[49] = 0;
   out_1163741908108177099[50] = 0;
   out_1163741908108177099[51] = 0;
   out_1163741908108177099[52] = 0;
   out_1163741908108177099[53] = 0;
   out_1163741908108177099[54] = 0;
   out_1163741908108177099[55] = 0;
   out_1163741908108177099[56] = 1;
   out_1163741908108177099[57] = 0;
   out_1163741908108177099[58] = 0;
   out_1163741908108177099[59] = 0;
   out_1163741908108177099[60] = 0;
   out_1163741908108177099[61] = 0;
   out_1163741908108177099[62] = 0;
   out_1163741908108177099[63] = 0;
   out_1163741908108177099[64] = 0;
   out_1163741908108177099[65] = 0;
}
void h_33(double *state, double *unused, double *out_7457613365932383325) {
   out_7457613365932383325[0] = state[16];
   out_7457613365932383325[1] = state[17];
   out_7457613365932383325[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7439771323490051434) {
   out_7439771323490051434[0] = 0;
   out_7439771323490051434[1] = 0;
   out_7439771323490051434[2] = 0;
   out_7439771323490051434[3] = 0;
   out_7439771323490051434[4] = 0;
   out_7439771323490051434[5] = 0;
   out_7439771323490051434[6] = 0;
   out_7439771323490051434[7] = 0;
   out_7439771323490051434[8] = 0;
   out_7439771323490051434[9] = 0;
   out_7439771323490051434[10] = 0;
   out_7439771323490051434[11] = 0;
   out_7439771323490051434[12] = 0;
   out_7439771323490051434[13] = 0;
   out_7439771323490051434[14] = 0;
   out_7439771323490051434[15] = 0;
   out_7439771323490051434[16] = 1;
   out_7439771323490051434[17] = 0;
   out_7439771323490051434[18] = 0;
   out_7439771323490051434[19] = 0;
   out_7439771323490051434[20] = 0;
   out_7439771323490051434[21] = 0;
   out_7439771323490051434[22] = 0;
   out_7439771323490051434[23] = 0;
   out_7439771323490051434[24] = 0;
   out_7439771323490051434[25] = 0;
   out_7439771323490051434[26] = 0;
   out_7439771323490051434[27] = 0;
   out_7439771323490051434[28] = 0;
   out_7439771323490051434[29] = 0;
   out_7439771323490051434[30] = 0;
   out_7439771323490051434[31] = 0;
   out_7439771323490051434[32] = 0;
   out_7439771323490051434[33] = 0;
   out_7439771323490051434[34] = 0;
   out_7439771323490051434[35] = 0;
   out_7439771323490051434[36] = 0;
   out_7439771323490051434[37] = 0;
   out_7439771323490051434[38] = 0;
   out_7439771323490051434[39] = 1;
   out_7439771323490051434[40] = 0;
   out_7439771323490051434[41] = 0;
   out_7439771323490051434[42] = 0;
   out_7439771323490051434[43] = 0;
   out_7439771323490051434[44] = 0;
   out_7439771323490051434[45] = 0;
   out_7439771323490051434[46] = 0;
   out_7439771323490051434[47] = 0;
   out_7439771323490051434[48] = 0;
   out_7439771323490051434[49] = 0;
   out_7439771323490051434[50] = 0;
   out_7439771323490051434[51] = 0;
   out_7439771323490051434[52] = 0;
   out_7439771323490051434[53] = 0;
   out_7439771323490051434[54] = 0;
   out_7439771323490051434[55] = 0;
   out_7439771323490051434[56] = 0;
   out_7439771323490051434[57] = 0;
   out_7439771323490051434[58] = 0;
   out_7439771323490051434[59] = 0;
   out_7439771323490051434[60] = 0;
   out_7439771323490051434[61] = 0;
   out_7439771323490051434[62] = 1;
   out_7439771323490051434[63] = 0;
   out_7439771323490051434[64] = 0;
   out_7439771323490051434[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6020406760525914227) {
  H(in_vec, out_6020406760525914227);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9138946898377382373) {
  err_fun(nom_x, delta_x, out_9138946898377382373);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1766051097771838348) {
  inv_err_fun(nom_x, true_x, out_1766051097771838348);
}
void live_H_mod_fun(double *state, double *out_7757453199381973644) {
  H_mod_fun(state, out_7757453199381973644);
}
void live_f_fun(double *state, double dt, double *out_6862179030632812745) {
  f_fun(state,  dt, out_6862179030632812745);
}
void live_F_fun(double *state, double dt, double *out_5806104157926584478) {
  F_fun(state,  dt, out_5806104157926584478);
}
void live_h_4(double *state, double *unused, double *out_4436485360583885785) {
  h_4(state, unused, out_4436485360583885785);
}
void live_H_4(double *state, double *unused, double *out_6123477027156270371) {
  H_4(state, unused, out_6123477027156270371);
}
void live_h_9(double *state, double *unused, double *out_6246065433276342271) {
  h_9(state, unused, out_6246065433276342271);
}
void live_H_9(double *state, double *unused, double *out_1163741908108177099) {
  H_9(state, unused, out_1163741908108177099);
}
void live_h_10(double *state, double *unused, double *out_1526413025883775463) {
  h_10(state, unused, out_1526413025883775463);
}
void live_H_10(double *state, double *unused, double *out_6038771845523629986) {
  H_10(state, unused, out_6038771845523629986);
}
void live_h_12(double *state, double *unused, double *out_6580810709086629191) {
  h_12(state, unused, out_6580810709086629191);
}
void live_H_12(double *state, double *unused, double *out_5942008669510548249) {
  H_12(state, unused, out_5942008669510548249);
}
void live_h_31(double *state, double *unused, double *out_2208032687669611621) {
  h_31(state, unused, out_2208032687669611621);
}
void live_H_31(double *state, double *unused, double *out_4289214318851193830) {
  H_31(state, unused, out_4289214318851193830);
}
void live_h_32(double *state, double *unused, double *out_501696487008393722) {
  h_32(state, unused, out_501696487008393722);
}
void live_H_32(double *state, double *unused, double *out_1244939009647749363) {
  H_32(state, unused, out_1244939009647749363);
}
void live_h_13(double *state, double *unused, double *out_1162208089473883596) {
  h_13(state, unused, out_1162208089473883596);
}
void live_H_13(double *state, double *unused, double *out_5054413420910978744) {
  H_13(state, unused, out_5054413420910978744);
}
void live_h_14(double *state, double *unused, double *out_6246065433276342271) {
  h_14(state, unused, out_6246065433276342271);
}
void live_H_14(double *state, double *unused, double *out_1163741908108177099) {
  H_14(state, unused, out_1163741908108177099);
}
void live_h_33(double *state, double *unused, double *out_7457613365932383325) {
  h_33(state, unused, out_7457613365932383325);
}
void live_H_33(double *state, double *unused, double *out_7439771323490051434) {
  H_33(state, unused, out_7439771323490051434);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
